{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dev-br-analytics2"
		},
		"ORC_GIGAM_ORIGEM_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ORC_GIGAM_ORIGEM'"
		},
		"BLOB_IMAGENS_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "Storage-Imagens-material"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "300"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "RFC_USER_QTQ"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "srvsqecc01.malwee.com.br"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/vtexclient_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_client.parquet",
						"folderPath": "brazil/vtex/Client/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexitems_categories_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_items_categorias.parquet",
						"folderPath": "brazil/vtex/ItemsCategories/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexitems_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_items.parquet",
						"folderPath": "brazil/vtex/Items/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexj_order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order.json",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"orderId": {
							"type": "string"
						},
						"sequence": {
							"type": "string"
						},
						"marketplaceOrderId": {
							"type": "string"
						},
						"marketplaceServicesEndpoint": {
							"type": "string"
						},
						"sellerOrderId": {
							"type": "string"
						},
						"origin": {
							"type": "string"
						},
						"affiliateId": {
							"type": "string"
						},
						"salesChannel": {
							"type": "string"
						},
						"merchantName": {
							"type": "null"
						},
						"status": {
							"type": "string"
						},
						"statusDescription": {
							"type": "string"
						},
						"value": {
							"type": "integer"
						},
						"creationDate": {
							"type": "string"
						},
						"lastChange": {
							"type": "string"
						},
						"orderGroup": {
							"type": "string"
						},
						"totals": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"value": {
										"type": "integer"
									}
								}
							}
						},
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"uniqueId": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"productId": {
										"type": "string"
									},
									"ean": {
										"type": "string"
									},
									"lockId": {
										"type": "string"
									},
									"itemAttachment": {
										"type": "object",
										"properties": {
											"content": {
												"type": "object"
											},
											"name": {
												"type": "null"
											}
										}
									},
									"attachments": {
										"type": "array"
									},
									"quantity": {
										"type": "integer"
									},
									"seller": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"refId": {
										"type": "string"
									},
									"price": {
										"type": "integer"
									},
									"listPrice": {
										"type": "integer"
									},
									"manualPrice": {
										"type": "null"
									},
									"priceTags": {
										"type": "array"
									},
									"imageUrl": {
										"type": "string"
									},
									"detailUrl": {
										"type": "string"
									},
									"components": {
										"type": "array"
									},
									"bundleItems": {
										"type": "array"
									},
									"params": {
										"type": "array"
									},
									"offerings": {
										"type": "array"
									},
									"sellerSku": {
										"type": "string"
									},
									"priceValidUntil": {
										"type": "null"
									},
									"commission": {
										"type": "integer"
									},
									"tax": {
										"type": "integer"
									},
									"preSaleDate": {
										"type": "string"
									},
									"additionalInfo": {
										"type": "object",
										"properties": {
											"brandName": {
												"type": "string"
											},
											"brandId": {
												"type": "string"
											},
											"categoriesIds": {
												"type": "string"
											},
											"categories": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "integer"
														},
														"name": {
															"type": "string"
														}
													}
												}
											},
											"productClusterId": {
												"type": "string"
											},
											"commercialConditionId": {
												"type": "string"
											},
											"dimension": {
												"type": "object",
												"properties": {
													"cubicweight": {
														"type": "number"
													},
													"height": {
														"type": "number"
													},
													"length": {
														"type": "number"
													},
													"weight": {
														"type": "number"
													},
													"width": {
														"type": "number"
													}
												}
											},
											"offeringInfo": {
												"type": "null"
											},
											"offeringType": {
												"type": "null"
											},
											"offeringTypeId": {
												"type": "null"
											}
										}
									},
									"measurementUnit": {
										"type": "string"
									},
									"unitMultiplier": {
										"type": "number"
									},
									"sellingPrice": {
										"type": "integer"
									},
									"isGift": {
										"type": "boolean"
									},
									"shippingPrice": {
										"type": "null"
									},
									"rewardValue": {
										"type": "integer"
									},
									"freightCommission": {
										"type": "integer"
									},
									"priceDefinitions": {
										"type": "null"
									},
									"taxCode": {
										"type": "null"
									},
									"parentItemIndex": {
										"type": "null"
									},
									"parentAssemblyBinding": {
										"type": "null"
									},
									"callCenterOperator": {
										"type": "null"
									},
									"serialNumbers": {
										"type": "null"
									},
									"assemblies": {
										"type": "array"
									},
									"costPrice": {
										"type": "integer"
									}
								}
							}
						},
						"marketplaceItems": {
							"type": "array"
						},
						"clientProfileData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"firstName": {
									"type": "string"
								},
								"lastName": {
									"type": "string"
								},
								"documentType": {
									"type": "string"
								},
								"document": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"corporateName": {
									"type": "null"
								},
								"tradeName": {
									"type": "null"
								},
								"corporateDocument": {
									"type": "null"
								},
								"stateInscription": {
									"type": "null"
								},
								"corporatePhone": {
									"type": "null"
								},
								"isCorporate": {
									"type": "boolean"
								},
								"userProfileId": {
									"type": "string"
								},
								"customerClass": {
									"type": "null"
								}
							}
						},
						"giftRegistryData": {
							"type": "null"
						},
						"marketingData": {
							"type": "null"
						},
						"ratesAndBenefitsData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"rateAndBenefitsIdentifiers": {
									"type": "array"
								}
							}
						},
						"shippingData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"address": {
									"type": "object",
									"properties": {
										"addressType": {
											"type": "string"
										},
										"receiverName": {
											"type": "string"
										},
										"addressId": {
											"type": "string"
										},
										"postalCode": {
											"type": "string"
										},
										"city": {
											"type": "string"
										},
										"state": {
											"type": "string"
										},
										"country": {
											"type": "string"
										},
										"street": {
											"type": "string"
										},
										"number": {
											"type": "string"
										},
										"neighborhood": {
											"type": "string"
										},
										"complement": {
											"type": "null"
										},
										"reference": {
											"type": "null"
										},
										"geoCoordinates": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								},
								"logisticsInfo": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"itemIndex": {
												"type": "integer"
											},
											"selectedSla": {
												"type": "string"
											},
											"lockTTL": {
												"type": "string"
											},
											"price": {
												"type": "integer"
											},
											"listPrice": {
												"type": "integer"
											},
											"sellingPrice": {
												"type": "integer"
											},
											"deliveryWindow": {
												"type": "null"
											},
											"deliveryCompany": {
												"type": "string"
											},
											"shippingEstimate": {
												"type": "string"
											},
											"shippingEstimateDate": {
												"type": "string"
											},
											"slas": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"shippingEstimate": {
															"type": "string"
														},
														"deliveryWindow": {
															"type": "null"
														},
														"price": {
															"type": "integer"
														},
														"deliveryChannel": {
															"type": "string"
														},
														"pickupStoreInfo": {
															"type": "object",
															"properties": {
																"additionalInfo": {
																	"type": "null"
																},
																"address": {
																	"type": "null"
																},
																"dockId": {
																	"type": "null"
																},
																"friendlyName": {
																	"type": "null"
																},
																"isPickupStore": {
																	"type": "boolean"
																}
															}
														},
														"polygonName": {
															"type": "null"
														},
														"lockTTL": {
															"type": "string"
														},
														"pickupPointId": {
															"type": "null"
														},
														"transitTime": {
															"type": "string"
														}
													}
												}
											},
											"shipsTo": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"deliveryIds": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"courierId": {
															"type": "string"
														},
														"courierName": {
															"type": "string"
														},
														"dockId": {
															"type": "string"
														},
														"quantity": {
															"type": "integer"
														},
														"warehouseId": {
															"type": "string"
														},
														"accountCarrierName": {
															"type": "null"
														}
													}
												}
											},
											"deliveryChannel": {
												"type": "string"
											},
											"pickupStoreInfo": {
												"type": "object",
												"properties": {
													"additionalInfo": {
														"type": "null"
													},
													"address": {
														"type": "null"
													},
													"dockId": {
														"type": "null"
													},
													"friendlyName": {
														"type": "null"
													},
													"isPickupStore": {
														"type": "boolean"
													}
												}
											},
											"addressId": {
												"type": "string"
											},
											"polygonName": {
												"type": "null"
											},
											"pickupPointId": {
												"type": "null"
											},
											"transitTime": {
												"type": "string"
											}
										}
									}
								},
								"trackingHints": {
									"type": "null"
								},
								"selectedAddresses": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"addressId": {
												"type": "string"
											},
											"addressType": {
												"type": "string"
											},
											"receiverName": {
												"type": "string"
											},
											"street": {
												"type": "string"
											},
											"number": {
												"type": "string"
											},
											"complement": {
												"type": "null"
											},
											"neighborhood": {
												"type": "string"
											},
											"postalCode": {
												"type": "string"
											},
											"city": {
												"type": "string"
											},
											"state": {
												"type": "string"
											},
											"country": {
												"type": "string"
											},
											"reference": {
												"type": "null"
											},
											"geoCoordinates": {
												"type": "array",
												"items": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						},
						"paymentData": {
							"type": "object",
							"properties": {
								"giftCards": {
									"type": "array"
								},
								"transactions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"isActive": {
												"type": "boolean"
											},
											"transactionId": {
												"type": "string"
											},
											"merchantName": {
												"type": "string"
											},
											"payments": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"paymentSystem": {
															"type": "string"
														},
														"paymentSystemName": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														},
														"installments": {
															"type": "integer"
														},
														"referenceValue": {
															"type": "integer"
														},
														"cardHolder": {
															"type": "null"
														},
														"cardNumber": {
															"type": "null"
														},
														"firstDigits": {
															"type": "string"
														},
														"lastDigits": {
															"type": "string"
														},
														"cvv2": {
															"type": "null"
														},
														"expireMonth": {
															"type": "null"
														},
														"expireYear": {
															"type": "null"
														},
														"url": {
															"type": "null"
														},
														"giftCardId": {
															"type": "null"
														},
														"giftCardName": {
															"type": "null"
														},
														"giftCardCaption": {
															"type": "null"
														},
														"redemptionCode": {
															"type": "null"
														},
														"group": {
															"type": "string"
														},
														"tid": {
															"type": "string"
														},
														"dueDate": {
															"type": "null"
														},
														"connectorResponses": {
															"type": "object",
															"properties": {
																"Tid": {
																	"type": "string"
																},
																"ReturnCode": {
																	"type": "null"
																},
																"Message": {
																	"type": "null"
																},
																"authId": {
																	"type": "string"
																},
																"nsu": {
																	"type": "string"
																},
																"acquirer": {
																	"type": "string"
																}
															}
														},
														"giftCardProvider": {
															"type": "null"
														},
														"giftCardAsDiscount": {
															"type": "null"
														},
														"koinUrl": {
															"type": "null"
														},
														"accountId": {
															"type": "string"
														},
														"parentAccountId": {
															"type": "string"
														},
														"bankIssuedInvoiceIdentificationNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceIdentificationNumberFormatted": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeType": {
															"type": "null"
														},
														"billingAddress": {
															"type": "object",
															"properties": {
																"postalCode": {
																	"type": "string"
																},
																"city": {
																	"type": "string"
																},
																"state": {
																	"type": "string"
																},
																"country": {
																	"type": "string"
																},
																"street": {
																	"type": "string"
																},
																"number": {
																	"type": "string"
																},
																"neighborhood": {
																	"type": "string"
																},
																"complement": {
																	"type": "null"
																},
																"reference": {
																	"type": "null"
																},
																"geoCoordinates": {
																	"type": "array",
																	"items": {
																		"type": "number"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"packageAttachment": {
							"type": "object",
							"properties": {
								"packages": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"items": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"itemIndex": {
															"type": "integer"
														},
														"quantity": {
															"type": "integer"
														},
														"price": {
															"type": "integer"
														},
														"description": {
															"type": "null"
														},
														"unitMultiplier": {
															"type": "number"
														}
													}
												}
											},
											"courier": {
												"type": "string"
											},
											"invoiceNumber": {
												"type": "string"
											},
											"invoiceValue": {
												"type": "integer"
											},
											"invoiceUrl": {
												"type": "null"
											},
											"issuanceDate": {
												"type": "string"
											},
											"trackingNumber": {
												"type": "string"
											},
											"invoiceKey": {
												"type": "string"
											},
											"trackingUrl": {
												"type": "string"
											},
											"embeddedInvoice": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"courierStatus": {
												"type": "object",
												"properties": {
													"status": {
														"type": "string"
													},
													"finished": {
														"type": "boolean"
													},
													"deliveredDate": {
														"type": "null"
													},
													"data": {
														"type": "array"
													}
												}
											},
											"cfop": {
												"type": "null"
											},
											"restitutions": {
												"type": "object"
											},
											"volumes": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"sellers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"logo": {
										"type": "string"
									},
									"fulfillmentEndpoint": {
										"type": "string"
									}
								}
							}
						},
						"callCenterOperatorData": {
							"type": "null"
						},
						"followUpEmail": {
							"type": "string"
						},
						"lastMessage": {
							"type": "null"
						},
						"hostname": {
							"type": "string"
						},
						"invoiceData": {
							"type": "null"
						},
						"changesAttachment": {
							"type": "null"
						},
						"openTextField": {
							"type": "null"
						},
						"roundingError": {
							"type": "integer"
						},
						"orderFormId": {
							"type": "string"
						},
						"commercialConditionData": {
							"type": "null"
						},
						"isCompleted": {
							"type": "boolean"
						},
						"customData": {
							"type": "null"
						},
						"storePreferencesData": {
							"type": "object",
							"properties": {
								"countryCode": {
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"currencyFormatInfo": {
									"type": "object",
									"properties": {
										"CurrencyDecimalDigits": {
											"type": "integer"
										},
										"CurrencyDecimalSeparator": {
											"type": "string"
										},
										"CurrencyGroupSeparator": {
											"type": "string"
										},
										"CurrencyGroupSize": {
											"type": "integer"
										},
										"StartsWithCurrencySymbol": {
											"type": "boolean"
										}
									}
								},
								"currencyLocale": {
									"type": "integer"
								},
								"currencySymbol": {
									"type": "string"
								},
								"timeZone": {
									"type": "string"
								}
							}
						},
						"allowCancellation": {
							"type": "boolean"
						},
						"allowEdition": {
							"type": "boolean"
						},
						"isCheckedIn": {
							"type": "boolean"
						},
						"marketplace": {
							"type": "object",
							"properties": {
								"baseURL": {
									"type": "string"
								},
								"isCertified": {
									"type": "null"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"authorizedDate": {
							"type": "string"
						},
						"invoicedDate": {
							"type": "string"
						},
						"cancelReason": {
							"type": "null"
						},
						"itemMetadata": {
							"type": "object",
							"properties": {
								"Items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Id": {
												"type": "string"
											},
											"Seller": {
												"type": "string"
											},
											"Name": {
												"type": "string"
											},
											"SkuName": {
												"type": "string"
											},
											"ProductId": {
												"type": "string"
											},
											"RefId": {
												"type": "string"
											},
											"Ean": {
												"type": "string"
											},
											"ImageUrl": {
												"type": "string"
											},
											"DetailUrl": {
												"type": "string"
											},
											"AssemblyOptions": {
												"type": "array"
											}
										}
									}
								}
							}
						},
						"subscriptionData": {
							"type": "null"
						},
						"taxData": {
							"type": "null"
						},
						"checkedInPickupPointId": {
							"type": "null"
						},
						"cancellationData": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexj_order_total')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order_total.json",
						"folderPath": "brazil/vtex/1100050750047-01/",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"orderId": {
							"type": "string"
						},
						"sequence": {
							"type": "string"
						},
						"marketplaceOrderId": {
							"type": "string"
						},
						"marketplaceServicesEndpoint": {
							"type": "string"
						},
						"sellerOrderId": {
							"type": "string"
						},
						"origin": {
							"type": "string"
						},
						"affiliateId": {
							"type": "string"
						},
						"salesChannel": {
							"type": "string"
						},
						"merchantName": {
							"type": "null"
						},
						"status": {
							"type": "string"
						},
						"statusDescription": {
							"type": "string"
						},
						"value": {
							"type": "integer"
						},
						"creationDate": {
							"type": "string"
						},
						"lastChange": {
							"type": "string"
						},
						"orderGroup": {
							"type": "string"
						},
						"totals": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"value": {
										"type": "integer"
									}
								}
							}
						},
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"uniqueId": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"productId": {
										"type": "string"
									},
									"ean": {
										"type": "string"
									},
									"lockId": {
										"type": "string"
									},
									"itemAttachment": {
										"type": "object",
										"properties": {
											"content": {
												"type": "object"
											},
											"name": {
												"type": "null"
											}
										}
									},
									"attachments": {
										"type": "array"
									},
									"quantity": {
										"type": "integer"
									},
									"seller": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"refId": {
										"type": "string"
									},
									"price": {
										"type": "integer"
									},
									"listPrice": {
										"type": "integer"
									},
									"manualPrice": {
										"type": "null"
									},
									"priceTags": {
										"type": "array"
									},
									"imageUrl": {
										"type": "string"
									},
									"detailUrl": {
										"type": "string"
									},
									"components": {
										"type": "array"
									},
									"bundleItems": {
										"type": "array"
									},
									"params": {
										"type": "array"
									},
									"offerings": {
										"type": "array"
									},
									"sellerSku": {
										"type": "string"
									},
									"priceValidUntil": {
										"type": "null"
									},
									"commission": {
										"type": "integer"
									},
									"tax": {
										"type": "integer"
									},
									"preSaleDate": {
										"type": "string"
									},
									"additionalInfo": {
										"type": "object",
										"properties": {
											"brandName": {
												"type": "string"
											},
											"brandId": {
												"type": "string"
											},
											"categoriesIds": {
												"type": "string"
											},
											"categories": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "integer"
														},
														"name": {
															"type": "string"
														}
													}
												}
											},
											"productClusterId": {
												"type": "string"
											},
											"commercialConditionId": {
												"type": "string"
											},
											"dimension": {
												"type": "object",
												"properties": {
													"cubicweight": {
														"type": "number"
													},
													"height": {
														"type": "number"
													},
													"length": {
														"type": "number"
													},
													"weight": {
														"type": "number"
													},
													"width": {
														"type": "number"
													}
												}
											},
											"offeringInfo": {
												"type": "null"
											},
											"offeringType": {
												"type": "null"
											},
											"offeringTypeId": {
												"type": "null"
											}
										}
									},
									"measurementUnit": {
										"type": "string"
									},
									"unitMultiplier": {
										"type": "number"
									},
									"sellingPrice": {
										"type": "integer"
									},
									"isGift": {
										"type": "boolean"
									},
									"shippingPrice": {
										"type": "null"
									},
									"rewardValue": {
										"type": "integer"
									},
									"freightCommission": {
										"type": "integer"
									},
									"priceDefinitions": {
										"type": "null"
									},
									"taxCode": {
										"type": "null"
									},
									"parentItemIndex": {
										"type": "null"
									},
									"parentAssemblyBinding": {
										"type": "null"
									},
									"callCenterOperator": {
										"type": "null"
									},
									"serialNumbers": {
										"type": "null"
									},
									"assemblies": {
										"type": "array"
									},
									"costPrice": {
										"type": "integer"
									}
								}
							}
						},
						"marketplaceItems": {
							"type": "array"
						},
						"clientProfileData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"firstName": {
									"type": "string"
								},
								"lastName": {
									"type": "string"
								},
								"documentType": {
									"type": "string"
								},
								"document": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"corporateName": {
									"type": "null"
								},
								"tradeName": {
									"type": "null"
								},
								"corporateDocument": {
									"type": "null"
								},
								"stateInscription": {
									"type": "null"
								},
								"corporatePhone": {
									"type": "null"
								},
								"isCorporate": {
									"type": "boolean"
								},
								"userProfileId": {
									"type": "string"
								},
								"customerClass": {
									"type": "null"
								}
							}
						},
						"giftRegistryData": {
							"type": "null"
						},
						"marketingData": {
							"type": "null"
						},
						"ratesAndBenefitsData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"rateAndBenefitsIdentifiers": {
									"type": "array"
								}
							}
						},
						"shippingData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"address": {
									"type": "object",
									"properties": {
										"addressType": {
											"type": "string"
										},
										"receiverName": {
											"type": "string"
										},
										"addressId": {
											"type": "string"
										},
										"postalCode": {
											"type": "string"
										},
										"city": {
											"type": "string"
										},
										"state": {
											"type": "string"
										},
										"country": {
											"type": "string"
										},
										"street": {
											"type": "string"
										},
										"number": {
											"type": "string"
										},
										"neighborhood": {
											"type": "string"
										},
										"complement": {
											"type": "null"
										},
										"reference": {
											"type": "null"
										},
										"geoCoordinates": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								},
								"logisticsInfo": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"itemIndex": {
												"type": "integer"
											},
											"selectedSla": {
												"type": "string"
											},
											"lockTTL": {
												"type": "string"
											},
											"price": {
												"type": "integer"
											},
											"listPrice": {
												"type": "integer"
											},
											"sellingPrice": {
												"type": "integer"
											},
											"deliveryWindow": {
												"type": "null"
											},
											"deliveryCompany": {
												"type": "string"
											},
											"shippingEstimate": {
												"type": "string"
											},
											"shippingEstimateDate": {
												"type": "string"
											},
											"slas": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"shippingEstimate": {
															"type": "string"
														},
														"deliveryWindow": {
															"type": "null"
														},
														"price": {
															"type": "integer"
														},
														"deliveryChannel": {
															"type": "string"
														},
														"pickupStoreInfo": {
															"type": "object",
															"properties": {
																"additionalInfo": {
																	"type": "null"
																},
																"address": {
																	"type": "null"
																},
																"dockId": {
																	"type": "null"
																},
																"friendlyName": {
																	"type": "null"
																},
																"isPickupStore": {
																	"type": "boolean"
																}
															}
														},
														"polygonName": {
															"type": "null"
														},
														"lockTTL": {
															"type": "string"
														},
														"pickupPointId": {
															"type": "null"
														},
														"transitTime": {
															"type": "string"
														}
													}
												}
											},
											"shipsTo": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"deliveryIds": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"courierId": {
															"type": "string"
														},
														"courierName": {
															"type": "string"
														},
														"dockId": {
															"type": "string"
														},
														"quantity": {
															"type": "integer"
														},
														"warehouseId": {
															"type": "string"
														},
														"accountCarrierName": {
															"type": "null"
														}
													}
												}
											},
											"deliveryChannel": {
												"type": "string"
											},
											"pickupStoreInfo": {
												"type": "object",
												"properties": {
													"additionalInfo": {
														"type": "null"
													},
													"address": {
														"type": "null"
													},
													"dockId": {
														"type": "null"
													},
													"friendlyName": {
														"type": "null"
													},
													"isPickupStore": {
														"type": "boolean"
													}
												}
											},
											"addressId": {
												"type": "string"
											},
											"polygonName": {
												"type": "null"
											},
											"pickupPointId": {
												"type": "null"
											},
											"transitTime": {
												"type": "string"
											}
										}
									}
								},
								"trackingHints": {
									"type": "null"
								},
								"selectedAddresses": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"addressId": {
												"type": "string"
											},
											"addressType": {
												"type": "string"
											},
											"receiverName": {
												"type": "string"
											},
											"street": {
												"type": "string"
											},
											"number": {
												"type": "string"
											},
											"complement": {
												"type": "null"
											},
											"neighborhood": {
												"type": "string"
											},
											"postalCode": {
												"type": "string"
											},
											"city": {
												"type": "string"
											},
											"state": {
												"type": "string"
											},
											"country": {
												"type": "string"
											},
											"reference": {
												"type": "null"
											},
											"geoCoordinates": {
												"type": "array",
												"items": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						},
						"paymentData": {
							"type": "object",
							"properties": {
								"giftCards": {
									"type": "array"
								},
								"transactions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"isActive": {
												"type": "boolean"
											},
											"transactionId": {
												"type": "string"
											},
											"merchantName": {
												"type": "string"
											},
											"payments": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"paymentSystem": {
															"type": "string"
														},
														"paymentSystemName": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														},
														"installments": {
															"type": "integer"
														},
														"referenceValue": {
															"type": "integer"
														},
														"cardHolder": {
															"type": "null"
														},
														"cardNumber": {
															"type": "null"
														},
														"firstDigits": {
															"type": "string"
														},
														"lastDigits": {
															"type": "string"
														},
														"cvv2": {
															"type": "null"
														},
														"expireMonth": {
															"type": "null"
														},
														"expireYear": {
															"type": "null"
														},
														"url": {
															"type": "null"
														},
														"giftCardId": {
															"type": "null"
														},
														"giftCardName": {
															"type": "null"
														},
														"giftCardCaption": {
															"type": "null"
														},
														"redemptionCode": {
															"type": "null"
														},
														"group": {
															"type": "string"
														},
														"tid": {
															"type": "string"
														},
														"dueDate": {
															"type": "null"
														},
														"connectorResponses": {
															"type": "object",
															"properties": {
																"Tid": {
																	"type": "string"
																},
																"ReturnCode": {
																	"type": "null"
																},
																"Message": {
																	"type": "null"
																},
																"authId": {
																	"type": "string"
																},
																"nsu": {
																	"type": "string"
																},
																"acquirer": {
																	"type": "string"
																}
															}
														},
														"giftCardProvider": {
															"type": "null"
														},
														"giftCardAsDiscount": {
															"type": "null"
														},
														"koinUrl": {
															"type": "null"
														},
														"accountId": {
															"type": "string"
														},
														"parentAccountId": {
															"type": "string"
														},
														"bankIssuedInvoiceIdentificationNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceIdentificationNumberFormatted": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeType": {
															"type": "null"
														},
														"billingAddress": {
															"type": "object",
															"properties": {
																"postalCode": {
																	"type": "string"
																},
																"city": {
																	"type": "string"
																},
																"state": {
																	"type": "string"
																},
																"country": {
																	"type": "string"
																},
																"street": {
																	"type": "string"
																},
																"number": {
																	"type": "string"
																},
																"neighborhood": {
																	"type": "string"
																},
																"complement": {
																	"type": "null"
																},
																"reference": {
																	"type": "null"
																},
																"geoCoordinates": {
																	"type": "array",
																	"items": {
																		"type": "number"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"packageAttachment": {
							"type": "object",
							"properties": {
								"packages": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"items": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"itemIndex": {
															"type": "integer"
														},
														"quantity": {
															"type": "integer"
														},
														"price": {
															"type": "integer"
														},
														"description": {
															"type": "null"
														},
														"unitMultiplier": {
															"type": "number"
														}
													}
												}
											},
											"courier": {
												"type": "string"
											},
											"invoiceNumber": {
												"type": "string"
											},
											"invoiceValue": {
												"type": "integer"
											},
											"invoiceUrl": {
												"type": "null"
											},
											"issuanceDate": {
												"type": "string"
											},
											"trackingNumber": {
												"type": "string"
											},
											"invoiceKey": {
												"type": "string"
											},
											"trackingUrl": {
												"type": "string"
											},
											"embeddedInvoice": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"courierStatus": {
												"type": "object",
												"properties": {
													"status": {
														"type": "string"
													},
													"finished": {
														"type": "boolean"
													},
													"deliveredDate": {
														"type": "null"
													},
													"data": {
														"type": "array"
													}
												}
											},
											"cfop": {
												"type": "null"
											},
											"restitutions": {
												"type": "object"
											},
											"volumes": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"sellers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"logo": {
										"type": "string"
									},
									"fulfillmentEndpoint": {
										"type": "string"
									}
								}
							}
						},
						"callCenterOperatorData": {
							"type": "null"
						},
						"followUpEmail": {
							"type": "string"
						},
						"lastMessage": {
							"type": "null"
						},
						"hostname": {
							"type": "string"
						},
						"invoiceData": {
							"type": "null"
						},
						"changesAttachment": {
							"type": "null"
						},
						"openTextField": {
							"type": "null"
						},
						"roundingError": {
							"type": "integer"
						},
						"orderFormId": {
							"type": "string"
						},
						"commercialConditionData": {
							"type": "null"
						},
						"isCompleted": {
							"type": "boolean"
						},
						"customData": {
							"type": "null"
						},
						"storePreferencesData": {
							"type": "object",
							"properties": {
								"countryCode": {
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"currencyFormatInfo": {
									"type": "object",
									"properties": {
										"CurrencyDecimalDigits": {
											"type": "integer"
										},
										"CurrencyDecimalSeparator": {
											"type": "string"
										},
										"CurrencyGroupSeparator": {
											"type": "string"
										},
										"CurrencyGroupSize": {
											"type": "integer"
										},
										"StartsWithCurrencySymbol": {
											"type": "boolean"
										}
									}
								},
								"currencyLocale": {
									"type": "integer"
								},
								"currencySymbol": {
									"type": "string"
								},
								"timeZone": {
									"type": "string"
								}
							}
						},
						"allowCancellation": {
							"type": "boolean"
						},
						"allowEdition": {
							"type": "boolean"
						},
						"isCheckedIn": {
							"type": "boolean"
						},
						"marketplace": {
							"type": "object",
							"properties": {
								"baseURL": {
									"type": "string"
								},
								"isCertified": {
									"type": "null"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"authorizedDate": {
							"type": "string"
						},
						"invoicedDate": {
							"type": "string"
						},
						"cancelReason": {
							"type": "null"
						},
						"itemMetadata": {
							"type": "object",
							"properties": {
								"Items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Id": {
												"type": "string"
											},
											"Seller": {
												"type": "string"
											},
											"Name": {
												"type": "string"
											},
											"SkuName": {
												"type": "string"
											},
											"ProductId": {
												"type": "string"
											},
											"RefId": {
												"type": "string"
											},
											"Ean": {
												"type": "string"
											},
											"ImageUrl": {
												"type": "string"
											},
											"DetailUrl": {
												"type": "string"
											},
											"AssemblyOptions": {
												"type": "array"
											}
										}
									}
								}
							}
						},
						"subscriptionData": {
							"type": "null"
						},
						"taxData": {
							"type": "null"
						},
						"checkedInPickupPointId": {
							"type": "null"
						},
						"cancellationData": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexorder_totals_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_order_totals.parquet",
						"folderPath": "brazil/vtex/Order_Total/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "orderId",
						"type": "UTF8"
					},
					{
						"name": "sequence",
						"type": "UTF8"
					},
					{
						"name": "marketplaceOrderId",
						"type": "UTF8"
					},
					{
						"name": "sellerOrderId",
						"type": "UTF8"
					},
					{
						"name": "origin",
						"type": "UTF8"
					},
					{
						"name": "affiliateId",
						"type": "UTF8"
					},
					{
						"name": "salesChannel",
						"type": "UTF8"
					},
					{
						"name": "merchantName",
						"type": "UTF8"
					},
					{
						"name": "status",
						"type": "UTF8"
					},
					{
						"name": "statusDescription",
						"type": "UTF8"
					},
					{
						"name": "value",
						"type": "UTF8"
					},
					{
						"name": "creationDate",
						"type": "UTF8"
					},
					{
						"name": "orderGroup",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexpayment_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtext_payment.parquet",
						"folderPath": "brazil/vtex/Payment/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexshippingLogistical_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_shipping_logInfo.parquet",
						"folderPath": "brazil/vtex/ShippingLogisticInfo/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vtexshipping_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_shipping.parquet",
						"folderPath": "brazil/vtex/Shipping/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOB_IMAGENS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('BLOB_IMAGENS_properties_typeProperties_connectionString_secretName')]",
						"secretVersion": ""
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORC_GIGAM_ORIGEM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('ORC_GIGAM_ORIGEM_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ir-dev-malwee2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAP_TABLE_ORIGEM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "con-malwee-sap-ecc",
						"secretVersion": ""
					},
					"server": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_systemNumber')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VTEX_ORDER_03_DETAILS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"X-VTEX-API-AppToken": {
													"value": "@variables('AppToken')",
													"type": "Expression"
												},
												"x-vtex-api-appkey": {
													"value": "@variables('AppKey')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestVTEX",
											"type": "DatasetReference",
											"parameters": {
												"ParRelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_HEADER_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_ORDER_HEADER_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_TOTALS_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sequence']"
													},
													"sink": {
														"name": "sequence",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['marketplaceOrderId']"
													},
													"sink": {
														"name": "marketplaceOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sellerOrderId']"
													},
													"sink": {
														"name": "sellerOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['origin']"
													},
													"sink": {
														"name": "origin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['affiliateId']"
													},
													"sink": {
														"name": "affiliateId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['salesChannel']"
													},
													"sink": {
														"name": "salesChannel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['merchantName']"
													},
													"sink": {
														"name": "merchantName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['status']"
													},
													"sink": {
														"name": "status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['statusDescription']"
													},
													"sink": {
														"name": "statusDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['creationDate']"
													},
													"sink": {
														"name": "creationDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderGroup']"
													},
													"sink": {
														"name": "orderGroup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_TOTALS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_ITEMS_PARQUET_CLEANSGIN",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "total_items_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "total_items_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['value']"
													},
													"sink": {
														"name": "total_items_value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['totals']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_CLIENT_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['uniqueId']"
													},
													"sink": {
														"name": "uniqueid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ean']"
													},
													"sink": {
														"name": "ean",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lockId']"
													},
													"sink": {
														"name": "lockId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['quantity']"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['seller']"
													},
													"sink": {
														"name": "seller",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refId']"
													},
													"sink": {
														"name": "refId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imageUrl']"
													},
													"sink": {
														"name": "imageUrl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['brandName']"
													},
													"sink": {
														"name": "brandName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['brandId']"
													},
													"sink": {
														"name": "brandId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['categoriesIds']"
													},
													"sink": {
														"name": "categoriesIds",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['categories'][0]['id']"
													},
													"sink": {
														"name": "categories_id_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['categories'][0]['name']"
													},
													"sink": {
														"name": "categories_name_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['id']"
													},
													"sink": {
														"name": "categories_id_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['name']"
													},
													"sink": {
														"name": "categories_name_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][2]['id']"
													},
													"sink": {
														"name": "categories_id_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][2]['name']"
													},
													"sink": {
														"name": "categories_name_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['items']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_CLIENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_PAYMENT_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['email']"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['firstName']"
													},
													"sink": {
														"name": "firstName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['lastName']"
													},
													"sink": {
														"name": "lastName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['documentType']"
													},
													"sink": {
														"name": "documentType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['document']"
													},
													"sink": {
														"name": "document",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['phone']"
													},
													"sink": {
														"name": "phone",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_client_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_PAYMENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['payments'][0]['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['paymentSystemName']"
													},
													"sink": {
														"name": "paymentSystemName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['paymentSystem']"
													},
													"sink": {
														"name": "paymentSystem",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['installments']"
													},
													"sink": {
														"name": "installments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['referenceValue']"
													},
													"sink": {
														"name": "referenceValue",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "OrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"collectionReference": "$['paymentData']['transactions']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_payment_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_CLEASING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['addressType']"
													},
													"sink": {
														"name": "addressType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['receiverName']"
													},
													"sink": {
														"name": "receiverName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['addressId']"
													},
													"sink": {
														"name": "addressId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['postalCode']"
													},
													"sink": {
														"name": "postalCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['city']"
													},
													"sink": {
														"name": "city",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['state']"
													},
													"sink": {
														"name": "state",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['country']"
													},
													"sink": {
														"name": "country",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['number']"
													},
													"sink": {
														"name": "number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['neighborhood']"
													},
													"sink": {
														"name": "neighborhood",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['complement']"
													},
													"sink": {
														"name": "complement",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['reference']"
													},
													"sink": {
														"name": "reference",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates']"
													},
													"sink": {
														"name": "geoCoordinates_X",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates'][1]"
													},
													"sink": {
														"name": "geoCoordinates_Y",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['itemIndex']"
													},
													"sink": {
														"name": "itemIndex",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['selectedSla']"
													},
													"sink": {
														"name": "selectedSla",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['slas'][0]['lockTTL']"
													},
													"sink": {
														"name": "lockTTL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sellingPrice']"
													},
													"sink": {
														"name": "sellingPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['deliveryWindow']"
													},
													"sink": {
														"name": "deliveryWindow",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['deliveryCompany']"
													},
													"sink": {
														"name": "deliveryCompany",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shippingEstimate']"
													},
													"sink": {
														"name": "shippingEstimate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shippingEstimateDate']"
													},
													"sink": {
														"name": "shippingEstimateDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "OrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['shippingData']['logisticsInfo']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_HEADER_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_HEADER_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_header.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_TOTALS_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_TOTALS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_PAYMENT_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_PAYMENT_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_payment_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_payment.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_CLEASING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_ITEMS_PARQUET_CLEANSGIN",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_ITEMS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_items.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_CLIENT_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_CLIENT_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_client_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_client.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@concat(\nactivity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\npipeline().parameters.ParNumeroOrder)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppToken",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppToken",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_1\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppKey",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppKey",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_2\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParNumeroOrder": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					},
					"DataHoraProcessamento": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VTEX_ORDER_03_DETAILS_V3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"X-VTEX-API-AppToken": {
													"value": "@variables('AppToken')",
													"type": "Expression"
												},
												"x-vtex-api-appkey": {
													"value": "@variables('AppKey')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestVTEX",
											"type": "DatasetReference",
											"parameters": {
												"ParRelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_HEADER_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_TOTALS_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sequence']"
													},
													"sink": {
														"name": "sequence",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['marketplaceOrderId']"
													},
													"sink": {
														"name": "marketplaceOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sellerOrderId']"
													},
													"sink": {
														"name": "sellerOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['origin']"
													},
													"sink": {
														"name": "origin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['affiliateId']"
													},
													"sink": {
														"name": "affiliateId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['salesChannel']"
													},
													"sink": {
														"name": "salesChannel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['merchantName']"
													},
													"sink": {
														"name": "merchantName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['status']"
													},
													"sink": {
														"name": "status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['statusDescription']"
													},
													"sink": {
														"name": "statusDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['creationDate']"
													},
													"sink": {
														"name": "creationDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderGroup']"
													},
													"sink": {
														"name": "orderGroup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_TOTALS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_ITEMS_PARQUET_CLEANSGIN",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "total_items_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "total_items_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['value']"
													},
													"sink": {
														"name": "total_items_value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['totals']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_CLIENT_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['uniqueId']"
													},
													"sink": {
														"name": "uniqueid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ean']"
													},
													"sink": {
														"name": "ean",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lockId']"
													},
													"sink": {
														"name": "lockId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['quantity']"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['seller']"
													},
													"sink": {
														"name": "seller",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refId']"
													},
													"sink": {
														"name": "refId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imageUrl']"
													},
													"sink": {
														"name": "imageUrl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['brandName']"
													},
													"sink": {
														"name": "brandName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['brandId']"
													},
													"sink": {
														"name": "brandId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categoriesIds']"
													},
													"sink": {
														"name": "categoriesIds",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][0]['id']"
													},
													"sink": {
														"name": "categories_id_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][0]['name']"
													},
													"sink": {
														"name": "categories_name_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['name']"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['id']"
													},
													"sink": {
														"name": "categories_id_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['name']"
													},
													"sink": {
														"name": "categories_name_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][2]['id']"
													},
													"sink": {
														"name": "categories_id_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][2]['name']"
													},
													"sink": {
														"name": "categories_name_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['items']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_CLIENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_PAYMENT_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['email']"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['firstName']"
													},
													"sink": {
														"name": "firstName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['lastName']"
													},
													"sink": {
														"name": "lastName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['documentType']"
													},
													"sink": {
														"name": "documentType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['document']"
													},
													"sink": {
														"name": "document",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['phone']"
													},
													"sink": {
														"name": "phone",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_client_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_PAYMENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['payments'][0]['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['paymentSystemName']"
													},
													"sink": {
														"name": "paymentSystemName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['paymentSystem']"
													},
													"sink": {
														"name": "paymentSystem",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['installments']"
													},
													"sink": {
														"name": "installments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['referenceValue']"
													},
													"sink": {
														"name": "referenceValue",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "OrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"collectionReference": "$['paymentData']['transactions']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_payment_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_CLEASING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['addressType']"
													},
													"sink": {
														"name": "addressType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['receiverName']"
													},
													"sink": {
														"name": "receiverName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['addressId']"
													},
													"sink": {
														"name": "addressId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['postalCode']"
													},
													"sink": {
														"name": "postalCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['city']"
													},
													"sink": {
														"name": "city",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['state']"
													},
													"sink": {
														"name": "state",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['country']"
													},
													"sink": {
														"name": "country",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['number']"
													},
													"sink": {
														"name": "number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['neighborhood']"
													},
													"sink": {
														"name": "neighborhood",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['complement']"
													},
													"sink": {
														"name": "complement",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['reference']"
													},
													"sink": {
														"name": "reference",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates']"
													},
													"sink": {
														"name": "geoCoordinates_X",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates'][1]"
													},
													"sink": {
														"name": "geoCoordinates_Y",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['itemIndex']"
													},
													"sink": {
														"name": "itemIndex",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['selectedSla']"
													},
													"sink": {
														"name": "selectedSla",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['slas'][0]['lockTTL']"
													},
													"sink": {
														"name": "lockTTL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sellingPrice']"
													},
													"sink": {
														"name": "sellingPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['deliveryWindow']"
													},
													"sink": {
														"name": "deliveryWindow",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['deliveryCompany']"
													},
													"sink": {
														"name": "deliveryCompany",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shippingEstimate']"
													},
													"sink": {
														"name": "shippingEstimate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shippingEstimateDate']"
													},
													"sink": {
														"name": "shippingEstimateDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "OrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['shippingData']['logisticsInfo']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_HEADER_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_HEADER_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_header.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_TOTALS_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_TOTALS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_PAYMENT_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_PAYMENT_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_payment_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_payment.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_CLEASING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_ITEMS_PARQUET_CLEANSGIN",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_ITEMS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_items.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_CLIENT_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_CLIENT_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_client_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_client.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "PLogADFItemAPI",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_HEADER_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFOrderAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_ORDER": {
												"value": {
													"value": "@pipeline().parameters.ParNumeroOrder",
													"type": "Expression"
												},
												"type": "String"
											},
											"URL_ORDEM": {
												"value": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@concat(\nactivity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\npipeline().parameters.ParNumeroOrder)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppToken",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppToken",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_1\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppKey",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppKey",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_2\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParNumeroOrder": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					},
					"DataHoraProcessamento": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VTEX_ORDER_03_TOTAL_PAGINA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@variables('RalativeURL')",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LimpaTabelaOrderList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "AppKey",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:00:30",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(pipeline().parameters.DataHoraProcessamento,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"X-VTEX-API-AppToken": {
													"value": "@variables('AppToken')",
													"type": "Expression"
												},
												"x-vtex-api-appkey": {
													"value": "@variables('AppKey')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestVTEX",
											"type": "DatasetReference",
											"parameters": {
												"ParRelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(pipeline().parameters.DataProcessamento,0,4),'/',\nsubstring(pipeline().parameters.DataProcessamento,5,2),'/',\nsubstring(pipeline().parameters.DataProcessamento,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,\n'_',\nsubstring(pipeline().parameters.DataHoraProcessamento,0,4),\nsubstring(pipeline().parameters.DataHoraProcessamento,5,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,8,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,11,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,14,2),\n'_page_',\nstring(pipeline().parameters.ParPagina),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\n'[',\npipeline().parameters.DataInicioOrderVTEX,\n' TO ',\npipeline().parameters.DataFimOrderVtex,\n']',\nactivity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_3,\n'100',\nactivity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,\nstring(pipeline().parameters.ParPagina)\n)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DataIngestao",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(pipeline().parameters.DataHoraProcessamento,0,4),'/',substring(pipeline().parameters.DataHoraProcessamento,5,2),'/',substring(pipeline().parameters.DataHoraProcessamento,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(pipeline().parameters.DataHoraProcessamento,0,4),substring(pipeline().parameters.DataHoraProcessamento,5,2),substring(pipeline().parameters.DataHoraProcessamento,8,2),substring(pipeline().parameters.DataHoraProcessamento,11,2),substring(pipeline().parameters.DataHoraProcessamento,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppToken",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RelativeURL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppToken",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_1\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppKey",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "AppToken",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppKey",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_2\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_SL",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": "$['list']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(pipeline().parameters.DataProcessamento,0,4),'/',\nsubstring(pipeline().parameters.DataProcessamento,5,2),'/',\nsubstring(pipeline().parameters.DataProcessamento,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,\n'_',\nsubstring(pipeline().parameters.DataHoraProcessamento,0,4),\nsubstring(pipeline().parameters.DataHoraProcessamento,5,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,8,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,11,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,14,2),\n'_page_',\nstring(pipeline().parameters.ParPagina),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(\nactivity('TabelaOrderList').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('TabelaOrderList').output.firstRow.NOM_TABELA_DESTINO\n)\n",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_SL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:00:15",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(\nactivity('TabelaOrderList').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('TabelaOrderList').output.firstRow.NOM_TABELA_DESTINO\n)\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nsubstring(pipeline().parameters.DataHoraProcessamento,0,4),'/',\nsubstring(pipeline().parameters.DataHoraProcessamento,5,2),'/',\nsubstring(pipeline().parameters.DataHoraProcessamento,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(pipeline().parameters.DataHoraProcessamento,0,4),substring(pipeline().parameters.DataHoraProcessamento,5,2),substring(pipeline().parameters.DataHoraProcessamento,8,2),substring(pipeline().parameters.DataHoraProcessamento,11,2),substring(pipeline().parameters.DataHoraProcessamento,14,2),'_page_',string(pipeline().parameters.ParPagina),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "TabelaOrderList",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select NOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO \nfrom  [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "LimpaTabelaOrderList",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "TabelaOrderList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('TabelaOrderList').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('TabelaOrderList').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParPagina": {
						"type": "int"
					},
					"DataInicioOrderVTEX": {
						"type": "string"
					},
					"DataFimOrderVtex": {
						"type": "string"
					},
					"DataIngestao": {
						"type": "string"
					},
					"DataProcessamento": {
						"type": "string"
					},
					"DataHoraProcessamento": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ORC_GIGAM_ORIGEM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NomeTabela": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"SecretNamePWD": {
						"type": "string"
					},
					"SecretNameCON": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "APEX_030200",
					"table": "APEX_APPLICATION_GROUPS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ORC_GIGAM_ORIGEM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_CIGAM_0630')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_DIMENSIONAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-27T02:03:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_MODELO_ORACLE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Modelo de importação de tabelas do ADF a partir de uma tabela de controle com as tabelas a importar, suas origens e colunas.",
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Full",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Incremental",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@variables('dscParameters')",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodTabela",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "TABELA",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LimpaTabelaColunas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamento]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LimpaTabelaColunas",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Variaveis-SrvOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFLimpaTabelaColunas]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "Variaveis-SrvOrigem",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeCredenciaisDBorigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DataBaseName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ServerName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataBaseName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_BASE",
											"type": "Expression"
										}
									}
								},
								{
									"name": "UserName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DataBaseName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "UserName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Password",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "UserName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Password",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_PASSWORD",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TipoArmazenamento",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Password",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TipoArmazenamento",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.IND_TIPO_ARMAZENAMENTO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SecretNamePassword",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TipoArmazenamento",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SecretNamePassword",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ServerName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ServerName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_SERVIDOR",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Incremental",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParTipoETL,'I'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_SQLOP_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Insere na tabela Cleansing I",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set dscParametros SQLOP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFim]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeSchemaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NUM_REGISTROS": {
												"value": {
													"value": "@variables('nuregistros')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_SERVIDOR": {
												"value": {
													"value": "@pipeline().parameters.ParCodServidor",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ORIGEM": {
												"value": {
													"value": "@variables('TipoArmazenamento')",
													"type": "Expression"
												},
												"type": "String"
											},
											"FILE_SIZE": {
												"value": {
													"value": "@variables('FileSize')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL_CSV').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SQLOP_TO_ADLS_RowsCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Copy_SQLOP_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "nuregistros",
										"value": {
											"value": "@string(activity('Copy_SQLOP_TO_ADLS').output.rowsCopied)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_RowsCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL_CSV",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_ORIGEM",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_ORIGEM",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "Set dscParametros SQLOP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dscParameters",
										"value": {
											"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_SQLOP_TO_ADLS_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Insere na tabela Cleansing I",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',\ntoLower(activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Limpa Tabela Destino_I",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL_CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('delete ',pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino,\n' SELECT 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Insere na tabela Cleansing I",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Limpa Tabela Destino_I",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"additionalColumns": [
												{
													"name": "DAT_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,16)",
														"type": "Expression"
													}
												}
											],
											"oracleReaderQuery": {
												"value": "@concat(\n'select ',\nactivity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,\n' from ',\npipeline().parameters.ParNomeSchemaOrigem,\nif(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),\npipeline().parameters.ParNomeTabelaOrigem,\n' where ',\nactivity('LeDataProcessamento').output.firstRow.NOM_COLUNA_REFERENCIA,\n' >= TO_TIMESTAMP(',\n'''',activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO_CIGAM,'''',',',\n'''','DD-MON-YYYY HH24: MI:SS:FF','''',')',\n' and ',\nactivity('LeDataProcessamento').output.firstRow.NOM_COLUNA_REFERENCIA,\n' <= TO_TIMESTAMP(',\n'''',\nactivity('LeDataProcessamento').output.firstRow.DAT_PROCESSAMENTO_CIGAM,\n'''',\n',',\n'''',\n'DD-MON-YYYY HH24: MI:SS:FF',\n'''',\n');'\n)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OracleTable1",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "TABELA",
												"UserName": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
													"type": "Expression"
												},
												"SecretNamePWD": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
													"type": "Expression"
												},
												"SecretNameCON": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_CON",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Carga Full",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParTipoETL,'U'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GravaLogInicioItem-ToDL_CSV_U",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_ORIGEM",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_ORIGEM",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "GravaLogFimItem-ToDL_U",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set dscParametros SQLOP_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFim]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeSchemaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NUM_REGISTROS": {
												"value": {
													"value": "@variables('nuregistros')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_SERVIDOR": {
												"value": {
													"value": "@pipeline().parameters.ParCodServidor",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ORIGEM": {
												"value": {
													"value": "@variables('TipoArmazenamento')",
													"type": "Expression"
												},
												"type": "String"
											},
											"FILE_SIZE": {
												"value": {
													"value": "@variables('FileSize')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL_CSV_U').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SQLOP_TO_ADLS_Rows_U",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS_CLEANSING__U",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Copy_SQLOP_TO_ADLS_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "nuregistros",
										"value": {
											"value": "@string(activity('Copy_SQLOP_TO_ADLS_U').output.rowsCopied)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW_U",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_Rows_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.orc'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set dscParametros SQLOP_U",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dscParameters",
										"value": {
											"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_SQLOP_TO_ADLS_U",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Insere na tabela Cleansing_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Copy_SQLOP_TO_ADLS_CLEANSING__U",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Insere na tabela Cleansing_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino)",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',\ntoLower(activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Limpa Tabela Destino_U",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL_CSV_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('delete ',pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino,\n' SELECT 0')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Insere na tabela Cleansing_U",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Limpa Tabela Destino_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"additionalColumns": [
												{
													"name": "DAT_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,16)",
														"type": "Expression"
													}
												}
											],
											"oracleReaderQuery": {
												"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "OracleTable1",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "TABELA",
												"UserName": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
													"type": "Expression"
												},
												"SecretNamePWD": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
													"type": "Expression"
												},
												"SecretNameCON": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_CON",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@concat(pipeline().parameters.ParNomeSchemaDestino,pipeline().parameters.ParNomeTabelaDestino)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LeCredenciaisDBorigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "00.00:02:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciais]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"parameters": {
					"ParNomeSchemaOrigem": {
						"type": "String"
					},
					"ParIdPipeline": {
						"type": "String"
					},
					"ParNomeTabelaOrigem": {
						"type": "String"
					},
					"ParNomeSchemaDestino": {
						"type": "string"
					},
					"ParNomeAlias": {
						"type": "string"
					},
					"ParNomeTabelaDestino": {
						"type": "string"
					},
					"ParCodServidor": {
						"type": "int"
					},
					"ParTipoETL": {
						"type": "string"
					},
					"ParIndDestinoDL": {
						"type": "string"
					},
					"ParIndDestinoSQL": {
						"type": "string"
					},
					"ParCodTabela": {
						"type": "int"
					},
					"SourceStore_Location": {
						"type": "string"
					},
					"SourceStore_Directory": {
						"type": "string"
					},
					"DestinationStore_Location": {
						"type": "string"
					},
					"DestinationStore_Directory": {
						"type": "string"
					},
					"ParIndDataCleansing": {
						"type": "string"
					}
				},
				"variables": {
					"nuregistros": {
						"type": "String",
						"defaultValue": "0"
					},
					"receiver": {
						"type": "String"
					},
					"ComandoGeraSelect": {
						"type": "String",
						"defaultValue": ",@coluna\t\tvarchar(max)  select   \t\t@coluna =  \t\t\tcase  \t\t\t\twhen @coluna is null  \t\t\t\t\tThen 'Convert(varchar(max),isnull('+ name  + ',' +\t \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127) then '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t  then '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else '''''' +'))' \t\t\t\t\t\t\t\tend  \t\t\t\tElse \t\t  \t\t\t\t\t @coluna + '+' + 'Convert(varchar(max),isnull('+ name + ','\t+ \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127)\tthen '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t\tthen '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse '''''' +'))' \t\t\t\t\t\t\t\tend \t\t\t\tend from  \t\tsys.syscolumns  where  \t\tid = OBJECT_ID(@Tabela) order by colid  select @coluna = ' SUBSTRING(sys.fn_sqlvarbasetostr(HASHBYTES(''MD5'',' +\t@coluna + ')),3,32) HASH_KEY from ' + @tabela  select @coluna ComandoSelectHash"
					},
					"ComandoSelectHash": {
						"type": "String"
					},
					"DataBaseName": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"TipoArmazenamento": {
						"type": "String"
					},
					"ServerName": {
						"type": "String"
					},
					"NomeBucket": {
						"type": "String",
						"defaultValue": "dl"
					},
					"DestinoDL": {
						"type": "String"
					},
					"SecretNamePassword": {
						"type": "String"
					},
					"FileSize": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"NumFiles": {
						"type": "String",
						"defaultValue": "0"
					},
					"dscParameters": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/ORACLE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OracleTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_MODELO_ORACLE_BACKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Modelo de importação de tabelas do ADF a partir de uma tabela de controle com as tabelas a importar, suas origens e colunas.",
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Carga Full",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Incremental",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@variables('dscParameters')",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodTabela",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "TABELA",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LimpaTabelaColunas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamento]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LimpaTabelaColunas",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Variaveis-SrvOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFLimpaTabelaColunas]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "Variaveis-SrvOrigem",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeCredenciaisDBorigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DataBaseName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ServerName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataBaseName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_BASE",
											"type": "Expression"
										}
									}
								},
								{
									"name": "UserName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DataBaseName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "UserName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Password",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "UserName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Password",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_PASSWORD",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TipoArmazenamento",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Password",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TipoArmazenamento",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.IND_TIPO_ARMAZENAMENTO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SecretNamePassword",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TipoArmazenamento",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SecretNamePassword",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ServerName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ServerName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_SERVIDOR",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Incremental",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParTipoETL,'I'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_SQLOP_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL_CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"additionalColumns": [
												{
													"name": "DAT_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,16)",
														"type": "Expression"
													}
												}
											],
											"oracleReaderQuery": {
												"value": "@concat(\n'select ',\nactivity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,\n' from ',\npipeline().parameters.ParNomeSchemaOrigem,\nif(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),\npipeline().parameters.ParNomeTabelaOrigem,\n' where ',\nactivity('LeDataProcessamento').output.firstRow.NOM_COLUNA_REFERENCIA,\n' >= TO_TIMESTAMP(',\n'''',activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO_CIGAM,'''',',',\n'''','DD-MON-YYYY HH24: MI:SS:FF','''',')',\n' and ',\nactivity('LeDataProcessamento').output.firstRow.NOM_COLUNA_REFERENCIA,\n' <= TO_TIMESTAMP(',\n'''',\nactivity('LeDataProcessamento').output.firstRow.DAT_PROCESSAMENTO_CIGAM,\n'''',\n',',\n'''',\n'DD-MON-YYYY HH24: MI:SS:FF',\n'''',\n');'\n)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "OracleTable1",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "TABELA",
												"UserName": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
													"type": "Expression"
												},
												"SecretNamePWD": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
													"type": "Expression"
												},
												"SecretNameCON": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_CON",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set dscParametros SQLOP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFim]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeSchemaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NUM_REGISTROS": {
												"value": {
													"value": "@variables('nuregistros')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_SERVIDOR": {
												"value": {
													"value": "@pipeline().parameters.ParCodServidor",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ORIGEM": {
												"value": {
													"value": "@variables('TipoArmazenamento')",
													"type": "Expression"
												},
												"type": "String"
											},
											"FILE_SIZE": {
												"value": {
													"value": "@variables('FileSize')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL_CSV').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SQLOP_TO_ADLS_RowsCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "nuregistros",
										"value": {
											"value": "@string(activity('Copy_SQLOP_TO_ADLS').output.rowsCopied)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_RowsCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL_CSV",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_ORIGEM",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_ORIGEM",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "Set dscParametros SQLOP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dscParameters",
										"value": {
											"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_SQLOP_TO_ADLS_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',\ntoLower(activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Carga Full",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParTipoETL,'U'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GravaLogInicioItem-ToDL_CSV_U",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_ORIGEM",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_ORIGEM",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "Copy_SQLOP_TO_ADLS_U",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL_CSV_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"additionalColumns": [
												{
													"name": "DAT_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,16)",
														"type": "Expression"
													}
												}
											],
											"oracleReaderQuery": {
												"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "OracleTable1",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "TABELA",
												"UserName": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
													"type": "Expression"
												},
												"SecretNamePWD": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
													"type": "Expression"
												},
												"SecretNameCON": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_CON",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL_U",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set dscParametros SQLOP_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFim]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeSchemaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NUM_REGISTROS": {
												"value": {
													"value": "@variables('nuregistros')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_SERVIDOR": {
												"value": {
													"value": "@pipeline().parameters.ParCodServidor",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ORIGEM": {
												"value": {
													"value": "@variables('TipoArmazenamento')",
													"type": "Expression"
												},
												"type": "String"
											},
											"FILE_SIZE": {
												"value": {
													"value": "@variables('FileSize')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL_CSV_U').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SQLOP_TO_ADLS_Rows_U",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS_CLEANSING_u",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "nuregistros",
										"value": {
											"value": "@string(activity('Copy_SQLOP_TO_ADLS_U').output.rowsCopied)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW_U",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_Rows_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.orc'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set dscParametros SQLOP_U",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dscParameters",
										"value": {
											"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_SQLOP_TO_ADLS_CLEANSING_u",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS_U",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',\ntoLower(activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LeCredenciaisDBorigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "00.00:02:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciais]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"parameters": {
					"ParNomeSchemaOrigem": {
						"type": "String"
					},
					"ParIdPipeline": {
						"type": "String"
					},
					"ParNomeTabelaOrigem": {
						"type": "String"
					},
					"ParNomeSchemaDestino": {
						"type": "string"
					},
					"ParNomeAlias": {
						"type": "string"
					},
					"ParNomeTabelaDestino": {
						"type": "string"
					},
					"ParCodServidor": {
						"type": "int"
					},
					"ParTipoETL": {
						"type": "string"
					},
					"ParIndDestinoDL": {
						"type": "string"
					},
					"ParIndDestinoSQL": {
						"type": "string"
					},
					"ParCodTabela": {
						"type": "int"
					},
					"SourceStore_Location": {
						"type": "string"
					},
					"SourceStore_Directory": {
						"type": "string"
					},
					"DestinationStore_Location": {
						"type": "string"
					},
					"DestinationStore_Directory": {
						"type": "string"
					},
					"ParIndDataCleansing": {
						"type": "string"
					}
				},
				"variables": {
					"nuregistros": {
						"type": "String",
						"defaultValue": "0"
					},
					"receiver": {
						"type": "String"
					},
					"ComandoGeraSelect": {
						"type": "String",
						"defaultValue": ",@coluna\t\tvarchar(max)  select   \t\t@coluna =  \t\t\tcase  \t\t\t\twhen @coluna is null  \t\t\t\t\tThen 'Convert(varchar(max),isnull('+ name  + ',' +\t \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127) then '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t  then '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else '''''' +'))' \t\t\t\t\t\t\t\tend  \t\t\t\tElse \t\t  \t\t\t\t\t @coluna + '+' + 'Convert(varchar(max),isnull('+ name + ','\t+ \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127)\tthen '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t\tthen '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse '''''' +'))' \t\t\t\t\t\t\t\tend \t\t\t\tend from  \t\tsys.syscolumns  where  \t\tid = OBJECT_ID(@Tabela) order by colid  select @coluna = ' SUBSTRING(sys.fn_sqlvarbasetostr(HASHBYTES(''MD5'',' +\t@coluna + ')),3,32) HASH_KEY from ' + @tabela  select @coluna ComandoSelectHash"
					},
					"ComandoSelectHash": {
						"type": "String"
					},
					"DataBaseName": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"TipoArmazenamento": {
						"type": "String"
					},
					"ServerName": {
						"type": "String"
					},
					"NomeBucket": {
						"type": "String",
						"defaultValue": "dl"
					},
					"DestinoDL": {
						"type": "String"
					},
					"SecretNamePassword": {
						"type": "String"
					},
					"FileSize": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"NumFiles": {
						"type": "String",
						"defaultValue": "0"
					},
					"dscParameters": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/ORACLE/backup"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OracleTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VTEX_ORDER_01_DETAILS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CapturaDataExportacao",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataExportacao]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "DataExportacao",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "CapturaDataExportacao",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DATA_HORA_EXPORTACAO",
							"value": {
								"value": "@activity('CapturaDataExportacao').output.FirstRow.DATA_HORA_EXPORTACAO\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "OrderID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DataExportacao",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"dataset": {
								"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "caminho",
									"FileName": "nome",
									"FileSystem": "raw"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "executa downlod order detalhe",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "OrderID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('OrderID').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 15,
							"activities": [
								{
									"name": "executa VTEX_ORDER_03_DETAILS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "VTEX_ORDER_03_DETAILS_V3",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ParIdPipeline": {
												"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
												"type": "Expression"
											},
											"ParCodEndPoint": {
												"value": "@pipeline().parameters.ParCodEndPoint",
												"type": "Expression"
											},
											"ParNumeroOrder": {
												"value": "@{item().ORDERID}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GravaLogInicio",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "PADFIdPacoteAPI",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "5",
											"type": "Expression"
										}
									},
									"NOM_PACOTE": {
										"type": "String",
										"value": "ADF_MODELO_API"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaLogErroUPD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "executa downlod order detalhe",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PLogADFItemErroAPI]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_ERRO": {
									"value": {
										"value": "@activity('executa downlod order detalhe').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"NOM_ALIAS_ENDPOINT": {
									"value": {
										"value": "@activity('GravaLogInicio').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD_ENDPOINT": {
									"value": {
										"value": "5",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EnviaEmailDeErroUPD",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MsgErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-21.brazilsouth.logic.azure.com:443/workflows/741f9460457d489996f012404ef44c15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j67cgGl-SI96CK3Ef9EClXXCdWao6ACexeV0h3sDZEU",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"database\":\"\",\n\t\"environment\":\"@{activity('GravaLogInicio').output.firstRow.DESC_ENVIRONMENT}\",\n\t\"message\": \"@{activity('executa downlod order detalhe').error.message}\",\n\t\"pipelineName\": \"@{variables('MsgErro')}\",\n\t\"receiver\": \"@{activity('GravaLogInicio').output.firstRow.DESC_EMAIL_ERRO}\",\n    \"schema\": \"\",  \n    \"table\": \"\",\n\"servername\": \"\",\n\"type\":\"API\",\n\"endpoint\":\"@{activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT}\",\n\"url\":\"@{variables('FullURL')}\",\n\"output\":\"@{activity('GravaLogInicio').output.firstRow.NOM_RETORNO_URL}\" \n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MsgErroUPD",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GravaLogErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MsgErro",
							"value": {
								"value": "@concat('Pipeline com erro: API_TO_ADLS: [',activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT_1,']')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"ParCodEndPoint": {
						"type": "string",
						"defaultValue": "5"
					}
				},
				"variables": {
					"DATA_HORA_EXPORTACAO": {
						"type": "String"
					},
					"MsgErro": {
						"type": "String"
					},
					"receiver": {
						"type": "String"
					},
					"FullURL": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/VTEX_ORDER_03_DETAILS_V3')]"
			]
		}
	]
}