{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dev-br-analytics2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/VTEX_ORDER_01_DETAILS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "OrderID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LimpaVtexOrderDetailsOrderShippingItems",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LimpaVtexOrderDetailsOrderShipping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Limpavtex_order_details_order_payment",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Limpavtex_order_details_order_client",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Limpavtex_order_details_order_items",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Limpavtex_order_details_order_totals",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Limpavtex_order_details_order_header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\nselect  orderid from [cleansing_data].[vtex_order_list]\n\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "executa downlod order detalhe",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "OrderID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('OrderID').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 15,
							"activities": [
								{
									"name": "executa VTEX_ORDER_03_DETAILS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "VTEX_ORDER_03_DETAILS_SQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ParIdPipeline": {
												"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
												"type": "Expression"
											},
											"ParCodEndPoint": {
												"value": "@pipeline().parameters.ParCodEndPoint",
												"type": "Expression"
											},
											"ParNumeroOrder": {
												"value": "@{item().ORDERID}",
												"type": "Expression"
											},
											"ParTabelaShippingItems": {
												"value": "@concat(\nactivity('VtexOrderDetailsOrderShippingItems').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('VtexOrderDetailsOrderShippingItems').output.firstRow.NOM_TABELA_DESTINO\n)\n",
												"type": "Expression"
											},
											"ParTabelaShipping": {
												"value": "@concat(\nactivity('VtexOrderDetailsOrderShipping').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('VtexOrderDetailsOrderShipping').output.firstRow.NOM_TABELA_DESTINO\n)",
												"type": "Expression"
											},
											"ParTabelaPayment": {
												"value": "@concat(\nactivity('vtex_order_details_order_payment').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_payment').output.firstRow.NOM_TABELA_DESTINO\n)\n",
												"type": "Expression"
											},
											"ParTabelaClient": {
												"value": "@concat(\nactivity('vtex_order_details_order_client').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_client').output.firstRow.NOM_TABELA_DESTINO\n)\n",
												"type": "Expression"
											},
											"ParTabelaOrderItems": {
												"value": "@concat(\nactivity('vtex_order_details_order_items').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_items').output.firstRow.NOM_TABELA_DESTINO\n)\n",
												"type": "Expression"
											},
											"ParTabelaTotals": {
												"value": "@concat(\nactivity('vtex_order_details_order_totals').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_totals').output.firstRow.NOM_TABELA_DESTINO\n)",
												"type": "Expression"
											},
											"ParTabelaHeader": {
												"value": "@concat(\nactivity('vtex_order_details_order_header').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_header').output.firstRow.NOM_TABELA_DESTINO\n)",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "GravaLogInicio",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "PADFIdPacoteAPI",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "5",
											"type": "Expression"
										}
									},
									"NOM_PACOTE": {
										"type": "String",
										"value": "ADF_MODELO_API"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaLogErroUPD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Grava DATA LAKE",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PLogADFItemErroAPI]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_ERRO": {
									"value": {
										"value": "@activity('executa downlod order detalhe').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"NOM_ALIAS_ENDPOINT": {
									"value": {
										"value": "@activity('GravaLogInicio').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD_ENDPOINT": {
									"value": {
										"value": "5",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EnviaEmailDeErroUPD",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MsgErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-21.brazilsouth.logic.azure.com:443/workflows/741f9460457d489996f012404ef44c15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j67cgGl-SI96CK3Ef9EClXXCdWao6ACexeV0h3sDZEU",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"database\":\"\",\n\t\"environment\":\"@{activity('GravaLogInicio').output.firstRow.DESC_ENVIRONMENT}\",\n\t\"message\": \"@{activity('executa downlod order detalhe').error.message}\",\n\t\"pipelineName\": \"@{variables('MsgErro')}\",\n\t\"receiver\": \"@{activity('GravaLogInicio').output.firstRow.DESC_EMAIL_ERRO}\",\n    \"schema\": \"\",  \n    \"table\": \"\",\n\"servername\": \"\",\n\"type\":\"API\",\n\"endpoint\":\"@{activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT}\",\n\"url\":\"@{variables('FullURL')}\",\n\"output\":\"@{activity('GravaLogInicio').output.firstRow.NOM_RETORNO_URL}\" \n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MsgErroUPD",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GravaLogErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MsgErro",
							"value": {
								"value": "@concat('Pipeline com erro: API_TO_ADLS: [',activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT_1,']')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "VtexOrderDetailsOrderShippingItems",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nNOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO\nfrom [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 3\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "LimpaVtexOrderDetailsOrderShippingItems",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "VtexOrderDetailsOrderShippingItems",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('VtexOrderDetailsOrderShippingItems').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('VtexOrderDetailsOrderShippingItems').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "VtexOrderDetailsOrderShipping",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nNOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO\nfrom [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 4",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "LimpaVtexOrderDetailsOrderShipping",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "VtexOrderDetailsOrderShipping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('VtexOrderDetailsOrderShipping').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('VtexOrderDetailsOrderShipping').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "vtex_order_details_order_payment",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nNOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO\nfrom [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 5",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "Limpavtex_order_details_order_payment",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "vtex_order_details_order_payment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('vtex_order_details_order_payment').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_payment').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "vtex_order_details_order_client",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nNOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO\nfrom [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 6",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "Limpavtex_order_details_order_client",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "vtex_order_details_order_client",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('vtex_order_details_order_client').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_client').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "vtex_order_details_order_items",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nNOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO\nfrom [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 7",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "Limpavtex_order_details_order_items",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "vtex_order_details_order_items",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('vtex_order_details_order_items').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_items').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "vtex_order_details_order_totals",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nNOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO\nfrom [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 8",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "Limpavtex_order_details_order_totals",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "vtex_order_details_order_totals",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('vtex_order_details_order_totals').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_totals').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "vtex_order_details_order_header",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nNOM_SCHEMA_DESTINO,NOM_TABELA_DESTINO\nfrom [dbo].[CTR_ADF_TABELA_API_ENDPOINT]\nwhere COD_TABELA = 9",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "Limpavtex_order_details_order_header",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "vtex_order_details_order_header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('truncate table  ',\nactivity('vtex_order_details_order_header').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_header').output.firstRow.NOM_TABELA_DESTINO,\n' SELECT 0'\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_DW_MALWEE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "Grava DATA LAKE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "executa downlod order detalhe",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VTEX_ORDER_03_DETAILS_DATA_LAKE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"ParIdPipeline": {
									"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
									"type": "Expression"
								},
								"ParCodEndPoint": {
									"value": "@pipeline().parameters.ParCodEndPoint",
									"type": "Expression"
								},
								"ParTabelaShippingItems": {
									"value": "@concat(\nactivity('VtexOrderDetailsOrderShippingItems').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('VtexOrderDetailsOrderShippingItems').output.firstRow.NOM_TABELA_DESTINO\n)\n",
									"type": "Expression"
								},
								"ParTabelaShipping": {
									"value": "@concat(\nactivity('VtexOrderDetailsOrderShipping').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('VtexOrderDetailsOrderShipping').output.firstRow.NOM_TABELA_DESTINO\n)",
									"type": "Expression"
								},
								"ParTabelaPayment": {
									"value": "@concat(\nactivity('vtex_order_details_order_payment').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_payment').output.firstRow.NOM_TABELA_DESTINO\n)\n",
									"type": "Expression"
								},
								"ParTabelaClient": {
									"value": "@concat(\nactivity('vtex_order_details_order_client').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_client').output.firstRow.NOM_TABELA_DESTINO\n)\n",
									"type": "Expression"
								},
								"ParTabelaOrderItems": {
									"value": "@concat(\nactivity('vtex_order_details_order_items').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_items').output.firstRow.NOM_TABELA_DESTINO\n)\n",
									"type": "Expression"
								},
								"ParTabelaTotals": {
									"value": "@concat(\nactivity('vtex_order_details_order_totals').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_totals').output.firstRow.NOM_TABELA_DESTINO\n)",
									"type": "Expression"
								},
								"ParTabelaHeader": {
									"value": "@concat(\nactivity('vtex_order_details_order_header').output.firstRow.NOM_SCHEMA_DESTINO,\n'.',\nactivity('vtex_order_details_order_header').output.firstRow.NOM_TABELA_DESTINO\n)",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"ParCodEndPoint": {
						"type": "string",
						"defaultValue": "5"
					}
				},
				"variables": {
					"DATA_HORA_EXPORTACAO": {
						"type": "String"
					},
					"MsgErro": {
						"type": "String"
					},
					"receiver": {
						"type": "String"
					},
					"FullURL": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/VTEX_ORDER_03_DETAILS_DATA_LAKE')]",
				"[concat(variables('factoryId'), '/pipelines/VTEX_ORDER_03_DETAILS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VTEX_ORDER_03_DETAILS_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SeAPI_JSON_TO_SQL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:02:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"X-VTEX-API-AppToken": {
													"value": "@variables('AppToken')",
													"type": "Expression"
												},
												"x-vtex-api-appkey": {
													"value": "@variables('AppKey')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestVTEX",
											"type": "DatasetReference",
											"parameters": {
												"ParRelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "PLogADFItemAPI",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_SQL_ORDER_SHIPPING_ITEMS",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_SQL_ORDER_SHIPPING",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_SQL_ORDER_PAYMENT",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_SQL_ORDER_CLIENT",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_SQL_ORDER_ITEMS",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_SQL_ORDER_TOTALS",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_SQL_ORDER_HEADER",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFOrderAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_ORDER": {
												"value": {
													"value": "@pipeline().parameters.ParNumeroOrder",
													"type": "Expression"
												},
												"type": "String"
											},
											"URL_ORDEM": {
												"value": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_JSON_TO_SQL_ORDER_SHIPPING_ITEMS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['itemIndex']"
													},
													"sink": {
														"name": "itemIndex",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['selectedSla']"
													},
													"sink": {
														"name": "selectedSla",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['lockTTL']"
													},
													"sink": {
														"name": "lockTTL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['sellingPrice']"
													},
													"sink": {
														"name": "sellingPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['deliveryWindow']"
													},
													"sink": {
														"name": "deliveryWindow",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['deliveryCompany']"
													},
													"sink": {
														"name": "deliveryCompany",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['shippingEstimate']"
													},
													"sink": {
														"name": "shippingEstimate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['logisticsInfo'][0]['shippingEstimateDate']"
													},
													"sink": {
														"name": "shippingEstimateDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaShippingItems",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_SQL_ORDER_SHIPPING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['shippingData']['address']['addressType']"
													},
													"sink": {
														"name": "addressType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['receiverName']"
													},
													"sink": {
														"name": "receiverName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['addressId']"
													},
													"sink": {
														"name": "addressId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['postalCode']"
													},
													"sink": {
														"name": "postalCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['city']"
													},
													"sink": {
														"name": "city",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['state']"
													},
													"sink": {
														"name": "state",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['country']"
													},
													"sink": {
														"name": "country",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['number']"
													},
													"sink": {
														"name": "number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['neighborhood']"
													},
													"sink": {
														"name": "neighborhood",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['complement']"
													},
													"sink": {
														"name": "complement",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['reference']"
													},
													"sink": {
														"name": "reference",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates'][0]"
													},
													"sink": {
														"name": "geoCoordinates_x",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates'][1]"
													},
													"sink": {
														"name": "geoCoordinates_y",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaShipping",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_SQL_ORDER_PAYMENT",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['paymentData']['transactions'][0]['payments'][0]['id']"
													},
													"sink": {
														"name": "iditems",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['paymentData']['transactions'][0]['payments'][0]['paymentSystem']"
													},
													"sink": {
														"name": "paymentSystem",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['paymentData']['transactions'][0]['payments'][0]['paymentSystemName']"
													},
													"sink": {
														"name": "paymentSystemName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['paymentData']['transactions'][0]['payments'][0]['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['paymentData']['transactions'][0]['payments'][0]['installments']"
													},
													"sink": {
														"name": "installments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['paymentData']['transactions'][0]['payments'][0]['referenceValue']"
													},
													"sink": {
														"name": "referenceValue",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaPayment",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_SQL_ORDER_CLIENT",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['email']"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['firstName']"
													},
													"sink": {
														"name": "firstName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['lastName']"
													},
													"sink": {
														"name": "lastName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['documentType']"
													},
													"sink": {
														"name": "documentType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['document']"
													},
													"sink": {
														"name": "document",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['phone']"
													},
													"sink": {
														"name": "phone",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaClient",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_SQL_ORDER_ITEMS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['uniqueId']"
													},
													"sink": {
														"name": "uniqueId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id_item",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ean']"
													},
													"sink": {
														"name": "ean",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lockId']"
													},
													"sink": {
														"name": "lockId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['quantity']"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['seller']"
													},
													"sink": {
														"name": "seller",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refId']"
													},
													"sink": {
														"name": "refId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imageUrl']"
													},
													"sink": {
														"name": "imageUrl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['brandName']"
													},
													"sink": {
														"name": "brandName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['brandId']"
													},
													"sink": {
														"name": "brandId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['totals'][0]['name']"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categoriesIds']"
													},
													"sink": {
														"name": "categoriesIds",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][0]['id']"
													},
													"sink": {
														"name": "categories_id_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][0]['name']"
													},
													"sink": {
														"name": "categories_name_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['id']"
													},
													"sink": {
														"name": "categories_id_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['name']"
													},
													"sink": {
														"name": "categories_name_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][2]['id']"
													},
													"sink": {
														"name": "categories_id_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][3]['name']"
													},
													"sink": {
														"name": "categories_name_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao"
													}
												}
											],
											"collectionReference": "$['items']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaOrderItems",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_SQL_ORDER_TOTALS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['totals']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaTotals",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_SQL_ORDER_HEADER",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "data_hora_exportacao",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sequence']"
													},
													"sink": {
														"name": "sequence",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['marketplaceOrderId']"
													},
													"sink": {
														"name": "marketplaceOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sellerOrderId']"
													},
													"sink": {
														"name": "sellerOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['origin']"
													},
													"sink": {
														"name": "origin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['affiliateId']"
													},
													"sink": {
														"name": "affiliateId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['salesChannel']"
													},
													"sink": {
														"name": "salesChannel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['merchantName']"
													},
													"sink": {
														"name": "merchantName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['status']"
													},
													"sink": {
														"name": "status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['statusDescription']"
													},
													"sink": {
														"name": "statusDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['creationDate']"
													},
													"sink": {
														"name": "creationDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderGroup']"
													},
													"sink": {
														"name": "orderGroup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data_hora_exportacao']"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaHeader",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@concat(\nactivity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\npipeline().parameters.ParNumeroOrder)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppToken",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppToken",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_1\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppKey",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppKey",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_2\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParNumeroOrder": {
						"type": "string"
					},
					"ParTabelaShippingItems": {
						"type": "string"
					},
					"ParTabelaShipping": {
						"type": "string"
					},
					"ParTabelaPayment": {
						"type": "string"
					},
					"ParTabelaClient": {
						"type": "string"
					},
					"ParTabelaOrderItems": {
						"type": "string"
					},
					"ParTabelaTotals": {
						"type": "string"
					},
					"ParTabelaHeader": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					},
					"DataHoraProcessamento": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VTEX_ORDER_03_DETAILS_DATA_LAKE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "API_JSON_TO_ORDER_HEADER_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sequence",
														"type": "String"
													},
													"sink": {
														"name": "sequence",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "marketplaceOrderId",
														"type": "String"
													},
													"sink": {
														"name": "marketplaceOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sellerOrderId",
														"type": "String"
													},
													"sink": {
														"name": "sellerOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "origin",
														"type": "String"
													},
													"sink": {
														"name": "origin",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "affiliateId",
														"type": "String"
													},
													"sink": {
														"name": "affiliateId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "salesChannel",
														"type": "String"
													},
													"sink": {
														"name": "salesChannel",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "merchantName",
														"type": "String"
													},
													"sink": {
														"name": "merchantName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "status",
														"type": "String"
													},
													"sink": {
														"name": "status",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "statusDescription",
														"type": "String"
													},
													"sink": {
														"name": "statusDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "value",
														"type": "String"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "creationDate",
														"type": "String"
													},
													"sink": {
														"name": "creationDate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "orderGroup",
														"type": "String"
													},
													"sink": {
														"name": "orderGroup",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaHeader",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(\npipeline().parameters.ParTabelaHeader,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_TOTALS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "id",
														"type": "String"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "String"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "value",
														"type": "String"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "String"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaTotals",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(\npipeline().parameters.ParTabelaTotals,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "uniqueId",
														"type": "String"
													},
													"sink": {
														"name": "uniqueId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "id_item",
														"type": "String"
													},
													"sink": {
														"name": "id_item",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "ean",
														"type": "String"
													},
													"sink": {
														"name": "ean",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "lockId",
														"type": "String"
													},
													"sink": {
														"name": "lockId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "quantity",
														"type": "String"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "seller",
														"type": "String"
													},
													"sink": {
														"name": "seller",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "refId",
														"type": "String"
													},
													"sink": {
														"name": "refId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "price",
														"type": "String"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "listPrice",
														"type": "String"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "imageUrl",
														"type": "String"
													},
													"sink": {
														"name": "imageUrl",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandName",
														"type": "String"
													},
													"sink": {
														"name": "brandName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandId",
														"type": "String"
													},
													"sink": {
														"name": "brandId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "String"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "categoriesIds",
														"type": "String"
													},
													"sink": {
														"name": "categoriesIds",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "categories_id_1",
														"type": "String"
													},
													"sink": {
														"name": "categories_id_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "categories_name_1",
														"type": "String"
													},
													"sink": {
														"name": "categories_name_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "categories_id_2",
														"type": "String"
													},
													"sink": {
														"name": "categories_id_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "categories_name_2",
														"type": "String"
													},
													"sink": {
														"name": "categories_name_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "categories_id_3",
														"type": "String"
													},
													"sink": {
														"name": "categories_id_3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "categories_name_3",
														"type": "String"
													},
													"sink": {
														"name": "categories_name_3",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaOrderItems",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(\npipeline().parameters.ParTabelaOrderItems,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_CLIENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "String"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "firstName",
														"type": "String"
													},
													"sink": {
														"name": "firstName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "lastName",
														"type": "String"
													},
													"sink": {
														"name": "lastName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "documentType",
														"type": "String"
													},
													"sink": {
														"name": "documentType",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "document",
														"type": "String"
													},
													"sink": {
														"name": "document",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "phone",
														"type": "String"
													},
													"sink": {
														"name": "phone",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "street",
														"type": "String"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaClient",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(\npipeline().parameters.ParTabelaClient,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_PAYMENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "iditems",
														"type": "String"
													},
													"sink": {
														"name": "iditems",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "paymentSystem",
														"type": "String"
													},
													"sink": {
														"name": "paymentSystem",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "paymentSystemName",
														"type": "String"
													},
													"sink": {
														"name": "paymentSystemName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "value",
														"type": "String"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "installments",
														"type": "String"
													},
													"sink": {
														"name": "installments",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "referenceValue",
														"type": "String"
													},
													"sink": {
														"name": "referenceValue",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaPayment",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(\npipeline().parameters.ParTabelaPayment,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "addressType",
														"type": "String"
													},
													"sink": {
														"name": "addressType",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "receiverName",
														"type": "String"
													},
													"sink": {
														"name": "receiverName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "addressId",
														"type": "String"
													},
													"sink": {
														"name": "addressId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "postalCode",
														"type": "String"
													},
													"sink": {
														"name": "postalCode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "city",
														"type": "String"
													},
													"sink": {
														"name": "city",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "state",
														"type": "String"
													},
													"sink": {
														"name": "state",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "country",
														"type": "String"
													},
													"sink": {
														"name": "country",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "street",
														"type": "String"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "number",
														"type": "String"
													},
													"sink": {
														"name": "number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "neighborhood",
														"type": "String"
													},
													"sink": {
														"name": "neighborhood",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "complement",
														"type": "String"
													},
													"sink": {
														"name": "complement",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reference",
														"type": "String"
													},
													"sink": {
														"name": "reference",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "geoCoordinates_x",
														"type": "String"
													},
													"sink": {
														"name": "geoCoordinates_x",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "geoCoordinates_y",
														"type": "String"
													},
													"sink": {
														"name": "geoCoordinates_y",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaShipping",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(\npipeline().parameters.ParTabelaShipping,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "orderId",
														"type": "String"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "itemIndex",
														"type": "String"
													},
													"sink": {
														"name": "itemIndex",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "selectedSla",
														"type": "String"
													},
													"sink": {
														"name": "selectedSla",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "lockTTL",
														"type": "String"
													},
													"sink": {
														"name": "lockTTL",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "price",
														"type": "String"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "listPrice",
														"type": "String"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sellingPrice",
														"type": "String"
													},
													"sink": {
														"name": "sellingPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "deliveryWindow",
														"type": "String"
													},
													"sink": {
														"name": "deliveryWindow",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "deliveryCompany",
														"type": "String"
													},
													"sink": {
														"name": "deliveryCompany",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "shippingEstimate",
														"type": "String"
													},
													"sink": {
														"name": "shippingEstimate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "shippingEstimateDate",
														"type": "String"
													},
													"sink": {
														"name": "shippingEstimateDate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													},
													"sink": {
														"name": "data_hora_exportacao",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DS_DW_MALWEE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@pipeline().parameters.ParTabelaShippingItems",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(\npipeline().parameters.ParTabelaShippingItems,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParTabelaShippingItems": {
						"type": "string"
					},
					"ParTabelaShipping": {
						"type": "string"
					},
					"ParTabelaPayment": {
						"type": "string"
					},
					"ParTabelaClient": {
						"type": "string"
					},
					"ParTabelaOrderItems": {
						"type": "string"
					},
					"ParTabelaTotals": {
						"type": "string"
					},
					"ParTabelaHeader": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					},
					"DataHoraProcessamento": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}