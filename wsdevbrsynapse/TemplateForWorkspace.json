{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "wsdevbrsynapse"
		},
		"RestService1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService1'"
		},
		"RestServiceVtex_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestServiceVtex'"
		},
		"SQL_CONTROLE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_CONTROLE'"
		},
		"SapRest_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapRest'"
		},
		"VtexTeste_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'VtexTeste'"
		},
		"as-dev-us-synapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'as-dev-us-synapse-WorkspaceDefaultSqlServer'"
		},
		"linkedService1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedService1'"
		},
		"linkedService2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedService2'"
		},
		"wsbisinapsys-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wsbisinapsys-WorkspaceDefaultSqlServer'"
		},
		"wsdevbrdatalake-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wsdevbrdatalake-WorkspaceDefaultSqlServer'"
		},
		"wsdevbrsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wsdevbrsynapse-WorkspaceDefaultSqlServer'"
		},
		"ADLS_DESTINO_GEN2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sadevbrdatalakemalwee.dfs.core.windows.net"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-dev-br-datalake-mwe.vault.azure.net/"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-dev-br-datalake-mwe.vault.azure.net/"
		},
		"BLOB_IMAGENS_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "Storage-Imagens-material"
		},
		"ORC_GIGAM_ORIGEM_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "con-malwee-orcl-cigam"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ihub.infracommerce.com.br/api/invoices/list/"
		},
		"RestService1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "123"
		},
		"RestServiceVtex_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://malwee.vtexcommercestable.com.br/api/oms/pvt/"
		},
		"RestServiceVtex_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "malwee"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "300"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "RFC_USER_QTQ"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "srvsqecc01.malwee.com.br"
		},
		"SAP_TABLE_ORIGEM_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "00"
		},
		"SapRest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://webdisp-homologacao.malwee.com.br:8445/datalake/"
		},
		"SapRest_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "RFC_USER_QTQ"
		},
		"VtexTeste_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://malwee.vtexcommercestable.com.br/api/oms/pvt/"
		},
		"VtexTeste_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mawee"
		},
		"linkedService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sadevbrdatalakemalwee.dfs.core.windows.net"
		},
		"linkedService2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sadevbrdatalakemalwee.dfs.core.windows.net"
		},
		"wsdevbrsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sadevbrdatalakemalwee.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_AUSP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_ATINN\":[\"140\",\"141\",\"143\",\"144\",\"145\",\"147\",\"148\",\"175\",\"264\",\"275\",\"272\",\"268\",\"139\",\"493\",\"405\",\"349\",\"385\",\"265\",\"269\",\"270\",\"267\",\"816\",\"820\",\"829\",\"892\"],',\n'\"I_KLART\":[\"001\",\"026\",\"200\",\"300\"]','}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_ausp",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['OBJEK']"
													},
													"sink": {
														"name": "OBJEK",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ATINN']"
													},
													"sink": {
														"name": "ATINN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ATZHL']"
													},
													"sink": {
														"name": "ATZHL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MAFID']"
													},
													"sink": {
														"name": "MAFID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KLART']"
													},
													"sink": {
														"name": "KLART",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ATWRT']"
													},
													"sink": {
														"name": "ATWRT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "DATA_HORA_EXPORTACAO"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_AUSP']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_ausp",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_ausp')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_KONV')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_BUKRS\": [\"2001\",\"5001\"],',\n'\"I_DATA_INI\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_SAP_JSON,'\",',\n'\"I_DATA_FIM\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_SAP_JSON,'\",',\n'\"I_REGISTRO_CRIADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,',',\n'\"I_REGISTRO_ALTERADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_5,',',\n'\"I_QTDE_REGISTROS\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_6,\n'}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_konv",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['KNUMV']"
													},
													"sink": {
														"name": "KNUMV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KPOSN']"
													},
													"sink": {
														"name": "KPOSN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['STUNR']"
													},
													"sink": {
														"name": "STUNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ZAEHK']"
													},
													"sink": {
														"name": "ZAEHK",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KSCHL']"
													},
													"sink": {
														"name": "KSCHL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KWERT']"
													},
													"sink": {
														"name": "KWERT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KAWRT']"
													},
													"sink": {
														"name": "KAWRT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KBETR']"
													},
													"sink": {
														"name": "KBETR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KSTAT']"
													},
													"sink": {
														"name": "KSTAT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KDATU']"
													},
													"sink": {
														"name": "KDATU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KINAK']"
													},
													"sink": {
														"name": "KINAK",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_KONV']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_konv",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_konv')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_MARC')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_DATA_INI\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_SAP_JSON,'\",',\n'\"I_DATA_FIM\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_SAP_JSON,'\",',\n'\"I_QTDE_REGISTROS\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_6,\n'}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_marc",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MMSTA']"
													},
													"sink": {
														"name": "MMSTA",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LVORM']"
													},
													"sink": {
														"name": "LVORM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SOBSK']"
													},
													"sink": {
														"name": "SOBSK",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DISPO']"
													},
													"sink": {
														"name": "DISPO",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EISBE']"
													},
													"sink": {
														"name": "EISBE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PLIFZ']"
													},
													"sink": {
														"name": "PLIFZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MRPPP']"
													},
													"sink": {
														"name": "MRPPP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_MARC']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_marc",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_marc')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_VBAK')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_BUKRS\": [\"2001\",\"5001\"],',\n'\"I_DATA_INI\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_SAP_JSON,'\",',\n'\"I_DATA_FIM\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_SAP_JSON,'\",',\n'\"I_REGISTRO_CRIADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,',',\n'\"I_REGISTRO_ALTERADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_5,',',\n'\"I_QTDE_REGISTROS\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_6,\n'}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_vbak",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ERDAT']"
													},
													"sink": {
														"name": "ERDAT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ERNAM']"
													},
													"sink": {
														"name": "ERNAM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AUDAT']"
													},
													"sink": {
														"name": "AUDAT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VBTYP']"
													},
													"sink": {
														"name": "VBTYP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AUART']"
													},
													"sink": {
														"name": "AUART",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LIFSK']"
													},
													"sink": {
														"name": "LIFSK"
													}
												},
												{
													"source": {
														"path": "[['FAKSK']"
													},
													"sink": {
														"name": "FAKSK",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VKORG']"
													},
													"sink": {
														"name": "VKORG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VTWEG']"
													},
													"sink": {
														"name": "VTWEG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SPART']"
													},
													"sink": {
														"name": "SPART",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VKGRP']"
													},
													"sink": {
														"name": "VKGRP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VKBUR']"
													},
													"sink": {
														"name": "VKBUR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KNUMV']"
													},
													"sink": {
														"name": "KNUMV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VDATU']"
													},
													"sink": {
														"name": "VDATU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BSARK']"
													},
													"sink": {
														"name": "BSARK",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KUNNR']"
													},
													"sink": {
														"name": "KUNNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AEDAT']"
													},
													"sink": {
														"name": "AEDAT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KVGR3']"
													},
													"sink": {
														"name": "KVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BUKRS_VF']"
													},
													"sink": {
														"name": "BUKRS_VF",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ZZCODMOD']"
													},
													"sink": {
														"name": "ZZCODMOD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_VBAK']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_vbak",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_vbak')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_VBAP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_BUKRS\": [\"2001\",\"5001\"],',\n'\"I_DATA_INI\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_SAP_JSON,'\",',\n'\"I_DATA_FIM\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_SAP_JSON,'\",',\n'\"I_REGISTRO_CRIADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,',',\n'\"I_REGISTRO_ALTERADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_5,',',\n'\"I_QTDE_REGISTROS\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_6,\n'}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_vbap",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_VBAP']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_vbap",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_vbap')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_VBEP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_BUKRS\": [\"2001\",\"5001\"],',\n'\"I_DATA_INI\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_SAP_JSON,'\",',\n'\"I_DATA_FIM\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_SAP_JSON,'\",',\n'\"I_REGISTRO_CRIADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,',',\n'\"I_REGISTRO_ALTERADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_5,',',\n'\"I_QTDE_REGISTROS\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_6,\n'}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_vbep",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ETENR']"
													},
													"sink": {
														"name": "ETENR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WMENG']"
													},
													"sink": {
														"name": "WMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASIZE']"
													},
													"sink": {
														"name": "J_3ASIZE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3AABGRU']"
													},
													"sink": {
														"name": "J_3AABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASZGR']"
													},
													"sink": {
														"name": "J_3ASZGR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ANETW']"
													},
													"sink": {
														"name": "J_3ANETW",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_VBEP']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_vbep",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_vbep')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_VBPA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_PARVW\": [\"ZR\",\"ZV\",\"ZS\",\"ZL\"],',\n'\"I_BUKRS\": [\"2001\",\"5001\"],',\n'\"I_DATA_INI\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_SAP_JSON,'\",',\n'\"I_DATA_FIM\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_SAP_JSON,'\",',\n'\"I_REGISTRO_CRIADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,',',\n'\"I_REGISTRO_ALTERADO\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_5,',',\n'\"I_QTDE_REGISTROS\":',activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_6,\n'}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_vbpa",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PARVW']"
													},
													"sink": {
														"name": "PARVW",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LIFNR']"
													},
													"sink": {
														"name": "LIFNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PERNR']"
													},
													"sink": {
														"name": "PERNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_VBPA']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_vbpa",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_vbpa')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_API_JSON_SAP_VBRP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Body",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Body",
										"value": {
											"value": "@concat('{',\n'\"I_BUKRS\": [\"2001\",\"5001\"],',\n'\"I_DATA_INI\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_SAP_JSON,'\",',\n'\"I_DATA_FIM\":\"',activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_SAP_JSON,'\"',\n'}'\n)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "10.00:00:00",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "@{variables('Body')}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DsSapRest",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dataset_sapjson_vbrp",
											"type": "DatasetReference",
											"parameters": {
												"FileSystem": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FilePath": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FKIMG']"
													},
													"sink": {
														"name": "FKIMG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FKLMG']"
													},
													"sink": {
														"name": "FKLMG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VGBEL']"
													},
													"sink": {
														"name": "VGBEL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AUBEL']"
													},
													"sink": {
														"name": "AUBEL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AUPOS']"
													},
													"sink": {
														"name": "AUPOS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSPA']"
													},
													"sink": {
														"name": "POSPA",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SKFBP']"
													},
													"sink": {
														"name": "SKFBP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VKGRP']"
													},
													"sink": {
														"name": "VKGRP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VKBUR']"
													},
													"sink": {
														"name": "VKBUR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BWTAR']"
													},
													"sink": {
														"name": "BWTAR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VTWEG_AUFT']"
													},
													"sink": {
														"name": "VTWEG_AUFT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MWSBP']"
													},
													"sink": {
														"name": "MWSBP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_1BCFOP']"
													},
													"sink": {
														"name": "J_1BCFOP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BRTWR']"
													},
													"sink": {
														"name": "BRTWR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3AETENR']"
													},
													"sink": {
														"name": "J_3AETENR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3AVGETE']"
													},
													"sink": {
														"name": "J_3AVGETE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASZGR']"
													},
													"sink": {
														"name": "J_3ASZGR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASIZE']"
													},
													"sink": {
														"name": "J_3ASIZE",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3APGNR']"
													},
													"sink": {
														"name": "J_3APGNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['E_VBRP']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_sapjson_vbrp",
											"type": "DatasetReference",
											"parameters": {
												"FileSystem": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))",
													"type": "Expression"
												},
												"FilePath": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['VBELN']"
													},
													"sink": {
														"name": "VBELN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSNR']"
													},
													"sink": {
														"name": "POSNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MATNR']"
													},
													"sink": {
														"name": "MATNR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PSTYV']"
													},
													"sink": {
														"name": "PSTYV",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ABGRU']"
													},
													"sink": {
														"name": "ABGRU",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIZ']"
													},
													"sink": {
														"name": "UMZIZ",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UMZIN']"
													},
													"sink": {
														"name": "UMZIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NETWR']"
													},
													"sink": {
														"name": "NETWR"
													}
												},
												{
													"source": {
														"path": "[['KWMENG']"
													},
													"sink": {
														"name": "KWMENG",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VRKME']"
													},
													"sink": {
														"name": "VRKME",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WERKS']"
													},
													"sink": {
														"name": "WERKS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['KONDM']"
													},
													"sink": {
														"name": "KONDM",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['MVGR3']"
													},
													"sink": {
														"name": "MVGR3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['J_3ASEAN']"
													},
													"sink": {
														"name": "J_3ASEAN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['_-AFS_-COLLECTION']"
													},
													"sink": {
														"name": "_-AFS_-COLLECTION",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_2,'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"Body": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/dataset_sapjson_vbrp')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_ORACLE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Modelo de importação de tabelas do ADF a partir de uma tabela de controle com as tabelas a importar, suas origens e colunas.",
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RAW_TO_CLEANSING",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@variables('dscParameters')",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodTabela",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "TABELA",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LimpaTabelaColunas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamento]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LimpaTabelaColunas",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Variaveis-SrvOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFLimpaTabelaColunas]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeCredenciaisDBorigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciais]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "Variaveis-SrvOrigem",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeCredenciaisDBorigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DataBaseName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ServerName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataBaseName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_BASE",
											"type": "Expression"
										}
									}
								},
								{
									"name": "UserName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DataBaseName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "UserName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Password",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "UserName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Password",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_PASSWORD",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TipoArmazenamento",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Password",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TipoArmazenamento",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.IND_TIPO_ARMAZENAMENTO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ServerName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ServerName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_SERVIDOR",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SecretNamePassword",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TipoArmazenamento",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SecretNamePassword",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeSQL_SQLOP_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParIndDestinoDL,'1'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_SQLOP_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL_CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"additionalColumns": [
												{
													"name": "DAT_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,16)",
														"type": "Expression"
													}
												}
											],
											"oracleReaderQuery": {
												"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "OracleTable1",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "TABELA",
												"UserName": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
													"type": "Expression"
												},
												"SecretNamePWD": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
													"type": "Expression"
												},
												"SecretNameCON": {
													"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_CON",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set dscParametros SQLOP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFim]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeSchemaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NUM_REGISTROS": {
												"value": {
													"value": "@variables('nuregistros')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_SERVIDOR": {
												"value": {
													"value": "@pipeline().parameters.ParCodServidor",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ORIGEM": {
												"value": {
													"value": "@variables('TipoArmazenamento')",
													"type": "Expression"
												},
												"type": "String"
											},
											"FILE_SIZE": {
												"value": {
													"value": "@variables('FileSize')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL_CSV').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SQLOP_TO_ADLS_RowsCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "nuregistros",
										"value": {
											"value": "@string(activity('Copy_SQLOP_TO_ADLS').output.rowsCopied)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_RowsCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.orc'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL_CSV",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_ORIGEM",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_ORIGEM",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "Set dscParametros SQLOP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dscParameters",
										"value": {
											"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "RAW_TO_CLEANSING",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SeSQL_SQLOP_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParIndDataCleansing,'1'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GravaLogInicioItem-ToCleansing",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_RAW",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_RAW",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "Copy_raw_to_cleansing",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToCleansing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from ', \nactivity('LeCredenciaisDBorigem').output.firstRow.NOM_SCHEMA_RAW,'.',activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW,\n' where ',\nactivity('LeCredenciaisDBorigem').output.firstRow.NOM_COLUNA_REFERENCIA_RAW,\n' =  (select max(',activity('LeCredenciaisDBorigem').output.firstRow.NOM_COLUNA_REFERENCIA_RAW,') from ',\nactivity('LeCredenciaisDBorigem').output.firstRow.NOM_SCHEMA_RAW,'.',activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW,')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "wsdevbrsynapse",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',\ntoLower(activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"ParNomeSchemaOrigem": {
						"type": "String"
					},
					"ParIdPipeline": {
						"type": "String"
					},
					"ParNomeTabelaOrigem": {
						"type": "String"
					},
					"ParNomeSchemaDestino": {
						"type": "string"
					},
					"ParNomeAlias": {
						"type": "string"
					},
					"ParNomeTabelaDestino": {
						"type": "string"
					},
					"ParCodServidor": {
						"type": "int"
					},
					"ParTipoETL": {
						"type": "string"
					},
					"ParIndDestinoDL": {
						"type": "string"
					},
					"ParIndDestinoSQL": {
						"type": "string"
					},
					"ParCodTabela": {
						"type": "int"
					},
					"SourceStore_Location": {
						"type": "string"
					},
					"SourceStore_Directory": {
						"type": "string"
					},
					"DestinationStore_Location": {
						"type": "string"
					},
					"DestinationStore_Directory": {
						"type": "string"
					},
					"ParIndDataCleansing": {
						"type": "string"
					}
				},
				"variables": {
					"nuregistros": {
						"type": "String",
						"defaultValue": "0"
					},
					"receiver": {
						"type": "String"
					},
					"ComandoGeraSelect": {
						"type": "String",
						"defaultValue": ",@coluna\t\tvarchar(max)  select   \t\t@coluna =  \t\t\tcase  \t\t\t\twhen @coluna is null  \t\t\t\t\tThen 'Convert(varchar(max),isnull('+ name  + ',' +\t \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127) then '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t  then '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else '''''' +'))' \t\t\t\t\t\t\t\tend  \t\t\t\tElse \t\t  \t\t\t\t\t @coluna + '+' + 'Convert(varchar(max),isnull('+ name + ','\t+ \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127)\tthen '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t\tthen '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse '''''' +'))' \t\t\t\t\t\t\t\tend \t\t\t\tend from  \t\tsys.syscolumns  where  \t\tid = OBJECT_ID(@Tabela) order by colid  select @coluna = ' SUBSTRING(sys.fn_sqlvarbasetostr(HASHBYTES(''MD5'',' +\t@coluna + ')),3,32) HASH_KEY from ' + @tabela  select @coluna ComandoSelectHash"
					},
					"ComandoSelectHash": {
						"type": "String"
					},
					"DataBaseName": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"TipoArmazenamento": {
						"type": "String"
					},
					"ServerName": {
						"type": "String"
					},
					"NomeBucket": {
						"type": "String",
						"defaultValue": "dl"
					},
					"DestinoDL": {
						"type": "String"
					},
					"SecretNamePassword": {
						"type": "String"
					},
					"FileSize": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"NumFiles": {
						"type": "String",
						"defaultValue": "0"
					},
					"dscParameters": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/ORACLE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/OracleTable1')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]",
				"[concat(variables('workspaceId'), '/datasets/wsdevbrsynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_ORACLE_PROCESSA_DIMENSIONAL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SP_CIGAM_PROCESSA_DIMENSIONAL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_CIGAM_PROCESSA_DIMENSIONAL"
						},
						"linkedServiceName": {
							"referenceName": "wsdevbrsynapse-WorkspaceDefaultSqlServer",
							"type": "LinkedServiceReference",
							"parameters": {
								"DBName": "dwmwe"
							}
						}
					}
				],
				"folder": {
					"name": "Modelos/ORACLE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wsdevbrsynapse-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADF_MODELO_SAP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Modelo de importação de tabelas do ADF a partir de uma tabela de controle com as tabelas a importar, suas origens e colunas.",
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "RAW_TO_CLEANSING",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@variables('dscParameters')",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodTabela",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "TABELA",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LimpaTabelaColunas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamento]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LimpaTabelaColunas",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Variaveis-SrvOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFLimpaTabelaColunas]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeCredenciaisDBorigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciais]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "Variaveis-SrvOrigem",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeCredenciaisDBorigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DataBaseName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ServerName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataBaseName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_BASE",
											"type": "Expression"
										}
									}
								},
								{
									"name": "UserName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DataBaseName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "UserName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Password",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "UserName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Password",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_PASSWORD",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TipoArmazenamento",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Password",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TipoArmazenamento",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.IND_TIPO_ARMAZENAMENTO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ServerName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ServerName",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_SERVIDOR",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SecretNamePassword",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "TipoArmazenamento",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SecretNamePassword",
										"value": {
											"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SeSQL_SQLOP_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParIndDestinoDL,'1'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_SQLOP_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL_CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,16)",
														"type": "Expression"
													}
												}
											],
											"rfcTableOptions": "",
											"customRfcReadTableFunctionModule": "",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SAP_TABLE_RESOURCE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_ORIGEM",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set dscParametros SQLOP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFim]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeSchemaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@pipeline().parameters.ParNomeTabelaOrigem",
													"type": "Expression"
												},
												"type": "String"
											},
											"NUM_REGISTROS": {
												"value": {
													"value": "@variables('nuregistros')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_SERVIDOR": {
												"value": {
													"value": "@pipeline().parameters.ParCodServidor",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"ORIGEM": {
												"value": {
													"value": "@variables('TipoArmazenamento')",
													"type": "Expression"
												},
												"type": "String"
											},
											"FILE_SIZE": {
												"value": {
													"value": "@variables('FileSize')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL_CSV').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SQLOP_TO_ADLS_RowsCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy_SQLOP_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "nuregistros",
										"value": {
											"value": "@string(activity('Copy_SQLOP_TO_ADLS').output.rowsCopied)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_RowsCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',toLower(pipeline().parameters.ParNomeTabelaDestino),'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.orc'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL_CSV",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_ORIGEM",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_ORIGEM",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "Set dscParametros SQLOP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "dscParameters",
										"value": {
											"value": "@concat('select ',activity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,' from ',pipeline().parameters.ParNomeSchemaOrigem,if(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),pipeline().parameters.ParNomeTabelaOrigem)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "RAW_TO_CLEANSING",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SeSQL_SQLOP_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(variables('TipoArmazenamento'),'SQLOP'),equals(pipeline().parameters.ParIndDataCleansing,'1'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GravaLogInicioItem-ToCleansing",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItem]",
											"storedProcedureParameters": {
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"COD_SERVIDOR": {
													"type": "Int32",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.COD_SERVIDOR",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.FirstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_SCHEMA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_SCHEMA_RAW",
														"type": "Expression"
													}
												},
												"NOM_TABELA_ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_TABELA_RAW",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.IND_TIPO_ARMAZENAMENTO",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "Copy_raw_to_cleansing",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToCleansing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from ', \nactivity('LeCredenciaisDBorigem').output.firstRow.NOM_SCHEMA_RAW,'.',activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW,\n' where ',\nactivity('LeCredenciaisDBorigem').output.firstRow.NOM_COLUNA_REFERENCIA_RAW,\n' =  (select max(',activity('LeCredenciaisDBorigem').output.firstRow.NOM_COLUNA_REFERENCIA_RAW,') from ',\nactivity('LeCredenciaisDBorigem').output.firstRow.NOM_SCHEMA_RAW,'.',activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_RAW,')')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "wsdevbrsynapse",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(activity('LeCredenciaisDBorigem').output.firstRow.NOM_REGION,'/',\nReplace(activity('LeCredenciaisDBorigem').output.firstRow.NOM_ALIAS,'_',''),'/',\ntoLower(activity('LeCredenciaisDBorigem').output.firstRow.NOM_TABELA_DESTINO)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(toLower(pipeline().parameters.ParNomeTabelaDestino),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisDBorigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"ParNomeSchemaOrigem": {
						"type": "String"
					},
					"ParIdPipeline": {
						"type": "String"
					},
					"ParNomeTabelaOrigem": {
						"type": "String"
					},
					"ParNomeSchemaDestino": {
						"type": "string"
					},
					"ParNomeAlias": {
						"type": "string"
					},
					"ParNomeTabelaDestino": {
						"type": "string"
					},
					"ParCodServidor": {
						"type": "int"
					},
					"ParTipoETL": {
						"type": "string"
					},
					"ParIndDestinoDL": {
						"type": "string"
					},
					"ParIndDestinoSQL": {
						"type": "string"
					},
					"ParCodTabela": {
						"type": "int"
					},
					"SourceStore_Location": {
						"type": "string"
					},
					"SourceStore_Directory": {
						"type": "string"
					},
					"DestinationStore_Location": {
						"type": "string"
					},
					"DestinationStore_Directory": {
						"type": "string"
					},
					"ParIndDataCleansing": {
						"type": "string"
					}
				},
				"variables": {
					"nuregistros": {
						"type": "String",
						"defaultValue": "0"
					},
					"receiver": {
						"type": "String"
					},
					"ComandoGeraSelect": {
						"type": "String",
						"defaultValue": ",@coluna\t\tvarchar(max)  select   \t\t@coluna =  \t\t\tcase  \t\t\t\twhen @coluna is null  \t\t\t\t\tThen 'Convert(varchar(max),isnull('+ name  + ',' +\t \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127) then '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t  then '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else '''''' +'))' \t\t\t\t\t\t\t\tend  \t\t\t\tElse \t\t  \t\t\t\t\t @coluna + '+' + 'Convert(varchar(max),isnull('+ name + ','\t+ \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127)\tthen '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t\tthen '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse '''''' +'))' \t\t\t\t\t\t\t\tend \t\t\t\tend from  \t\tsys.syscolumns  where  \t\tid = OBJECT_ID(@Tabela) order by colid  select @coluna = ' SUBSTRING(sys.fn_sqlvarbasetostr(HASHBYTES(''MD5'',' +\t@coluna + ')),3,32) HASH_KEY from ' + @tabela  select @coluna ComandoSelectHash"
					},
					"ComandoSelectHash": {
						"type": "String"
					},
					"DataBaseName": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"TipoArmazenamento": {
						"type": "String"
					},
					"ServerName": {
						"type": "String"
					},
					"NomeBucket": {
						"type": "String",
						"defaultValue": "dl"
					},
					"DestinoDL": {
						"type": "String"
					},
					"SecretNamePassword": {
						"type": "String"
					},
					"FileSize": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"NumFiles": {
						"type": "String",
						"defaultValue": "0"
					},
					"dscParameters": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/SAP_TABLE_RESOURCE')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]",
				"[concat(variables('workspaceId'), '/datasets/wsdevbrsynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CLEANSING_CIGAM_GST_BI_CLIENTE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CLEANSING_CIGAM_GST_BI_CLIENTE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_CLEANSING_CIGAM_GST_BI_CLIENTE]"
						},
						"linkedServiceName": {
							"referenceName": "wsdevbrsynapse-WorkspaceDefaultSqlServer",
							"type": "LinkedServiceReference",
							"parameters": {
								"DBName": "dwmwe"
							}
						}
					},
					{
						"name": "CIGAM_GST_BI_CLIENTE_PARQUET",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CLEANSING_CIGAM_GST_BI_CLIENTE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "\nSELECT \n[pk_cliente], \n[estab_idcigam], \n[cliente_codigo], \n[cliente_nome], \n[cliente_cpfcnpj], \n[cliente_email], \n[cliente_cidade], \n[cliente_estado], \n[cliente_sexo], \n[cliente_aniversario], \n[cliente_ddd_celular], \n[cliente_celular], \n[cliente_endereco], \n[cliente_numero], \n[cliente_complemento], \n[cliente_bairro], \n[cliente_cep], \n[num_matricula], \n[flag_vigencia], \n[dat_inicio_vigencia], \n[dat_final_vigencia]\nFROM TEMP.CIGAM_CLIENTES_FINAL"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pk_cliente",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "pk_cliente",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "estab_idcigam",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "estab_idcigam",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_codigo",
											"type": "Single",
											"physicalType": "float"
										},
										"sink": {
											"name": "cliente_codigo",
											"type": "Single",
											"physicalType": "FLOAT"
										}
									},
									{
										"source": {
											"name": "cliente_nome",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_nome",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_cpfcnpj",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_cpfcnpj",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_email",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_cidade",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_cidade",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_estado",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_estado",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_sexo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_sexo",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_aniversario",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "cliente_aniversario",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "cliente_ddd_celular",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_ddd_celular",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_celular",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_celular",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_endereco",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_endereco",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_numero",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_numero",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_complemento",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_complemento",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_bairro",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_bairro",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "cliente_cep",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cliente_cep",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "num_matricula",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "num_matricula",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "flag_vigencia",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "flag_vigencia",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "dat_inicio_vigencia",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "dat_inicio_vigencia",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "dat_final_vigencia",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "dat_final_vigencia",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GST_BI_CLIENTES_PARQUET",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GST_BI_CLIENTES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Modelos/CLEANSING/ORACLE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/wsdevbrsynapse-WorkspaceDefaultSqlServer')]",
				"[concat(variables('workspaceId'), '/datasets/GST_BI_CLIENTES_PARQUET')]",
				"[concat(variables('workspaceId'), '/datasets/GST_BI_CLIENTES')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CleansingClientesORC')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Fluxo cleansing de dados da tabela Clientes do Cigam.",
				"activities": [
					{
						"name": "Copy_mly",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "raw/brazil/transacional/cigam/frente de caixa/gst_bi_clientes/"
							},
							{
								"name": "Destination",
								"value": "cleansing/cigam/Clientes"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "\nSELECT \n[pk_cliente], \n[estab_idcigam], \n[cliente_codigo], \n[cliente_nome], \n[cliente_cpfcnpj], \n[cliente_email], \n[cliente_cidade], \n[cliente_estado], \n[cliente_sexo], \n[cliente_aniversario], \n[cliente_ddd_celular], \n[cliente_celular], \n[cliente_endereco], \n[cliente_numero], \n[cliente_complemento], \n[cliente_bairro], \n[cliente_cep], \n[num_matricula], \n[flag_vigencia], \n[dat_inicio_vigencia], \n[dat_final_vigencia]\nFROM TEMP.CIGAM_CLIENTES_FINAL"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "pk_cliente",
											"type": "String"
										},
										"sink": {
											"name": "pk_cliente",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "estab_idcigam",
											"type": "String"
										},
										"sink": {
											"name": "estab_idcigam",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_codigo",
											"type": "Single"
										},
										"sink": {
											"name": "cliente_codigo",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "cliente_nome",
											"type": "String"
										},
										"sink": {
											"name": "cliente_nome",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_cpfcnpj",
											"type": "String"
										},
										"sink": {
											"name": "cliente_cpfcnpj",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_email",
											"type": "String"
										},
										"sink": {
											"name": "cliente_email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_cidade",
											"type": "String"
										},
										"sink": {
											"name": "cliente_cidade",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_estado",
											"type": "String"
										},
										"sink": {
											"name": "cliente_estado",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_sexo",
											"type": "String"
										},
										"sink": {
											"name": "cliente_sexo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_aniversario",
											"type": "DateTime"
										},
										"sink": {
											"name": "cliente_aniversario",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "cliente_ddd_celular",
											"type": "String"
										},
										"sink": {
											"name": "cliente_ddd_celular",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_celular",
											"type": "String"
										},
										"sink": {
											"name": "cliente_celular",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_endereco",
											"type": "String"
										},
										"sink": {
											"name": "cliente_endereco",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_numero",
											"type": "String"
										},
										"sink": {
											"name": "cliente_numero",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_complemento",
											"type": "String"
										},
										"sink": {
											"name": "cliente_complemento",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_bairro",
											"type": "String"
										},
										"sink": {
											"name": "cliente_bairro",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cliente_cep",
											"type": "String"
										},
										"sink": {
											"name": "cliente_cep",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "num_matricula",
											"type": "String"
										},
										"sink": {
											"name": "num_matricula",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "flag_vigencia",
											"type": "Int32"
										},
										"sink": {
											"name": "flag_vigencia",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "dat_inicio_vigencia",
											"type": "DateTime"
										},
										"sink": {
											"name": "dat_inicio_vigencia",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "dat_final_vigencia",
											"type": "DateTime"
										},
										"sink": {
											"name": "dat_final_vigencia",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SqlPoolTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable5')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_ADF_MODELO_API_JSON_SAP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GravaLogInicio",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "PADFIdPacoteAPI",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									},
									"NOM_PACOTE": {
										"type": "String",
										"value": "ADF_MODELO_API"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "ExecutaPipelineModeloAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ADF_MODELO_API_JSON_SAP_AUSP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParIdPipeline": {
									"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
									"type": "Expression"
								},
								"ParCodEndPoint": {
									"value": "@pipeline().parameters.ParCodEndPoint",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GravaLogErroUPD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExecutaPipelineModeloAPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PLogADFItemErroAPI]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_ERRO": {
									"value": {
										"value": "@activity('ExecutaPipelineModeloAPI').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"NOM_ALIAS_ENDPOINT": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD_ENDPOINT": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EnviaEmailDeErroUPD",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MsgErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-21.brazilsouth.logic.azure.com:443/workflows/741f9460457d489996f012404ef44c15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j67cgGl-SI96CK3Ef9EClXXCdWao6ACexeV0h3sDZEU",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"database\":\"\",\n\t\"environment\":\"@{activity('GravaLogInicio').output.firstRow.DESC_ENVIRONMENT}\",\n\t\"message\": \"@{activity('ExecutaPipelineModeloAPI').error.message}\",\n\t\"pipelineName\": \"@{variables('MsgErro')}\",\n\t\"receiver\": \"@{activity('GravaLogInicio').output.firstRow.DESC_EMAIL_ERRO}\",\n    \"schema\": \"\",  \n    \"table\": \"\",\n\"servername\": \"\",\n\"type\":\"API\",\n\"endpoint\":\"@{activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT}\",\n\"url\":\"@{variables('FullURL')}\",\n\"output\":\"@{activity('GravaLogInicio').output.firstRow.NOM_RETORNO_URL}\" \n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MsgErroUPD",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GravaLogErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MsgErro",
							"value": {
								"value": "@concat('Pipeline com erro: API_TO_ADLS: [',activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT,']')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"ParCodEndPoint": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String",
						"defaultValue": "angelo.T1158.dataex@xpi.com.br"
					},
					"MsgErro": {
						"type": "String"
					},
					"FullURL": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/pipelines/ADF_MODELO_API_JSON_SAP_AUSP')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_ADF_MODELO_ORACLE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GravaLogInicio",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFIdPacote]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									},
									"NOM_PACOTE": {
										"type": "String",
										"value": "ADF_MODELO"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "SeTipoETLUPDATE",
						"description": "Coloquei o teste para aceitar ETLs tipo U e I para testar o processamento do Incremental no mesmo PipeLine do Update",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Variaveis-PADFIdPacote",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(variables('TipoETL'),'U'),equals(variables('TipoETL'),'I'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutaPipelineUPDATE",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ADF_MODELO_ORACLE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ParNomeSchemaOrigem": {
												"value": "@replace(variables('VarNomeSchemaOrigem'),' ','')",
												"type": "Expression"
											},
											"ParIdPipeline": {
												"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
												"type": "Expression"
											},
											"ParNomeTabelaOrigem": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM",
												"type": "Expression"
											},
											"ParNomeSchemaDestino": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_SCHEMA_DESTINO",
												"type": "Expression"
											},
											"ParNomeAlias": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_ALIAS",
												"type": "Expression"
											},
											"ParNomeTabelaDestino": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_TABELA_DESTINO",
												"type": "Expression"
											},
											"ParCodServidor": {
												"value": "@activity('GravaLogInicio').output.firstRow.COD_SERVIDOR",
												"type": "Expression"
											},
											"ParTipoETL": {
												"value": "@variables('TipoETL')",
												"type": "Expression"
											},
											"ParIndDestinoDL": {
												"value": "@variables('IndDestinoDL')",
												"type": "Expression"
											},
											"ParIndDestinoSQL": {
												"value": "@variables('IndDestinoSQL')",
												"type": "Expression"
											},
											"ParCodTabela": {
												"value": "@pipeline().parameters.ParCodTabela",
												"type": "Expression"
											},
											"ParIndDataCleansing": {
												"value": "@variables('IndDataCleansing')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "GravaLogErroUPD",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ExecutaPipelineUPDATE",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemErro]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_ERRO": {
												"value": {
													"value": "@activity('ExecutaPipelineUPDATE').Error.Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@variables('VarNomeSchemaOrigem')",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "EnviaEmailDeErroUPD",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "MsgErroUPD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-21.brazilsouth.logic.azure.com:443/workflows/741f9460457d489996f012404ef44c15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j67cgGl-SI96CK3Ef9EClXXCdWao6ACexeV0h3sDZEU",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"database\":\"@{activity('GravaLogInicio').output.firstRow.NOM_BASE}\",\n\t\"environment\":\"@{activity('GravaLogInicio').output.firstRow.DESC_ENVIRONMENT}\",\n\t\"message\": \"@{activity('ExecutaPipelineUPDATE').error.message}\",\n\t\"pipelineName\": \"@{variables('MsgErro')}\",\n\t\"receiver\": \"@{variables('receiver')}\",\n    \"schema\": \"@{activity('GravaLogInicio').output.firstRow.NOM_SCHEMA_ORIGEM}\",  \n    \"table\": \"@{activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM}\",\n\"servername\": \"@{replace(activity('GravaLogInicio').output.firstRow.NOM_SERVIDOR, '\\','-') }\",\n\"type\":\"Table\",\n\"endpoint\":\"\",\n\"url\":\"\",\n\"output\":\"\"\n}\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "MsgErroUPD",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GravaLogErroUPD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "MsgErro",
										"value": {
											"value": "@concat('Pipeline com erro: SQL_TO_ADLS_HASH: [',variables('VarNomeSchemaOrigem'),if(equals(variables('VarNomeSchemaOrigem'),''),'','.'),activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM,']')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Variaveis-PADFIdPacote",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "IndTipoETL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TipoETL",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_ETL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ListaDeEmails",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "IndTipoETL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "receiver",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.DSC_EMAIL_ERRO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "NomeSchemaOrigemSemNull",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ListaDeEmails",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarNomeSchemaOrigem",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.NOM_SCHEMA_ORIGEM",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IndDestinoDL",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "NomeSchemaOrigemSemNull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndDestinoDL",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_DESTINO_DL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IndDestinoSQL",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "IndDestinoDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndDestinoSQL",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_DESTINO_SQL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IndDataCleansing",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "IndDestinoSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndDataCleansing",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_DATA_CLEANSING",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ParCodTabela": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String",
						"defaultValue": "angelo.T1158.dataex@xpi.com.br"
					},
					"MsgErro": {
						"type": "String"
					},
					"TipoETL": {
						"type": "String"
					},
					"VarNomeSchemaOrigem": {
						"type": "String"
					},
					"IndDestinoDL": {
						"type": "String"
					},
					"IndDestinoSQL": {
						"type": "String"
					},
					"IndDataCleansing": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/ORACLE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/pipelines/ADF_MODELO_ORACLE')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_ADF_MODELO_SAP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GravaLogInicio",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFIdPacote]",
								"storedProcedureParameters": {
									"COD_TABELA": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodTabela",
											"type": "Expression"
										}
									},
									"NOM_PACOTE": {
										"type": "String",
										"value": "ADF_MODELO"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "SeTipoETLUPDATE",
						"description": "Coloquei o teste para aceitar ETLs tipo U e I para testar o processamento do Incremental no mesmo PipeLine do Update",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Variaveis-PADFIdPacote",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(equals(variables('TipoETL'),'U'),equals(variables('TipoETL'),'I'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecutaPipelineUPDATE",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ADF_MODELO_SAP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ParNomeSchemaOrigem": {
												"value": "@replace(variables('VarNomeSchemaOrigem'),' ','')",
												"type": "Expression"
											},
											"ParIdPipeline": {
												"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
												"type": "Expression"
											},
											"ParNomeTabelaOrigem": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM",
												"type": "Expression"
											},
											"ParNomeSchemaDestino": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_SCHEMA_DESTINO",
												"type": "Expression"
											},
											"ParNomeAlias": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_ALIAS",
												"type": "Expression"
											},
											"ParNomeTabelaDestino": {
												"value": "@activity('GravaLogInicio').output.firstRow.NOM_TABELA_DESTINO",
												"type": "Expression"
											},
											"ParCodServidor": {
												"value": "@activity('GravaLogInicio').output.firstRow.COD_SERVIDOR",
												"type": "Expression"
											},
											"ParTipoETL": {
												"value": "@variables('TipoETL')",
												"type": "Expression"
											},
											"ParIndDestinoDL": {
												"value": "@variables('IndDestinoDL')",
												"type": "Expression"
											},
											"ParIndDestinoSQL": {
												"value": "@variables('IndDestinoSQL')",
												"type": "Expression"
											},
											"ParCodTabela": {
												"value": "@pipeline().parameters.ParCodTabela",
												"type": "Expression"
											},
											"ParIndDataCleansing": {
												"value": "@activity('GravaLogInicio').output.firstRow.IND_DATA_CLEANSING",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "GravaLogErroUPD",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "ExecutaPipelineUPDATE",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemErro]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"DSC_ERRO": {
												"value": {
													"value": "@activity('ExecutaPipelineUPDATE').Error.Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_SCHEMA_ORIGEM": {
												"value": {
													"value": "@variables('VarNomeSchemaOrigem')",
													"type": "Expression"
												},
												"type": "String"
											},
											"NOM_TABELA_ORIGEM": {
												"value": {
													"value": "@activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_TABELA": {
												"value": {
													"value": "@pipeline().parameters.ParCodTabela",
													"type": "Expression"
												},
												"type": "Int64"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "EnviaEmailDeErroUPD",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "MsgErroUPD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-21.brazilsouth.logic.azure.com:443/workflows/741f9460457d489996f012404ef44c15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j67cgGl-SI96CK3Ef9EClXXCdWao6ACexeV0h3sDZEU",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"database\":\"@{activity('GravaLogInicio').output.firstRow.NOM_BASE}\",\n\t\"environment\":\"@{activity('GravaLogInicio').output.firstRow.DESC_ENVIRONMENT}\",\n\t\"message\": \"@{activity('ExecutaPipelineUPDATE').error.message}\",\n\t\"pipelineName\": \"@{variables('MsgErro')}\",\n\t\"receiver\": \"@{variables('receiver')}\",\n    \"schema\": \"@{activity('GravaLogInicio').output.firstRow.NOM_SCHEMA_ORIGEM}\",  \n    \"table\": \"@{activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM}\",\n\"servername\": \"@{replace(activity('GravaLogInicio').output.firstRow.NOM_SERVIDOR, '\\','-') }\",\n\"type\":\"Table\",\n\"endpoint\":\"\",\n\"url\":\"\",\n\"output\":\"\"\n}\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "MsgErroUPD",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GravaLogErroUPD",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "MsgErro",
										"value": {
											"value": "@concat('Pipeline com erro: SQL_TO_ADLS_HASH: [',variables('VarNomeSchemaOrigem'),if(equals(variables('VarNomeSchemaOrigem'),''),'','.'),activity('GravaLogInicio').output.firstRow.NOM_TABELA_ORIGEM,']')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Variaveis-PADFIdPacote",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "IndTipoETL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TipoETL",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_ETL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ListaDeEmails",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "IndTipoETL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "receiver",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.DSC_EMAIL_ERRO",
											"type": "Expression"
										}
									}
								},
								{
									"name": "NomeSchemaOrigemSemNull",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ListaDeEmails",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarNomeSchemaOrigem",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.NOM_SCHEMA_ORIGEM",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IndDestinoDL",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "NomeSchemaOrigemSemNull",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndDestinoDL",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_DESTINO_DL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IndDestinoSQL",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "IndDestinoDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndDestinoSQL",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_DESTINO_SQL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IndDataCleansing",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "IndDestinoSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndDataCleansing",
										"value": {
											"value": "@activity('GravaLogInicio').output.firstRow.IND_DATA_CLEANSING",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ParCodTabela": {
						"type": "int"
					}
				},
				"variables": {
					"receiver": {
						"type": "String",
						"defaultValue": "angelo.T1158.dataex@xpi.com.br"
					},
					"MsgErro": {
						"type": "String"
					},
					"TipoETL": {
						"type": "String"
					},
					"VarNomeSchemaOrigem": {
						"type": "String"
					},
					"IndDestinoDL": {
						"type": "String"
					},
					"IndDestinoSQL": {
						"type": "String"
					},
					"IndDataCleansing": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/pipelines/ADF_MODELO_SAP')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_ADF_MODELO_SAP_SEQUENCIAL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "COD_TABELA_LK",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select COD_TABELA from CTR_ADF_TABELA where  COD_SERVIDOR = 14",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "COD_TABELA_FE",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "COD_TABELA_LK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('COD_TABELA_LK').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "EXEC_ADF_MODELO_SAP",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "EXEC_ADF_MODELO_SAP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ParCodTabela": {
												"value": "@{item().COD_TABELA}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Modelos/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_GDRIVE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LogicApp Google drive",
						"description": "{\"id\":1}",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-19.brazilsouth.logic.azure.com:443/workflows/865ffec17830491ca85a73b6ea247026/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QiBbWSM8cN1bUaw4OihZ5Ld5xVnWMiUOIjcruTSV4qo",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"id": 1
							}
						}
					},
					{
						"name": "wait 1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "LogicApp Google drive",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1800
						}
					},
					{
						"name": "LogicApp Google drive tentativa2",
						"description": "[[]",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "wait 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-19.brazilsouth.logic.azure.com:443/workflows/865ffec17830491ca85a73b6ea247026/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QiBbWSM8cN1bUaw4OihZ5Ld5xVnWMiUOIjcruTSV4qo",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"id": 1
							}
						}
					},
					{
						"name": "wait 2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "LogicApp Google drive tentativa2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1800
						}
					},
					{
						"name": "LogicApp Google drive tentativa3",
						"description": "[[]",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "wait 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-19.brazilsouth.logic.azure.com:443/workflows/865ffec17830491ca85a73b6ea247026/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=QiBbWSM8cN1bUaw4OihZ5Ld5xVnWMiUOIjcruTSV4qo",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"id": 1
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/GOOGLEDRIVE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_MODELO_VTEX_ORDER')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "VtexOrder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sequence']"
										},
										"sink": {
											"name": "sequence",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['marketplaceOrderId']"
										},
										"sink": {
											"name": "marketplaceOrderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sellerOrderId']"
										},
										"sink": {
											"name": "sellerOrderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['origin']"
										},
										"sink": {
											"name": "origin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['affiliateId']"
										},
										"sink": {
											"name": "affiliateId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['salesChannel']"
										},
										"sink": {
											"name": "salesChannel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['merchantName']"
										},
										"sink": {
											"name": "merchantName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['statusDescription']"
										},
										"sink": {
											"name": "statusDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value']"
										},
										"sink": {
											"name": "value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['creationDate']"
										},
										"sink": {
											"name": "creationDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['orderGroup']"
										},
										"sink": {
											"name": "orderGroup",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['totals']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexOrder_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "VtexOrder_total",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VtexOrder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sequence']"
										},
										"sink": {
											"name": "sequence",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['value']"
										},
										"sink": {
											"name": "value",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['totals']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexorder_totals_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "VtexClient",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VtexShipping_logistcInfo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['firstName']"
										},
										"sink": {
											"name": "firstName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['lastName']"
										},
										"sink": {
											"name": "lastName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['documentType']"
										},
										"sink": {
											"name": "documentType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['document']"
										},
										"sink": {
											"name": "document",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['phone']"
										},
										"sink": {
											"name": "phone",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexclient_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "VtexItems",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VtexOrder_total",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['uniqueId']"
										},
										"sink": {
											"name": "uniqueId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ean']"
										},
										"sink": {
											"name": "ean",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['lockId']"
										},
										"sink": {
											"name": "lockId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['quantity']"
										},
										"sink": {
											"name": "quantity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['seller']"
										},
										"sink": {
											"name": "seller",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['refId']"
										},
										"sink": {
											"name": "refId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['price']"
										},
										"sink": {
											"name": "price",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['listPrice']"
										},
										"sink": {
											"name": "listPrice",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['imageUrl']"
										},
										"sink": {
											"name": "imageUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['additionalInfo']['brandName']"
										},
										"sink": {
											"name": "brandName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['additionalInfo']['brandId']"
										},
										"sink": {
											"name": "brandId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['additionalInfo']['categoriesIds']"
										},
										"sink": {
											"name": "categoriesIds",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['items']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexitems_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "VtexItems_categories",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VtexItems",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['additionalInfo']['categoriesIds']"
										},
										"sink": {
											"name": "categoriesIds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "idcat",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "namecat",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['items'][0]['additionalInfo']['categories']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexitems_categories_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Vtexpayment",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VtexClient",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['uniqueId']"
										},
										"sink": {
											"name": "uniqueId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['id']"
										},
										"sink": {
											"name": "idItem",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "idpayment",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['value']"
										},
										"sink": {
											"name": "value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['installments']"
										},
										"sink": {
											"name": "installments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['referenceValue']"
										},
										"sink": {
											"name": "referenceValue",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['paymentData']['transactions'][0]['payments']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexpayment_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "VtexShipping",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VtexItems_categories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['uniqueId']"
										},
										"sink": {
											"name": "uniqueId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "iditems",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['addressType']"
										},
										"sink": {
											"name": "addressType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['receiverName']"
										},
										"sink": {
											"name": "receiverName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['addressId']"
										},
										"sink": {
											"name": "addressId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['postalCode']"
										},
										"sink": {
											"name": "postalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['street']"
										},
										"sink": {
											"name": "street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['number']"
										},
										"sink": {
											"name": "number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['neighborhood']"
										},
										"sink": {
											"name": "neighborhood",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['complement']"
										},
										"sink": {
											"name": "complement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['reference']"
										},
										"sink": {
											"name": "reference",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['id']"
										},
										"sink": {
											"name": "idshipping",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['items']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexshipping_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "VtexShipping_logistcInfo",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "VtexShipping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_HORA_EXPORTACAO",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['itemIndex']"
										},
										"sink": {
											"name": "itemIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['selectedSla']"
										},
										"sink": {
											"name": "selectedSla",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['lockTTL']"
										},
										"sink": {
											"name": "lockTTL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['price']"
										},
										"sink": {
											"name": "price",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['listPrice']"
										},
										"sink": {
											"name": "listPrice",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sellingPrice']"
										},
										"sink": {
											"name": "sellingPrice",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deliveryWindow']"
										},
										"sink": {
											"name": "deliveryWindow",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deliveryCompany']"
										},
										"sink": {
											"name": "deliveryCompany",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['shippingEstimate']"
										},
										"sink": {
											"name": "shippingEstimate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['shippingEstimateDate']"
										},
										"sink": {
											"name": "shippingEstimateDate",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['shippingData']['logisticsInfo']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexshippingLogistical_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Modelos/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/OrderDetailsJson')]",
				"[concat(variables('workspaceId'), '/datasets/vtexOrder_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexorder_totals_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexclient_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexitems_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexitems_categories_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexpayment_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexshipping_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexshippingLogistical_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_MODELO_VTEX_ORDER_TESTE_DAT_EXPORTACAO')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "VtexOrder",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataBRZ",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "DATA_EXPORTACAO",
										"value": {
											"value": "@variables('DataBRZ')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "order",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DATA_EXPORTACAO']"
										},
										"sink": {
											"name": "data_exportacao",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['totals']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexOrder_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Vtexpayment",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['uniqueId']"
										},
										"sink": {
											"name": "uniqueId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['id']"
										},
										"sink": {
											"name": "idItem",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "idpayment",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['value']"
										},
										"sink": {
											"name": "value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['installments']"
										},
										"sink": {
											"name": "installments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['referenceValue']"
										},
										"sink": {
											"name": "referenceValue",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['paymentData']['transactions'][0]['payments']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexpayment_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "recebe_data",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select [dbo].[getdatebrz]() as DATABRZ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "tabela"
								}
							}
						}
					},
					{
						"name": "DataBRZ",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "recebe_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataBRZ",
							"value": "."
						}
					}
				],
				"variables": {
					"DataBRZ": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Modelos/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/OrderDetailsJson')]",
				"[concat(variables('workspaceId'), '/datasets/vtexOrder_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/vtexpayment_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_CLIENTES')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Cigam",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "114"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Cigam",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Cigam_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Cigam_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "114"
							}
						}
					},
					{
						"name": "Cigam_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "114"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_DEVOLUCAOCLIENTE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "113"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "113"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "113"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_ESTABELECIMENTO')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "112"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "112"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "112"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_ESTAB_USUARIOS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "116"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "116"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "116"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_ESTOQUEHISTORICO')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "120"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "120"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "120"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_METALOJA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "117"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "117"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "117"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_PROCESSA_DIMENSIONAL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ADF_MODELO_ORACLE_PROCESSA_DIMENSIONAL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ADF_MODELO_ORACLE_PROCESSA_DIMENSIONAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/ADF_MODELO_ORACLE_PROCESSA_DIMENSIONAL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_PRODUTOENTRADA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "119"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "119"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "119"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_PRODUTOS_')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "111"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "111"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "111"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_PRODUTO_ESTOQUE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "118"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "118"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "118"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_CIGAM_GST_BI_VENDAS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Gestor_CRMProduto",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "115"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Gestor_CRMProduto_Tentativa_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "115"
							}
						}
					},
					{
						"name": "Gestor_CRMProduto_Tentativa_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_ORACLE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "115"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/CIGAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_ORACLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_AFS_DPRG_KOND')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "80"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 15
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 15
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "80"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "80"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_AFS_MVKE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "76"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "76"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "76"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_AUSP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "63"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "63"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "63"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_CAWN')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "61"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "61"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "61"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_CAWNT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "62"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "62"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "62"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_CDHDR')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "90"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "90"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "90"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ESLL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "86"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "86"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "86"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_J_3AGENDRT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "77"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "77"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "77"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_J_3AMSEA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "78"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "78"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "78"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_J_3APGEN')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "59"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "59"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "59"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_J_3APGHD')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "60"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "60"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "60"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_J_3ASEANT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "79"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "79"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "79"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_KNA1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "121"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "121"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "121"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_KNVK')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "125"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "125"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "125"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_KONV')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "89"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "89"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "89"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_MAKT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "57"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "57"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "57"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_MARA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "56"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "56"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "56"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_MARC')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "58"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "58"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "58"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_MARM')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "83"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "83"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "83"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_MVKE')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "81"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "81"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "81"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T006A')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "124"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "124"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "124"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T023T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "84"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "84"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "84"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T042ZT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "97"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "97"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "97"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T134T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "53"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "53"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "53"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T141T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "74"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "74"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "74"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T151T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "102"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "102"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "102"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T176T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "94"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "94"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "94"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T178T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "82"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "82"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "82"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T179')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "75"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "75"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "75"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T179T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "55"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "55"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "55"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T188T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "98"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "98"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "98"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_T189T')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "99"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "99"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "99"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_TVAGT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "103"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "103"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "103"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_TVAKT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "93"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "93"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "93"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_TVFST')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "100"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "100"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "100"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_TVLST')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "101"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "101"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "101"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_TVTKT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "96"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "96"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "96"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_TVTWT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "122"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "122"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "122"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_VBAK')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "88"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "88"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "88"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_VBAP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "109"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "109"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "109"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_VBEP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "92"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "92"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "92"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_VBKD')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "95"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "95"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "95"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_VBPA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "91"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "91"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "91"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_VBRP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "110"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "110"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "110"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTMM027')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "87"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "87"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "87"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTMM075')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "85"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "85"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "85"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_001')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "64"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "64"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "64"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_002')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "65"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "65"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "65"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_003')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "66"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "66"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "66"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_004')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "67"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "67"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "67"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_005')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "68"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "68"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "68"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_006')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "69"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "69"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "69"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_007')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "70"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "70"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "70"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_008')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "71"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "71"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "71"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_011')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "72"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "72"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "72"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTPP_RE_012')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "73"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "73"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "73"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTSD007')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "104"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "104"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "104"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTSD050')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "106"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "106"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "106"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTSD126')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "108"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "108"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "108"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTSD_MODL_001')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "105"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "105"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "105"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_SAP_ZTWM043')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "107"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "107"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "107"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EXEC_PIPE_VTEX')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "vtex_ordens",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VTEX_ORDER_03_TOTAL_PAGINA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodEndPoint": "4"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_03_TOTAL_PAGINA')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Nei-EXEC_PIPE_SAP_AFS_DPRG_KOND_copy1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "SAP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "80"
							}
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 15
						}
					},
					{
						"name": "wait_vw_alocacao_credito_tentativa_3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "SAP_TENTATIVA_2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 15
						}
					},
					{
						"name": "SAP_TENTATIVA_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "80"
							}
						}
					},
					{
						"name": "SAP_TENTATIVA_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "wait_vw_alocacao_credito_tentativa_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EXEC_ADF_MODELO_SAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodTabela": "80"
							}
						}
					}
				],
				"folder": {
					"name": "Malhas/SAP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_ADF_MODELO_SAP')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrderVetexDetailsParquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "OrderDetails TO Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['uniqueId']"
										},
										"sink": {
											"name": "uniqueId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['id']"
										},
										"sink": {
											"name": "IdItem",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['productId']"
										},
										"sink": {
											"name": "productId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['ean']"
										},
										"sink": {
											"name": "ean",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['lockId']"
										},
										"sink": {
											"name": "lockId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['quantity']"
										},
										"sink": {
											"name": "quantity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['seller']"
										},
										"sink": {
											"name": "seller",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['name']"
										},
										"sink": {
											"name": "nameItem",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['refId']"
										},
										"sink": {
											"name": "refId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['price']"
										},
										"sink": {
											"name": "price",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['listPrice']"
										},
										"sink": {
											"name": "listPrice",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['imageUrl']"
										},
										"sink": {
											"name": "imageUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['additionalInfo']['brandName']"
										},
										"sink": {
											"name": "brandName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['additionalInfo']['brandId']"
										},
										"sink": {
											"name": "brandId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['additionalInfo']['categoriesIds']"
										},
										"sink": {
											"name": "categoriesIds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['additionalInfo']['categories'][0]['id']"
										},
										"sink": {
											"name": "IdCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['items'][0]['additionalInfo']['categories'][0]['name']"
										},
										"sink": {
											"name": "nameCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['firstName']"
										},
										"sink": {
											"name": "firstName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['lastName']"
										},
										"sink": {
											"name": "lastName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['documentType']"
										},
										"sink": {
											"name": "documentType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['document']"
										},
										"sink": {
											"name": "document",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['clientProfileData']['phone']"
										},
										"sink": {
											"name": "phone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['addressType']"
										},
										"sink": {
											"name": "addressType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['receiverName']"
										},
										"sink": {
											"name": "receiverName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['addressId']"
										},
										"sink": {
											"name": "addressId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['postalCode']"
										},
										"sink": {
											"name": "postalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['city']"
										},
										"sink": {
											"name": "city",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['state']"
										},
										"sink": {
											"name": "state",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['country']"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['street']"
										},
										"sink": {
											"name": "street",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['number']"
										},
										"sink": {
											"name": "number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['neighborhood']"
										},
										"sink": {
											"name": "neighborhood",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['complement']"
										},
										"sink": {
											"name": "complement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['reference']"
										},
										"sink": {
											"name": "reference",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['address']['geoCoordinates']"
										},
										"sink": {
											"name": "geoCoordinates",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['itemIndex']"
										},
										"sink": {
											"name": "itemIndex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['selectedSla']"
										},
										"sink": {
											"name": "selectedSla",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['lockTTL']"
										},
										"sink": {
											"name": "lockTTL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['price']"
										},
										"sink": {
											"name": "priceLogistics",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['listPrice']"
										},
										"sink": {
											"name": "listPriceLogistics",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['sellingPrice']"
										},
										"sink": {
											"name": "sellingPrice",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['deliveryWindow']"
										},
										"sink": {
											"name": "deliveryWindow",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['deliveryCompany']"
										},
										"sink": {
											"name": "deliveryCompany",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['shippingEstimate']"
										},
										"sink": {
											"name": "shippingEstimate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['shippingEstimateDate']"
										},
										"sink": {
											"name": "shippingEstimateDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['shippingData']['logisticsInfo'][0]['deliveryChannel']"
										},
										"sink": {
											"name": "deliveryChannel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['paymentData']['transactions'][0]['payments'][0]['paymentSystem']"
										},
										"sink": {
											"name": "paymentSystem",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['paymentData']['transactions'][0]['payments'][0]['paymentSystemName']"
										},
										"sink": {
											"name": "paymentSystemName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['paymentData']['transactions'][0]['payments'][0]['value']"
										},
										"sink": {
											"name": "value",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['paymentData']['transactions'][0]['payments'][0]['installments']"
										},
										"sink": {
											"name": "installments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['paymentData']['transactions'][0]['payments'][0]['referenceValue']"
										},
										"sink": {
											"name": "referenceValue",
											"type": "String"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "OrderDetailsJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OrderDetailsParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/OrderDetailsJson')]",
				"[concat(variables('workspaceId'), '/datasets/OrderDetailsParquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrderVetxParquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['creationDate']"
										},
										"sink": {
											"name": "creationDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clientName']"
										},
										"sink": {
											"name": "clientName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['items']"
										},
										"sink": {
											"name": "items",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['totalValue']"
										},
										"sink": {
											"name": "totalValue",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['paymentNames']"
										},
										"sink": {
											"name": "paymentNames",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['statusDescription']"
										},
										"sink": {
											"name": "statusDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['marketPlaceOrderId']"
										},
										"sink": {
											"name": "marketPlaceOrderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sequence']"
										},
										"sink": {
											"name": "sequence",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['salesChannel']"
										},
										"sink": {
											"name": "salesChannel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['affiliateId']"
										},
										"sink": {
											"name": "affiliateId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['origin']"
										},
										"sink": {
											"name": "origin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workflowInErrorState']"
										},
										"sink": {
											"name": "workflowInErrorState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workflowInRetry']"
										},
										"sink": {
											"name": "workflowInRetry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['lastMessageUnread']"
										},
										"sink": {
											"name": "lastMessageUnread",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ShippingEstimatedDate']"
										},
										"sink": {
											"name": "ShippingEstimatedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ShippingEstimatedDateMax']"
										},
										"sink": {
											"name": "ShippingEstimatedDateMax",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ShippingEstimatedDateMin']"
										},
										"sink": {
											"name": "ShippingEstimatedDateMin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['orderIsComplete']"
										},
										"sink": {
											"name": "orderIsComplete",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['listId']"
										},
										"sink": {
											"name": "listId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['listType']"
										},
										"sink": {
											"name": "listType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['authorizedDate']"
										},
										"sink": {
											"name": "authorizedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['callCenterOperatorName']"
										},
										"sink": {
											"name": "callCenterOperatorName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['totalItems']"
										},
										"sink": {
											"name": "totalItems",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['currencyCode']"
										},
										"sink": {
											"name": "currencyCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hostname']"
										},
										"sink": {
											"name": "hostname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['invoiceOutput']"
										},
										"sink": {
											"name": "invoiceOutput",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['invoiceInput']"
										},
										"sink": {
											"name": "invoiceInput",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['list']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Json2Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json2ParquetDestino",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Json2Parquet')]",
				"[concat(variables('workspaceId'), '/datasets/Json2ParquetDestino')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SapRest')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "download json",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "10.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "10.00:00:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "{\n    \"I_BUKRS\": [\n        \"2001\",\n        \"5001\"\n    ],\n    \"I_DATA_INI\":\"2020-12-07\",\n    \"I_DATA_FIM\":\"2020-12-07\",\n    \"I_REGISTRO_CRIADO\":\"X\",\n    \"I_REGISTRO_ALTERADO\":\"\",\n    \"I_QTDE_REGISTROS\":\"\"\n}"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DsSapRest",
								"type": "DatasetReference",
								"parameters": {
									"RelativeURL": "www.vtex.com.br"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sap_destino_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "convert parquet",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "download json",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['VBELN']"
										},
										"sink": {
											"name": "VBELN",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['POSNR']"
										},
										"sink": {
											"name": "POSNR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['MATNR']"
										},
										"sink": {
											"name": "MATNR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['PSTYV']"
										},
										"sink": {
											"name": "PSTYV",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UMZIZ']"
										},
										"sink": {
											"name": "UMZIZ",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UMZIN']"
										},
										"sink": {
											"name": "UMZIN",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['NETWR']"
										},
										"sink": {
											"name": "NETWR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['KWMENG']"
										},
										"sink": {
											"name": "KWMENG",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VRKME']"
										},
										"sink": {
											"name": "VRKME",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WERKS']"
										},
										"sink": {
											"name": "WERKS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['J_3ASEAN']"
										},
										"sink": {
											"name": "J_3ASEAN",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['_-AFS_-COLLECTION']"
										},
										"sink": {
											"name": "_-AFS_-COLLECTION",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['E_VBAP']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "origem_sap_jason",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destino_sap_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DsSapRest')]",
				"[concat(variables('workspaceId'), '/datasets/sap_destino_json')]",
				"[concat(variables('workspaceId'), '/datasets/origem_sap_jason')]",
				"[concat(variables('workspaceId'), '/datasets/destino_sap_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TesteOracle')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OracleTable1",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "tabela",
									"UserName": "xxxx",
									"SecretNamePWD": "xxxxx",
									"SecretNameCON": "xxxx"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "xxxx",
									"FileName": "xxxx",
									"FileSystem": "xxxx"
								}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/OracleTable1')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TesteOracle_copy1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "     Select   \n         PK_CLIENTE\n        ,[ESTAB_IDCIGAM]\n        ,[CLIENTE_CODIGO]\n        , [CLIENTE_NOME]\n        ,[CLIENTE_CPFCNPJ]\n        ,[CLIENTE_EMAIL]\n        ,[CLIENTE_CIDADE]\n        ,[CLIENTE_ESTADO]\n        ,[CLIENTE_SEXO]\n        ,[CLIENTE_ANIVERSARIO]\n        ,[CLIENTE_DDD_CELULAR]\n        ,[CLIENTE_CELULAR]\n        ,[CLIENTE_ENDERECO]\n        ,[CLIENTE_NUMERO]\n        ,[CLIENTE_COMPLEMENTO]\n        ,[CLIENTE_BAIRRO]\n        ,[CLIENTE_CEP]\n        ,[NUM_MATRICULA]\n        ,FLAG_VIGENCIA \n        ,DAT_INICIO_VIGENCIA\n        ,DAT_FINAL_VIGENCIA \n        from \n temp.clientes_processamento\n"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PK_CLIENTE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PK_CLIENTE",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ESTAB_IDCIGAM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ESTAB_IDCIGAM",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_CODIGO",
											"type": "Single",
											"physicalType": "float"
										},
										"sink": {
											"name": "CLIENTE_CODIGO",
											"type": "Single",
											"physicalType": "FLOAT"
										}
									},
									{
										"source": {
											"name": "CLIENTE_NOME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_NOME",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_CPFCNPJ",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_CPFCNPJ",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_EMAIL",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_CIDADE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_CIDADE",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_ESTADO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_ESTADO",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_SEXO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_SEXO",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_ANIVERSARIO",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "CLIENTE_ANIVERSARIO",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "CLIENTE_DDD_CELULAR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_DDD_CELULAR",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_CELULAR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_CELULAR",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_ENDERECO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_ENDERECO",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_NUMERO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_NUMERO",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_COMPLEMENTO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_COMPLEMENTO",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_BAIRRO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_BAIRRO",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CLIENTE_CEP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CLIENTE_CEP",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "NUM_MATRICULA",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NUM_MATRICULA",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FLAG_VIGENCIA",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FLAG_VIGENCIA",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DAT_INICIO_VIGENCIA",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DAT_INICIO_VIGENCIA",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "DAT_FINAL_VIGENCIA",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DAT_FINAL_VIGENCIA",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlPoolTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Clientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable1')]",
				"[concat(variables('workspaceId'), '/datasets/Clientes')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TesteSAP')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "ZFGL_INTER_BI_CONDICOES",
								"rfcTableFields": "",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SapTableResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "sap",
									"FileName": "vbep.parquet",
									"FileSystem": "raw"
								}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SapTableResource1')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TesteUntil')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeTotalPaginasArquivo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "select pages as PaginaFinal from raw_data.vtex_orders_page_total\n"
							},
							"dataset": {
								"referenceName": "wsdevbrsynapse",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "modificaPaginaFinal",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LeTotalPaginasArquivo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PaginaFinal",
							"value": {
								"value": "@string(int(activity('LeTotalPaginasArquivo').output.FirstRow.PaginaFinal))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "modificaPaginaFinal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(int(variables('Contador')),int(variables('PaginaFinal')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "testeunil",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "modificaContador",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[testeunil]",
										"storedProcedureParameters": {
											"contador": {
												"value": {
													"value": "@string(int(variables('Contador')))",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "modificaIndexValue",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndexValue",
										"value": {
											"value": "@string(add(int(variables('Contador')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "modificaContador",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "modificaIndexValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Contador",
										"value": {
											"value": "@string(int(variables('IndexValue')))",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"variables": {
					"PaginaFinal": {
						"type": "String",
						"defaultValue": "0"
					},
					"Contador": {
						"type": "String",
						"defaultValue": "0"
					},
					"IndexValue": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wsdevbrsynapse')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VTEX_ORDER_01_DETAILS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CapturaDataExportacao",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select   CONVERT(VARCHAR(16),DAT_ULTI_PROCESSAMENTO,120)+':00' as DATA_HORA_EXPORTACAO \nfrom CTR_ADF_API_ENDPOINT where COD_ENDPOINT = 4\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "TABELA"
								}
							}
						}
					},
					{
						"name": "DataExportacao",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "CapturaDataExportacao",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "DATA_HORA_EXPORTACAO",
							"value": {
								"value": "@activity('CapturaDataExportacao').output.FirstRow.DATA_HORA_EXPORTACAO\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "OrderID",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DataExportacao",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SP_VTEX_RETORNA_ORDERID_PENDENTE]",
								"storedProcedureParameters": {
									"DATA_HORA_EXPORTACAO": {
										"type": "String",
										"value": {
											"value": "@variables('DATA_HORA_EXPORTACAO')",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "wsdevbrsynapse",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "executa downlod order detalhe",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "OrderID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('OrderID').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "executa VTEX_ORDER_02_DETAILS",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "VTEX_ORDER_02_DETAILS",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ParCodEndPoint": {
												"value": "5",
												"type": "Expression"
											},
											"ParOrderID": {
												"value": "@{item().ORDERID}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"DATA_HORA_EXPORTACAO": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/wsdevbrsynapse')]",
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_02_DETAILS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VTEX_ORDER_01_TOTAL_PAGINA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "AppKey",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"X-VTEX-API-AppToken": {
													"value": "@variables('AppToken')",
													"type": "Expression"
												},
												"x-vtex-api-appkey": {
													"value": "@variables('AppKey')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestVTEX",
											"type": "DatasetReference",
											"parameters": {
												"ParRelativeURL": {
													"value": "@variables('RelativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": "brazil/vtex/vtex_order_page_total/",
												"FileName": "vtex_order_page_total.json",
												"FileSystem": "raw"
											}
										}
									]
								},
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RelativeURL",
										"value": {
											"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\n'[',\nactivity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_ORDER_VTEX,\n' TO ',\nactivity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_ORDER_VTEX,\n']',\nactivity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_3,\n'100',\nactivity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,\nstring(pipeline().parameters.ParPagina)\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppToken",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RelativeURL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppToken",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_1\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppKey",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "AppToken",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppKey",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_2\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['paging']['total']"
													},
													"sink": {
														"name": "total",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['paging']['pages']"
													},
													"sink": {
														"name": "pages",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['paging']['currentPage']"
													},
													"sink": {
														"name": "currentPage",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['paging']['perPage']"
													},
													"sink": {
														"name": "perPage",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": "brazil/vtex/vtex_order_page_total/",
												"FileName": "vtex_order_page_total.json",
												"FileSystem": "raw"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "vtex_total_order_page_total",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint\n",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "LeTotalPaginasArquivo",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlPoolSource",
								"sqlReaderQuery": "select pages as PaginaFinal from raw_data.vtex_orders_page_total"
							},
							"dataset": {
								"referenceName": "wsdevbrsynapse",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "modificaPaginaFinal",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LeTotalPaginasArquivo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PaginaFinal",
							"value": {
								"value": "@string(int(activity('LeTotalPaginasArquivo').output.FirstRow.PaginaFinal))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "EXEC VTEX_ORDER_02_TOTAL_PAGINA",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "modificaPaginaFinal",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(int(variables('Contador')),int(variables('PaginaFinal')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "testeunil",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "modificaContador",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[testeunil]",
										"storedProcedureParameters": {
											"contador": {
												"value": {
													"value": "@string(int(variables('Contador')))",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "modificaIndexValue",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IndexValue",
										"value": {
											"value": "@string(add(int(variables('Contador')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "modificaContador",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "modificaIndexValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Contador",
										"value": {
											"value": "@string(int(variables('IndexValue')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "VTEX_ORDER_02_TOTAL_PAGINA",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "testeunil",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "VTEX_ORDER_02_TOTAL_PAGINA",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ParCodEndPoint": {
												"value": "@pipeline().parameters.ParCodEndPoint",
												"type": "Expression"
											},
											"ParPagina": {
												"value": "@string(int(variables('Contador')))",
												"type": "Expression"
											},
											"DataInicioOrderVTEX": {
												"value": "@activity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_ORDER_VTEX",
												"type": "Expression"
											},
											"DataFimOrderVtex": {
												"value": "@activity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_ORDER_VTEX",
												"type": "Expression"
											},
											"DataIngestao": {
												"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
												"type": "Expression"
											},
											"DataProcessamento": {
												"value": "@activity('LeDataProcessamento').output.firstRow.DAT_PROCESSAMENTO",
												"type": "Expression"
											},
											"DataHoraProcessamento": {
												"value": "@activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO",
												"type": "Expression"
											}
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"parameters": {
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParPagina": {
						"type": "int"
					}
				},
				"variables": {
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					},
					"RelativeURL": {
						"type": "String"
					},
					"PaginaFinal": {
						"type": "String",
						"defaultValue": "0"
					},
					"Contador": {
						"type": "String",
						"defaultValue": "0"
					},
					"IndexValue": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/wsdevbrsynapse')]",
				"[concat(variables('workspaceId'), '/datasets/RestVTEX')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ADSL_GEN2_JSON_DESTINO')]",
				"[concat(variables('workspaceId'), '/datasets/vtex_total_order_page_total')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_02_TOTAL_PAGINA')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VTEX_ORDER_02_DETAILS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GravaLogInicio",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "PADFIdPacoteAPI",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									},
									"NOM_PACOTE": {
										"type": "String",
										"value": "ADF_MODELO_API"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "ExecutaPipelineModeloAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VTEX_ORDER_03_DETAILS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParIdPipeline": {
									"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
									"type": "Expression"
								},
								"ParCodEndPoint": {
									"value": "@pipeline().parameters.ParCodEndPoint",
									"type": "Expression"
								},
								"ParNumeroOrder": {
									"value": "@pipeline().parameters.ParOrderID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GravaLogErroUPD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExecutaPipelineModeloAPI",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PLogADFItemErroAPI]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_ERRO": {
									"value": {
										"value": "@activity('ExecutaPipelineModeloAPI').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"NOM_ALIAS_ENDPOINT": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD_ENDPOINT": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EnviaEmailDeErroUPD",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MsgErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-21.brazilsouth.logic.azure.com:443/workflows/741f9460457d489996f012404ef44c15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j67cgGl-SI96CK3Ef9EClXXCdWao6ACexeV0h3sDZEU",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"database\":\"\",\n\t\"environment\":\"@{activity('GravaLogInicio').output.firstRow.DESC_ENVIRONMENT}\",\n\t\"message\": \"@{activity('ExecutaPipelineModeloAPI').error.message}\",\n\t\"pipelineName\": \"@{variables('MsgErro')}\",\n\t\"receiver\": \"@{activity('GravaLogInicio').output.firstRow.DESC_EMAIL_ERRO}\",\n    \"schema\": \"\",  \n    \"table\": \"\",\n\"servername\": \"\",\n\"type\":\"API\",\n\"endpoint\":\"@{activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT}\",\n\"url\":\"@{variables('FullURL')}\",\n\"output\":\"@{activity('GravaLogInicio').output.firstRow.NOM_RETORNO_URL}\" \n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MsgErroUPD",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GravaLogErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MsgErro",
							"value": {
								"value": "@concat('Pipeline com erro: API_TO_ADLS: [',activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT,']')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParOrderID": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String",
						"defaultValue": "angelo.T1158.dataex@xpi.com.br"
					},
					"MsgErro": {
						"type": "String"
					},
					"FullURL": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_03_DETAILS')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VTEX_ORDER_02_TOTAL_PAGINA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GravaLogInicio",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "PADFIdPacoteAPI",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									},
									"NOM_PACOTE": {
										"type": "String",
										"value": "ADF_MODELO_API"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "EXEC_VTEX_ORDER_03_TOTAL_PAGINA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GravaLogInicio",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VTEX_ORDER_03_TOTAL_PAGINA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParIdPipeline": {
									"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
									"type": "Expression"
								},
								"ParCodEndPoint": {
									"value": "@pipeline().parameters.ParCodEndPoint",
									"type": "Expression"
								},
								"ParPagina": {
									"value": "@pipeline().parameters.ParPagina",
									"type": "Expression"
								},
								"DataInicioOrderVTEX": {
									"value": "@pipeline().parameters.DataInicioOrderVTEX",
									"type": "Expression"
								},
								"DataFimOrderVtex": {
									"value": "@pipeline().parameters.DataFimOrderVtex",
									"type": "Expression"
								},
								"DataIngestao": {
									"value": "@pipeline().parameters.DataIngestao",
									"type": "Expression"
								},
								"DataProcessamento": {
									"value": "@pipeline().parameters.DataProcessamento",
									"type": "Expression"
								},
								"DataHoraProcessamento": {
									"value": "@pipeline().parameters.DataHoraProcessamento",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GravaLogErroUPD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "EXEC_VTEX_ORDER_03_TOTAL_PAGINA",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PLogADFItemErroAPI]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.COD_LOG",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_ERRO": {
									"value": {
										"value": "@activity('EXEC_VTEX_ORDER_03_TOTAL_PAGINA').Error.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"NOM_ALIAS_ENDPOINT": {
									"value": {
										"value": "@activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD_ENDPOINT": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EnviaEmailDeErroUPD",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "MsgErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://prod-21.brazilsouth.logic.azure.com:443/workflows/741f9460457d489996f012404ef44c15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j67cgGl-SI96CK3Ef9EClXXCdWao6ACexeV0h3sDZEU",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\t\"database\":\"\",\n\t\"environment\":\"@{activity('GravaLogInicio').output.firstRow.DESC_ENVIRONMENT}\",\n\t\"message\": \"@{activity('EXEC_VTEX_ORDER_03_TOTAL_PAGINA').error.message}\",\n\t\"pipelineName\": \"@{variables('MsgErro')}\",\n\t\"receiver\": \"@{activity('GravaLogInicio').output.firstRow.DESC_EMAIL_ERRO}\",\n    \"schema\": \"\",  \n    \"table\": \"\",\n\"servername\": \"\",\n\"type\":\"API\",\n\"endpoint\":\"@{activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT}\",\n\"url\":\"@{variables('FullURL')}\",\n\"output\":\"@{activity('GravaLogInicio').output.firstRow.NOM_RETORNO_URL}\" \n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MsgErroUPD",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GravaLogErroUPD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MsgErro",
							"value": {
								"value": "@concat('Pipeline com erro: API_TO_ADLS: [',activity('GravaLogInicio').output.firstRow.NOM_ALIAS_ENDPOINT,']')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParPagina": {
						"type": "int"
					},
					"DataInicioOrderVTEX": {
						"type": "string"
					},
					"DataFimOrderVtex": {
						"type": "string"
					},
					"DataIngestao": {
						"type": "string"
					},
					"DataProcessamento": {
						"type": "string"
					},
					"DataHoraProcessamento": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String",
						"defaultValue": "angelo.T1158.dataex@xpi.com.br"
					},
					"MsgErro": {
						"type": "String"
					},
					"FullURL": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_03_TOTAL_PAGINA')]",
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VTEX_ORDER_03_DETAILS')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_BASE,variables('RalativeURL'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GravaVariaveis",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"X-VTEX-API-AppToken": {
													"value": "@variables('AppToken')",
													"type": "Expression"
												},
												"x-vtex-api-appkey": {
													"value": "@variables('AppKey')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestVTEX",
											"type": "DatasetReference",
											"parameters": {
												"ParRelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@variables('PathRaw')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_HEADER_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_ORDER_TOTALS_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_ORDER_PAYMENT_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_CLEASING",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_ORDER_ITEMS_PARQUET_CLEANSGIN",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "API_JSON_TO_ORDER_CLIENT_PARQUET_CLEANSING",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_ORDER_HEADER_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sequence']"
													},
													"sink": {
														"name": "sequence",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['marketplaceOrderId']"
													},
													"sink": {
														"name": "marketplaceOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['sellerOrderId']"
													},
													"sink": {
														"name": "sellerOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['origin']"
													},
													"sink": {
														"name": "origin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['affiliateId']"
													},
													"sink": {
														"name": "affiliateId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['salesChannel']"
													},
													"sink": {
														"name": "salesChannel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['merchantName']"
													},
													"sink": {
														"name": "merchantName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['status']"
													},
													"sink": {
														"name": "status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['statusDescription']"
													},
													"sink": {
														"name": "statusDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['creationDate']"
													},
													"sink": {
														"name": "creationDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderGroup']"
													},
													"sink": {
														"name": "orderGroup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_TOTALS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "total_items_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "total_items_name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['value']"
													},
													"sink": {
														"name": "total_items_value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['totals']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['uniqueId']"
													},
													"sink": {
														"name": "uniqueid"
													}
												},
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ean']"
													},
													"sink": {
														"name": "ean",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['lockId']"
													},
													"sink": {
														"name": "lockId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['quantity']"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['seller']"
													},
													"sink": {
														"name": "seller",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refId']"
													},
													"sink": {
														"name": "refId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['imageUrl']"
													},
													"sink": {
														"name": "imageUrl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['brandName']"
													},
													"sink": {
														"name": "brandName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['brandId']"
													},
													"sink": {
														"name": "brandId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['categoriesIds']"
													},
													"sink": {
														"name": "categoriesIds",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['categories'][0]['id']"
													},
													"sink": {
														"name": "categories_id_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['additionalInfo']['categories'][0]['name']"
													},
													"sink": {
														"name": "categories_name_1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['totals'][0]['name']"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['id']"
													},
													"sink": {
														"name": "categories_id_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][1]['name']"
													},
													"sink": {
														"name": "categories_name_2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][2]['id']"
													},
													"sink": {
														"name": "categories_id_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['items'][0]['additionalInfo']['categories'][2]['name']"
													},
													"sink": {
														"name": "categories_name_3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"collectionReference": "$['items']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_CLIENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['email']"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['firstName']"
													},
													"sink": {
														"name": "firstName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['lastName']"
													},
													"sink": {
														"name": "lastName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['documentType']"
													},
													"sink": {
														"name": "documentType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['document']"
													},
													"sink": {
														"name": "document",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['clientProfileData']['phone']"
													},
													"sink": {
														"name": "phone",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_client_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_PAYMENT_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['payments'][0]['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['paymentSystemName']"
													},
													"sink": {
														"name": "paymentSystemName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['paymentSystem']"
													},
													"sink": {
														"name": "paymentSystem",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['installments']"
													},
													"sink": {
														"name": "installments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['referenceValue']"
													},
													"sink": {
														"name": "referenceValue",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['payments'][0]['value']"
													},
													"sink": {
														"name": "value",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "OrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"collectionReference": "$['paymentData']['transactions']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_payment_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "orderid",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['addressType']"
													},
													"sink": {
														"name": "addressType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['receiverName']"
													},
													"sink": {
														"name": "receiverName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['addressId']"
													},
													"sink": {
														"name": "addressId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['postalCode']"
													},
													"sink": {
														"name": "postalCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['city']"
													},
													"sink": {
														"name": "city",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['state']"
													},
													"sink": {
														"name": "state",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['country']"
													},
													"sink": {
														"name": "country",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['street']"
													},
													"sink": {
														"name": "street",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['number']"
													},
													"sink": {
														"name": "number",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['neighborhood']"
													},
													"sink": {
														"name": "neighborhood",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['complement']"
													},
													"sink": {
														"name": "complement",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['reference']"
													},
													"sink": {
														"name": "reference",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates']"
													},
													"sink": {
														"name": "geoCoordinates_X",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['shippingData']['address']['geoCoordinates'][1]"
													},
													"sink": {
														"name": "geoCoordinates_Y",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_RAW",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,19)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['itemIndex']"
													},
													"sink": {
														"name": "itemIndex",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['selectedSla']"
													},
													"sink": {
														"name": "selectedSla",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['slas'][0]['lockTTL']"
													},
													"sink": {
														"name": "lockTTL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['price']"
													},
													"sink": {
														"name": "price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listPrice']"
													},
													"sink": {
														"name": "listPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sellingPrice']"
													},
													"sink": {
														"name": "sellingPrice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['deliveryWindow']"
													},
													"sink": {
														"name": "deliveryWindow",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['deliveryCompany']"
													},
													"sink": {
														"name": "deliveryCompany",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shippingEstimate']"
													},
													"sink": {
														"name": "shippingEstimate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['shippingEstimateDate']"
													},
													"sink": {
														"name": "shippingEstimateDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['orderId']"
													},
													"sink": {
														"name": "OrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['shippingData']['logisticsInfo']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrder",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_HEADER_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_HEADER_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_header_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_header/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_header.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_TOTALS_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_TOTALS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderTotalsParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_totals/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_totals.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_PAYMENT_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_PAYMENT_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_payment_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderPaymentParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_payment/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_payment.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping/'))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_CLEASING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_SHIPPING_ITEMS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderShippingItemsParquetCleansing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_shipping_items/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_shipping_items.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_ITEMS_PARQUET_CLEANSGIN",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_ITEMS_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_items_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderItemsParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_items/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_items.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "API_JSON_TO_ORDER_CLIENT_PARQUET_CLEANSING",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_ORDER_CLIENT_PARQUET_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquet",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),'/',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2)))\n",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,\n'_order_client_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),\n'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "VtexOrderDetailsOrderClientParquetCleasing",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\n'order_client/'))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(pipeline().parameters.ParNumeroOrder,'_order_client.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_CLEANSING",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LeDataProcessamento",
						"description": "Recupera a data de processamento da tabela de controle",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFDataProcessamentoAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "int",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "GravaVariaveis",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeDataProcessamento",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1,1)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,pipeline().parameters.ParNumeroOrder)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppToken",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppToken",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_1\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppKey",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppKey",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_2\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParNumeroOrder": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					},
					"FilePathRawJson": {
						"type": "String"
					},
					"FileNameRawJson": {
						"type": "String"
					},
					"FileSystemRaw": {
						"type": "String"
					},
					"FilePathRawOderHeaderParquet": {
						"type": "String"
					},
					"FileNameRawOrderHeaderParquet": {
						"type": "String"
					},
					"FilePathRawOderTotalsParquet": {
						"type": "String"
					},
					"FileNameRawOrderTotalsParquet": {
						"type": "String"
					},
					"FilePathRawOderItemsParquet": {
						"type": "String"
					},
					"FileNameRawOrderItemsParquet": {
						"type": "String"
					},
					"FilePathRawOderClientParquet": {
						"type": "String"
					},
					"FileNameRawOrderClientParquet": {
						"type": "String"
					},
					"FilePathRawOderPaymentParquet": {
						"type": "String"
					},
					"FileNameRawOrderPaymentParquet": {
						"type": "String"
					},
					"FilePathRawOderShippingParquet": {
						"type": "String"
					},
					"FileNameRawOrderShippingParquet": {
						"type": "String"
					},
					"FilePathRawOderShippingItemsParquet": {
						"type": "String"
					},
					"FileNameRawOrderShippingItemsParquet": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/RestVTEX')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ADSL_GEN2_JSON_DESTINO')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrder')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderParquet')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderTotalsParquet')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderItemsParquet')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderClientParquet')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderPaymentParquet')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderShippingParquet')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderShippingItemsParquet')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderParquetCleasing')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderTotalsParquetCleansing')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderPaymentParquetCleansing')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderShippingParquetCleansing')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderShippingItemsParquetCleansing')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderItemsParquetCleasing')]",
				"[concat(variables('workspaceId'), '/datasets/VtexOrderDetailsOrderClientParquetCleasing')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VTEX_ORDER_03_TOTAL_PAGINA')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "GravaLogFim",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SeAPI_JSON_TO_DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[PADFIdPacoteFIM]",
							"storedProcedureParameters": {
								"COD_LOG": {
									"value": {
										"value": "@pipeline().parameters.ParIdPipeline",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_PARAMETROS": {
									"value": {
										"value": "@variables('RalativeURL')",
										"type": "Expression"
									},
									"type": "String"
								},
								"COD": {
									"value": {
										"value": "@pipeline().parameters.ParCodEndPoint",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"DSC_TIPO": {
									"value": "API",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_CONTROLE",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LeCredenciaisOrigem",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[PADFCredenciaisAPI]",
								"storedProcedureParameters": {
									"COD_ENDPOINT": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.ParCodEndPoint",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "Tabela"
								}
							}
						}
					},
					{
						"name": "SeAPI_JSON_TO_DL",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LeCredenciaisOrigem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LeCredenciaisOrigem').output.FirstRow.NOM_RETORNO_URL,'JSON')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy_API_JSON_TO_ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "AppKey",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DATA_HORA_EXPORTACAO",
													"value": {
														"value": "@substring(pipeline().parameters.DataHoraProcessamento,0,19)",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"additionalHeaders": {
												"X-VTEX-API-AppToken": {
													"value": "@variables('AppToken')",
													"type": "Expression"
												},
												"x-vtex-api-appkey": {
													"value": "@variables('AppKey')",
													"type": "Expression"
												}
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestVTEX",
											"type": "DatasetReference",
											"parameters": {
												"ParRelativeURL": {
													"value": "@variables('RalativeURL')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(pipeline().parameters.DataProcessamento,0,4),'/',\nsubstring(pipeline().parameters.DataProcessamento,5,2),'/',\nsubstring(pipeline().parameters.DataProcessamento,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,\n'_',\nsubstring(pipeline().parameters.DataHoraProcessamento,0,4),\nsubstring(pipeline().parameters.DataHoraProcessamento,5,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,8,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,11,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,14,2),\n'_page_',\nstring(pipeline().parameters.ParPagina),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GravaLogFimItem-ToDL",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "API_TO_ADLS_SizeCopied",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[PLogADFItemFimAPI]",
										"storedProcedureParameters": {
											"COD_LOG": {
												"value": {
													"value": "@pipeline().parameters.ParIdPipeline",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_SIZE_ARQUIVO": {
												"value": {
													"value": "@variables('SizeArquivo')",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"COD_ENDPOINT": {
												"value": {
													"value": "@pipeline().parameters.ParCodEndPoint",
													"type": "Expression"
												},
												"type": "Int"
											},
											"DESTINO": {
												"value": "ToDataLake",
												"type": "String"
											},
											"ORIGEM": {
												"value": "API-JSON",
												"type": "String"
											},
											"NOM_ALIAS_ENDPOINT": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
													"type": "Expression"
												},
												"type": "String"
											},
											"COD_LOG_ITEM": {
												"value": {
													"value": "@activity('GravaLogInicioItem-ToDL').output.FirstRow.COD_LOG_ITEM",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"NUM_REGISTROS": {
												"value": "0",
												"type": "Int64"
											},
											"DSC_OBS": {
												"value": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQL_CONTROLE",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "API_TO_ADLS_SizeCopied",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SQLOP_TO_ADLS_PATH_RAW",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SizeArquivo",
										"value": {
											"value": "@string(activity('Copy_API_JSON_TO_ADLS').output.dataWritten)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "RelativeURL",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GravaLogInicioItem-ToDL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RalativeURL",
										"value": {
											"value": "@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\n'[',\npipeline().parameters.DataInicioOrderVTEX,\n' TO ',\npipeline().parameters.DataFimOrderVtex,\n']',\nactivity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_3,\n'100',\nactivity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_4,\nstring(pipeline().parameters.ParPagina)\n)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "GravaLogInicioItem-ToDL",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[PLogADFItemAPI]",
											"storedProcedureParameters": {
												"COD_ENDPOINT": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.ParCodEndPoint",
														"type": "Expression"
													}
												},
												"COD_LOG": {
													"type": "Int64",
													"value": {
														"value": "@pipeline().parameters.ParIdPipeline",
														"type": "Expression"
													}
												},
												"DAT_EXPORTACAO": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.DataIngestao",
														"type": "Expression"
													}
												},
												"DESTINO": {
													"type": "String",
													"value": "ToDataLake"
												},
												"NOM_ALIAS_ENDPOINT": {
													"type": "String",
													"value": {
														"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_ALIAS_ENDPOINT_1",
														"type": "Expression"
													}
												},
												"ORIGEM": {
													"type": "String",
													"value": "API-JSON"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SQL_DS_CONTROLE",
											"type": "DatasetReference",
											"parameters": {
												"NomeTabela": "Tabela"
											}
										}
									}
								},
								{
									"name": "SQLOP_TO_ADLS_PATH_RAW",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "API_JSON_TO_PARQUET",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PathRaw",
										"value": {
											"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW,'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',replace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',substring(pipeline().parameters.DataHoraProcessamento,0,4),'/',substring(pipeline().parameters.DataHoraProcessamento,5,2),'/',substring(pipeline().parameters.DataHoraProcessamento,8,2),'/',activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(pipeline().parameters.DataHoraProcessamento,0,4),substring(pipeline().parameters.DataHoraProcessamento,5,2),substring(pipeline().parameters.DataHoraProcessamento,8,2),substring(pipeline().parameters.DataHoraProcessamento,11,2),substring(pipeline().parameters.DataHoraProcessamento,14,2),'.json'))\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppToken",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "RelativeURL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppToken",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_1\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "AppKey",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "AppToken",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "AppKey",
										"value": {
											"value": "@activity('LeCredenciaisOrigem').output.FirstRow.VAL_PARAMETRO_2\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "API_JSON_TO_PARQUET",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy_API_JSON_TO_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['orderId']"
													},
													"sink": {
														"name": "orderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['creationDate']"
													},
													"sink": {
														"name": "creationDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['clientName']"
													},
													"sink": {
														"name": "clientName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['items']"
													},
													"sink": {
														"name": "itemsOrder",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totalValue']"
													},
													"sink": {
														"name": "totalValue",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['paymentNames']"
													},
													"sink": {
														"name": "paymentNames",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['status']"
													},
													"sink": {
														"name": "status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['statusDescription']"
													},
													"sink": {
														"name": "statusDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['marketPlaceOrderId']"
													},
													"sink": {
														"name": "marketPlaceOrderId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['sequence']"
													},
													"sink": {
														"name": "sequence",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['salesChannel']"
													},
													"sink": {
														"name": "salesChannel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['affiliateId']"
													},
													"sink": {
														"name": "affiliateId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['origin']"
													},
													"sink": {
														"name": "origin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['workflowInErrorState']"
													},
													"sink": {
														"name": "workflowInErrorState",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"path": "[['workflowInRetry']"
													},
													"sink": {
														"name": "workflowInRetry",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"path": "[['lastMessageUnread']"
													},
													"sink": {
														"name": "lastMessageUnread",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShippingEstimatedDate']"
													},
													"sink": {
														"name": "ShippingEstimatedDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShippingEstimatedDateMax']"
													},
													"sink": {
														"name": "ShippingEstimatedDateMax",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShippingEstimatedDateMin']"
													},
													"sink": {
														"name": "ShippingEstimatedDateMin",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['orderIsComplete']"
													},
													"sink": {
														"name": "orderIsComplete",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"path": "[['listId']"
													},
													"sink": {
														"name": "listId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['listType']"
													},
													"sink": {
														"name": "listType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['authorizedDate']"
													},
													"sink": {
														"name": "authorizedDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['callCenterOperatorName']"
													},
													"sink": {
														"name": "callCenterOperatorName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['totalItems']"
													},
													"sink": {
														"name": "totalItems",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['currencyCode']"
													},
													"sink": {
														"name": "currencyCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['hostname']"
													},
													"sink": {
														"name": "hostname",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['invoiceOutput']"
													},
													"sink": {
														"name": "itemsInvoiceOutput",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['invoiceInput']"
													},
													"sink": {
														"name": "invoiceInput",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DATA_HORA_EXPORTACAO']"
													},
													"sink": {
														"name": "DATA_HORA_EXPORTACAO"
													}
												}
											],
											"collectionReference": "$['list']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ADSL_GEN2_JSON_DESTINO",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_1,'/',\nsubstring(pipeline().parameters.DataProcessamento,0,4),'/',\nsubstring(pipeline().parameters.DataProcessamento,5,2),'/',\nsubstring(pipeline().parameters.DataProcessamento,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(\nconcat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,\n'_',\nsubstring(pipeline().parameters.DataHoraProcessamento,0,4),\nsubstring(pipeline().parameters.DataHoraProcessamento,5,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,8,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,11,2),\nsubstring(pipeline().parameters.DataHoraProcessamento,14,2),\n'_page_',\nstring(pipeline().parameters.ParPagina),\n'.json'))\n",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
											"type": "DatasetReference",
											"parameters": {
												"FilePath": {
													"value": "@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_REGION,'/',\nreplace(activity('LeCredenciaisOrigem').output.firstRow.NOM_SISTEMA_ORIGEM,'_',''),'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'/',\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_FORMATO_ARQUIVO_2,'/',\nsubstring(pipeline().parameters.DataHoraProcessamento,0,4),'/',\nsubstring(pipeline().parameters.DataHoraProcessamento,5,2),'/',\nsubstring(pipeline().parameters.DataHoraProcessamento,8,2)))",
													"type": "Expression"
												},
												"FileName": {
													"value": "@toLower(concat(activity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT_1,'_',substring(pipeline().parameters.DataHoraProcessamento,0,4),substring(pipeline().parameters.DataHoraProcessamento,5,2),substring(pipeline().parameters.DataHoraProcessamento,8,2),substring(pipeline().parameters.DataHoraProcessamento,11,2),substring(pipeline().parameters.DataHoraProcessamento,14,2),'_page_',string(pipeline().parameters.ParPagina),'.parquet'))",
													"type": "Expression"
												},
												"FileSystem": {
													"value": "@activity('LeCredenciaisOrigem').output.FirstRow.NOM_CONTAINER_RAW",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"ParIdPipeline": {
						"type": "String"
					},
					"ParCodEndPoint": {
						"type": "int"
					},
					"ParPagina": {
						"type": "int"
					},
					"DataInicioOrderVTEX": {
						"type": "string"
					},
					"DataFimOrderVtex": {
						"type": "string"
					},
					"DataIngestao": {
						"type": "string"
					},
					"DataProcessamento": {
						"type": "string"
					},
					"DataHoraProcessamento": {
						"type": "string"
					}
				},
				"variables": {
					"receiver": {
						"type": "String"
					},
					"RalativeURL": {
						"type": "String"
					},
					"SizeArquivo": {
						"type": "String",
						"defaultValue": "0"
					},
					"PathRaw": {
						"type": "String"
					},
					"AppToken": {
						"type": "String"
					},
					"AppKey": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/RestVTEX')]",
				"[concat(variables('workspaceId'), '/datasets/DS_ADSL_GEN2_JSON_DESTINO')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VTEX_ORDER_DETAIL_IMPORT')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ORDER",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VTEX_ORDER_01_TOTAL_PAGINA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ParCodEndPoint": "4",
								"ParPagina": "1"
							}
						}
					},
					{
						"name": "DETAILS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ORDER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VTEX_ORDER_01_DETAILS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "Modelos/API JSON/VTEX"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_01_TOTAL_PAGINA')]",
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_01_DETAILS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VetexParametroData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"X-VTEX-API-AppToken": "BGSTNGUYXERIIEDBJRZSYUKFBQKUWMSXDYKWMCMYQUIWBNIBKWWHACSHVNSWWZCKMTFKTHOGEACELODNHIKAPKXAGDAZKQCQRXJIHYICHPCAANVHJEONPCUBWFEPHPWO",
									"x-vtex-api-appkey": "vtexappkey-malwee-AHFBTB"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "VtexDsTeste",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtexj_order_total",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/VtexDsTeste')]",
				"[concat(variables('workspaceId'), '/datasets/vtexj_order_total')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/carga dim data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_jni",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "//"
							},
							{
								"name": "Destination",
								"value": "//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService2",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlPoolTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable4')]",
				"[concat(variables('workspaceId'), '/linkedServices/linkedService2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/csv_2_parquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "brazil/transacional/saptable/mm/grupocampanha",
									"FileName": "grupocampanha.parquet",
									"FileSystem": "raw"
								}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/import vbep')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select   * from dbo.vbep",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VBELN",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "VBELN",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "POSNR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POSNR",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ETENR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ETENR",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "WMENG",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "WMENG",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "J_3ASIZE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "J_3ASIZE",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "J_3ASZGR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "J_3ASZGR",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "J_3ANETW",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "J_3ANETW",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_DS_CONTROLE",
								"type": "DatasetReference",
								"parameters": {
									"NomeTabela": "vbep"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_DS_DESTINO_PARQUET_GEN2",
								"type": "DatasetReference",
								"parameters": {
									"FilePath": "brazil/transacional/saptable/saprest/vbep",
									"FileName": "VBEP.parquet",
									"FileSystem": "cleansing"
								}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SQL_DS_CONTROLE')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DS_DESTINO_PARQUET_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/json_2_parquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['VBELN']"
										},
										"sink": {
											"name": "VBELN",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ERDAT']"
										},
										"sink": {
											"name": "ERDAT",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ERNAM']"
										},
										"sink": {
											"name": "ERNAM",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AUDAT']"
										},
										"sink": {
											"name": "AUDAT",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VBTYP']"
										},
										"sink": {
											"name": "VBTYP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AUART']"
										},
										"sink": {
											"name": "AUART",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['FAKSK']"
										},
										"sink": {
											"name": "FAKSK",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VKORG']"
										},
										"sink": {
											"name": "VKORG",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VTWEG']"
										},
										"sink": {
											"name": "VTWEG",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['SPART']"
										},
										"sink": {
											"name": "SPART",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VKGRP']"
										},
										"sink": {
											"name": "VKGRP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VKBUR']"
										},
										"sink": {
											"name": "VKBUR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['KNUMV']"
										},
										"sink": {
											"name": "KNUMV",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VDATU']"
										},
										"sink": {
											"name": "VDATU",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['BSARK']"
										},
										"sink": {
											"name": "BSARK",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['KUNNR']"
										},
										"sink": {
											"name": "KUNNR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AEDAT']"
										},
										"sink": {
											"name": "AEDAT",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['KVGR3']"
										},
										"sink": {
											"name": "KVGR3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['BUKRS_VF']"
										},
										"sink": {
											"name": "BUKRS_VF",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['E_VBAK']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "origem_sap_jason",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destino_sap_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/origem_sap_jason')]",
				"[concat(variables('workspaceId'), '/datasets/destino_sap_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/json_2_parquet_vtex')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['orderId']"
										},
										"sink": {
											"name": "orderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['creationDate']"
										},
										"sink": {
											"name": "creationDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clientName']"
										},
										"sink": {
											"name": "clientName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['items']"
										},
										"sink": {
											"name": "items",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['totalValue']"
										},
										"sink": {
											"name": "totalValue",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['paymentNames']"
										},
										"sink": {
											"name": "paymentNames",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['statusDescription']"
										},
										"sink": {
											"name": "statusDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['marketPlaceOrderId']"
										},
										"sink": {
											"name": "marketPlaceOrderId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sequence']"
										},
										"sink": {
											"name": "sequence",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['salesChannel']"
										},
										"sink": {
											"name": "salesChannel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['affiliateId']"
										},
										"sink": {
											"name": "affiliateId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['origin']"
										},
										"sink": {
											"name": "origin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workflowInErrorState']"
										},
										"sink": {
											"name": "workflowInErrorState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workflowInRetry']"
										},
										"sink": {
											"name": "workflowInRetry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['lastMessageUnread']"
										},
										"sink": {
											"name": "lastMessageUnread",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ShippingEstimatedDate']"
										},
										"sink": {
											"name": "ShippingEstimatedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ShippingEstimatedDateMax']"
										},
										"sink": {
											"name": "ShippingEstimatedDateMax",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ShippingEstimatedDateMin']"
										},
										"sink": {
											"name": "ShippingEstimatedDateMin",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['orderIsComplete']"
										},
										"sink": {
											"name": "orderIsComplete",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['listId']"
										},
										"sink": {
											"name": "listId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['listType']"
										},
										"sink": {
											"name": "listType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['authorizedDate']"
										},
										"sink": {
											"name": "authorizedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['callCenterOperatorName']"
										},
										"sink": {
											"name": "callCenterOperatorName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['totalItems']"
										},
										"sink": {
											"name": "totalItems",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['currencyCode']"
										},
										"sink": {
											"name": "currencyCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hostname']"
										},
										"sink": {
											"name": "hostname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['invoiceOutput']"
										},
										"sink": {
											"name": "itemsinvoiceoutput",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['invoiceInput']"
										},
										"sink": {
											"name": "invoiceInput",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['reportRecordsLimit']"
										},
										"sink": {
											"name": "reportRecordsLimit",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['list']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "vtexj_order",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vtex_order_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/vtexj_order')]",
				"[concat(variables('workspaceId'), '/datasets/vtex_order_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mode_dim_Calendario')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OBJETO",
											"type": "String"
										},
										"sink": {
											"name": "OBJETO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LINHA DE PRODUTO",
											"type": "String"
										},
										"sink": {
											"name": "LINHA DE PRODUTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUB LINHA DE PRODUTO",
											"type": "String"
										},
										"sink": {
											"name": "SUB LINHA DE PRODUTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LICENSING OFFICE",
											"type": "String"
										},
										"sink": {
											"name": "LICENSING OFFICE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LINHA DE VAREJO",
											"type": "String"
										},
										"sink": {
											"name": "LINHA DE VAREJO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GENERO",
											"type": "String"
										},
										"sink": {
											"name": "GENERO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MIX DO MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "MIX DO MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OCASIÃO DE USO",
											"type": "String"
										},
										"sink": {
											"name": "OCASIÃO DE USO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "META DO MATERIAL",
											"type": "String"
										},
										"sink": {
											"name": "META DO MATERIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SEGMENTO",
											"type": "String"
										},
										"sink": {
											"name": "SEGMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CATEGORIA DO PRODUTO",
											"type": "String"
										},
										"sink": {
											"name": "CATEGORIA DO PRODUTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DESTINO CONFECÇÃO",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO CONFECÇÃO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ESPÉCIE",
											"type": "String"
										},
										"sink": {
											"name": "ESPÉCIE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ESPÉCIE DETALHADA",
											"type": "String"
										},
										"sink": {
											"name": "ESPÉCIE DETALHADA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIÇÃO",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIÇÃO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIFICAÇÃO",
											"type": "String"
										},
										"sink": {
											"name": "ESPECIFICAÇÃO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COMPLEMENTO",
											"type": "String"
										},
										"sink": {
											"name": "COMPLEMENTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIÇÃO COMERCIAL",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIÇÃO COMERCIAL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GRADE",
											"type": "String"
										},
										"sink": {
											"name": "GRADE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COR DO MOSTRUÁRIO TAMANHO",
											"type": "String"
										},
										"sink": {
											"name": "COR DO MOSTRUÁRIO TAMANHO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FAIXA DE PREÇO",
											"type": "String"
										},
										"sink": {
											"name": "FAIXA DE PREÇO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NÍVEL DE MODA",
											"type": "String"
										},
										"sink": {
											"name": "NÍVEL DE MODA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NIVEL DE SEASON",
											"type": "String"
										},
										"sink": {
											"name": "NIVEL DE SEASON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PERMANÊNCIA",
											"type": "String"
										},
										"sink": {
											"name": "PERMANÊNCIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SAZONALIDADE PERMANENTE",
											"type": "String"
										},
										"sink": {
											"name": "SAZONALIDADE PERMANENTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATERIA PRIMA",
											"type": "String"
										},
										"sink": {
											"name": "MATERIA PRIMA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LEGADO  CONJUNTO KIT",
											"type": "String"
										},
										"sink": {
											"name": "LEGADO  CONJUNTO KIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LEGADO  MATERIAL DE REFERENCIA",
											"type": "String"
										},
										"sink": {
											"name": "LEGADO  MATERIAL DE REFERENCIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CONJUNTO KIT",
											"type": "String"
										},
										"sink": {
											"name": "CONJUNTO KIT",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATERIAL DE REFERENCIA",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL DE REFERENCIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "REFERENCIA DO PRIVATE LABEL",
											"type": "String"
										},
										"sink": {
											"name": "REFERENCIA DO PRIVATE LABEL",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RETILINEA",
											"type": "String"
										},
										"sink": {
											"name": "RETILINEA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CAD  NACIONAL DE PRODUTOS",
											"type": "String"
										},
										"sink": {
											"name": "CAD  NACIONAL DE PRODUTOS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IMAGEM DO TAG",
											"type": "String"
										},
										"sink": {
											"name": "IMAGEM DO TAG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIÇÃO ETIQUETA MEIA",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIÇÃO ETIQUETA MEIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ESTRATÉGIA PRODUTO",
											"type": "String"
										},
										"sink": {
											"name": "ESTRATÉGIA PRODUTO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QUANTIDADE ETIQUETA EXPEDIÇÃO",
											"type": "String"
										},
										"sink": {
											"name": "QUANTIDADE ETIQUETA EXPEDIÇÃO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LICENÇA",
											"type": "String"
										},
										"sink": {
											"name": "LICENÇA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RELANÇADO",
											"type": "String"
										},
										"sink": {
											"name": "RELANÇADO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRODUTO ACOMPANHA ACESSORIO",
											"type": "String"
										},
										"sink": {
											"name": "PRODUTO ACOMPANHA ACESSORIO",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ANO2",
											"type": "String"
										},
										"sink": {
											"name": "ANO2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MARCA PARA",
											"type": "String"
										},
										"sink": {
											"name": "MARCA PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GENERO PARA",
											"type": "String"
										},
										"sink": {
											"name": "GENERO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SEGMENTO PARA",
											"type": "String"
										},
										"sink": {
											"name": "SEGMENTO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MIX PARA",
											"type": "String"
										},
										"sink": {
											"name": "MIX PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIE PARA",
											"type": "String"
										},
										"sink": {
											"name": "ESPECIE PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CONJUNTO DETALHADO PARA",
											"type": "String"
										},
										"sink": {
											"name": "CONJUNTO DETALHADO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TIPO DE PRODUTO PARA",
											"type": "String"
										},
										"sink": {
											"name": "TIPO DE PRODUTO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LINHA DE PRODUTO PARA",
											"type": "String"
										},
										"sink": {
											"name": "LINHA DE PRODUTO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GRUPO DE PRODUTO PARA",
											"type": "String"
										},
										"sink": {
											"name": "GRUPO DE PRODUTO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUB GRUPO DE PRODUTO PARA",
											"type": "String"
										},
										"sink": {
											"name": "SUB GRUPO DE PRODUTO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CATEGORIA DE PRODUTO PARA",
											"type": "String"
										},
										"sink": {
											"name": "CATEGORIA DE PRODUTO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DESTINO CONFECCAO PARA",
											"type": "String"
										},
										"sink": {
											"name": "DESTINO CONFECCAO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GRADE PARA",
											"type": "String"
										},
										"sink": {
											"name": "GRADE PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CLIENTE",
											"type": "String"
										},
										"sink": {
											"name": "CLIENTE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PERMANENCIA PARA",
											"type": "String"
										},
										"sink": {
											"name": "PERMANENCIA PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SAZONALIDADE PERMANENTE PARA",
											"type": "String"
										},
										"sink": {
											"name": "SAZONALIDADE PERMANENTE PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RELANCADO PARA",
											"type": "String"
										},
										"sink": {
											"name": "RELANCADO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LEGADO CONJUNTO KIT PARA",
											"type": "String"
										},
										"sink": {
											"name": "LEGADO CONJUNTO KIT PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LEGADO MATERIAL REFERENCIA",
											"type": "String"
										},
										"sink": {
											"name": "LEGADO MATERIAL REFERENCIA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CONJUNTO KIT PARA",
											"type": "String"
										},
										"sink": {
											"name": "CONJUNTO KIT PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MATERIAL REFERENCIA PARA",
											"type": "String"
										},
										"sink": {
											"name": "MATERIAL REFERENCIA PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FAIXA DE PREÇO PARA",
											"type": "String"
										},
										"sink": {
											"name": "FAIXA DE PREÇO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ESTRATEGIA PRODUTO PARA",
											"type": "String"
										},
										"sink": {
											"name": "ESTRATEGIA PRODUTO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "REFERENCIA PRIVATE LABEL PARA",
											"type": "String"
										},
										"sink": {
											"name": "REFERENCIA PRIVATE LABEL PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IMAGEM DO TAG PARA",
											"type": "String"
										},
										"sink": {
											"name": "IMAGEM DO TAG PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NIVEL DE SEASON PARA",
											"type": "String"
										},
										"sink": {
											"name": "NIVEL DE SEASON PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LICENCA PARA",
											"type": "String"
										},
										"sink": {
											"name": "LICENCA PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LICENSING OFFICE PARA",
											"type": "String"
										},
										"sink": {
											"name": "LICENSING OFFICE PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QUANTIDADE ETIQUETA EXPEDICAO PARA",
											"type": "String"
										},
										"sink": {
											"name": "QUANTIDADE ETIQUETA EXPEDICAO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CODIGO CA  NACIONAL DE PRODUTOS PARA",
											"type": "String"
										},
										"sink": {
											"name": "CODIGO CA  NACIONAL DE PRODUTOS PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RETILINEA PARA",
											"type": "String"
										},
										"sink": {
											"name": "RETILINEA PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "COR DE MOSTRUARIO PARA",
											"type": "String"
										},
										"sink": {
											"name": "COR DE MOSTRUARIO PARA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATA",
											"type": "String"
										},
										"sink": {
											"name": "DATA",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlPoolTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_Testes de Conectividade"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable3')]",
				"[concat(variables('workspaceId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_DS_DESTINO_GEN2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string",
						"defaultValue": "raw"
					}
				},
				"folder": {
					"name": "DESTINO"
				},
				"annotations": [],
				"type": "Orc",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_DS_DESTINO_PARQUET_GEN2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_CONTROLE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IdData",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ano",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AnoMes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AnoMesDia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Data",
						"type": "date"
					},
					{
						"name": "Dia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mes",
						"type": "varchar"
					},
					{
						"name": "MesAnoDesc",
						"type": "varchar"
					},
					{
						"name": "NumeroMes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumeroDiaDaSemana",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DiaSemana",
						"type": "varchar"
					},
					{
						"name": "DiaDoAno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumeroSemanaDoAno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Trimestre",
						"type": "varchar"
					},
					{
						"name": "NumeroTrimestre",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Semestre",
						"type": "varchar"
					},
					{
						"name": "NumeroSemestre",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "planilha_produto"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlTable2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_CONTROLE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IdData",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ano",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AnoMes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AnoMesDia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Data",
						"type": "date"
					},
					{
						"name": "Dia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mes",
						"type": "varchar"
					},
					{
						"name": "MesAnoDesc",
						"type": "varchar"
					},
					{
						"name": "NumeroMes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumeroDiaDaSemana",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DiaSemana",
						"type": "varchar"
					},
					{
						"name": "DiaDoAno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumeroSemanaDoAno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Trimestre",
						"type": "varchar"
					},
					{
						"name": "NumeroTrimestre",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Semestre",
						"type": "varchar"
					},
					{
						"name": "NumeroSemestre",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dw",
					"table": "DIM_DATA"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDataDestination')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "It describes the destination store.",
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "String"
					},
					"Directory": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ORIGEM"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDataSource_File')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "It describes the file in the data source store.",
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "String"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ORIGEM"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BinaryDataSource_Folder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "It describes the folder in the data source store.",
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderPath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ORIGEM"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSV_OP_DS_ORIGEM')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ORIGEM"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CTR_ADF_PIPELINE')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_CONTROLE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "NOM_PIPELINE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CTR_ADF_PIPELINE"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Clientes')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CLEANSING/Cigam"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gst_bi_clientes.parquet",
						"folderPath": "cigam",
						"fileSystem": "cleansing"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ESTAB_IDCIGAM",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CODIGO",
						"type": "DOUBLE"
					},
					{
						"name": "CLIENTE_NOME",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CPFCNPJ",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_EMAIL",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CIDADE",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ESTADO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_SEXO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ANIVERSARIO",
						"type": "INT96"
					},
					{
						"name": "CLIENTE_DDD_CELULAR",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CELULAR",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ENDERECO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_NUMERO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_COMPLEMENTO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_BAIRRO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CEP",
						"type": "UTF8"
					},
					{
						"name": "NUM_MATRICULA",
						"type": "UTF8"
					},
					{
						"name": "DAT_HORA_EXPORTACAO",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ADLS_GEN2_BINARY_DESTINO')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DESTINO"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ADLS_GEN2_CSV_DESTINO')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DESTINO"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"columnDelimiter": ";",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_ADSL_GEN2_JSON_DESTINO')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DESTINO"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_API_ELCM_ORIGEM')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ParRelativeURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ORIGEM"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_API_GIC_ORIGEM')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ParRelativeURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ORIGEM"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_HTTP_BIN_ORIGEM')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"RalativeURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ORIGEM"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gst_bi_clientes_202102031356.parquet",
						"folderPath": "brazil/cigam/gst_bi_clientes/2021/02/03",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "GrupoCampanha.csv",
						"folderPath": "brazil/transacional/saptable/mm/GrupoCampanha",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_jni')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_mly')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Clientes",
						"folderPath": "cigam",
						"fileSystem": "cleansing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DsSapRest')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapRest",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"RelativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().RelativeURL",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SapRest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GST_BI_CLIENTES')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gst_bi_clientes.parquet",
						"folderPath": "brazil/transacional/cigam/frente de caixa/gst_bi_clientes",
						"fileSystem": "cleansing"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "pk_cliente",
						"type": "UTF8"
					},
					{
						"name": "estab_idcigam",
						"type": "UTF8"
					},
					{
						"name": "cliente_codigo",
						"type": "DOUBLE"
					},
					{
						"name": "cliente_nome",
						"type": "UTF8"
					},
					{
						"name": "cliente_cpfcnpj",
						"type": "UTF8"
					},
					{
						"name": "cliente_email",
						"type": "UTF8"
					},
					{
						"name": "cliente_cidade",
						"type": "UTF8"
					},
					{
						"name": "cliente_estado",
						"type": "UTF8"
					},
					{
						"name": "cliente_sexo",
						"type": "UTF8"
					},
					{
						"name": "cliente_aniversario",
						"type": "INT96"
					},
					{
						"name": "cliente_ddd_celular",
						"type": "UTF8"
					},
					{
						"name": "cliente_celular",
						"type": "UTF8"
					},
					{
						"name": "cliente_endereco",
						"type": "UTF8"
					},
					{
						"name": "cliente_numero",
						"type": "UTF8"
					},
					{
						"name": "cliente_complemento",
						"type": "UTF8"
					},
					{
						"name": "cliente_bairro",
						"type": "UTF8"
					},
					{
						"name": "cliente_cep",
						"type": "UTF8"
					},
					{
						"name": "num_matricula",
						"type": "UTF8"
					},
					{
						"name": "flag_vigencia",
						"type": "INT32"
					},
					{
						"name": "dat_inicio_vigencia",
						"type": "INT96"
					},
					{
						"name": "dat_final_vigencia",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GST_BI_CLIENTES_PARQUET')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "pk_cliente",
						"type": "varchar"
					},
					{
						"name": "estab_idcigam",
						"type": "varchar"
					},
					{
						"name": "cliente_codigo",
						"type": "float",
						"precision": 15
					},
					{
						"name": "cliente_nome",
						"type": "varchar"
					},
					{
						"name": "cliente_cpfcnpj",
						"type": "varchar"
					},
					{
						"name": "cliente_email",
						"type": "varchar"
					},
					{
						"name": "cliente_cidade",
						"type": "varchar"
					},
					{
						"name": "cliente_estado",
						"type": "varchar"
					},
					{
						"name": "cliente_sexo",
						"type": "varchar"
					},
					{
						"name": "cliente_aniversario",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cliente_ddd_celular",
						"type": "varchar"
					},
					{
						"name": "cliente_celular",
						"type": "varchar"
					},
					{
						"name": "cliente_endereco",
						"type": "varchar"
					},
					{
						"name": "cliente_numero",
						"type": "varchar"
					},
					{
						"name": "cliente_complemento",
						"type": "varchar"
					},
					{
						"name": "cliente_bairro",
						"type": "varchar"
					},
					{
						"name": "cliente_cep",
						"type": "varchar"
					},
					{
						"name": "num_matricula",
						"type": "varchar"
					},
					{
						"name": "flag_vigencia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dat_inicio_vigencia",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "dat_final_vigencia",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "temp",
					"table": "cigam_clientes_final"
				},
				"sqlPool": {
					"referenceName": "dwmwe",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dwmwe')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOB_IMAGENS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ParRelativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/BLOB_IMAGENS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json2Parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order.json",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"list": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"orderId": {
										"type": "string"
									},
									"creationDate": {
										"type": "string"
									},
									"clientName": {
										"type": "string"
									},
									"items": {
										"type": "null"
									},
									"totalValue": {
										"type": "number"
									},
									"paymentNames": {
										"type": "string"
									},
									"status": {
										"type": "string"
									},
									"statusDescription": {
										"type": "string"
									},
									"marketPlaceOrderId": {
										"type": "null"
									},
									"sequence": {
										"type": "string"
									},
									"salesChannel": {
										"type": "string"
									},
									"affiliateId": {
										"type": "string"
									},
									"origin": {
										"type": "string"
									},
									"workflowInErrorState": {
										"type": "boolean"
									},
									"workflowInRetry": {
										"type": "boolean"
									},
									"lastMessageUnread": {
										"type": "string"
									},
									"ShippingEstimatedDate": {
										"type": "null"
									},
									"ShippingEstimatedDateMax": {
										"type": "string"
									},
									"ShippingEstimatedDateMin": {
										"type": "string"
									},
									"orderIsComplete": {
										"type": "boolean"
									},
									"listId": {
										"type": "null"
									},
									"listType": {
										"type": "null"
									},
									"authorizedDate": {
										"type": "string"
									},
									"callCenterOperatorName": {
										"type": "null"
									},
									"totalItems": {
										"type": "integer"
									},
									"currencyCode": {
										"type": "string"
									},
									"hostname": {
										"type": "string"
									},
									"invoiceOutput": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"invoiceInput": {
										"type": "null"
									}
								}
							}
						},
						"facets": {
							"type": "array"
						},
						"paging": {
							"type": "object",
							"properties": {
								"total": {
									"type": "integer"
								},
								"pages": {
									"type": "integer"
								},
								"currentPage": {
									"type": "integer"
								},
								"perPage": {
									"type": "integer"
								}
							}
						},
						"stats": {
							"type": "object",
							"properties": {
								"stats": {
									"type": "object",
									"properties": {
										"totalValue": {
											"type": "object",
											"properties": {
												"Count": {
													"type": "integer"
												},
												"Max": {
													"type": "number"
												},
												"Mean": {
													"type": "number"
												},
												"Min": {
													"type": "number"
												},
												"Missing": {
													"type": "integer"
												},
												"StdDev": {
													"type": "number"
												},
												"Sum": {
													"type": "number"
												},
												"SumOfSquares": {
													"type": "number"
												},
												"Facets": {
													"type": "object"
												}
											}
										},
										"totalItems": {
											"type": "object",
											"properties": {
												"Count": {
													"type": "integer"
												},
												"Max": {
													"type": "number"
												},
												"Mean": {
													"type": "number"
												},
												"Min": {
													"type": "number"
												},
												"Missing": {
													"type": "integer"
												},
												"StdDev": {
													"type": "number"
												},
												"Sum": {
													"type": "number"
												},
												"SumOfSquares": {
													"type": "number"
												},
												"Facets": {
													"type": "object"
												}
											}
										}
									}
								}
							}
						},
						"reportRecordsLimit": {
							"type": "integer"
						}
					}
				},
				"enableSkipIncompatibleRow": true
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json2ParquetDestino')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "json2prq.parquet",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OracleTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ORC_GIGAM_ORIGEM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NomeTabela": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"SecretNamePWD": {
						"type": "string"
					},
					"SecretNameCON": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "APEX_030200",
					"table": "APEX_APPLICATION_GROUPS"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ORC_GIGAM_ORIGEM')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrderDetailsJson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order_total.json",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"orderId": {
							"type": "string"
						},
						"sequence": {
							"type": "string"
						},
						"marketplaceOrderId": {
							"type": "string"
						},
						"marketplaceServicesEndpoint": {
							"type": "string"
						},
						"sellerOrderId": {
							"type": "string"
						},
						"origin": {
							"type": "string"
						},
						"affiliateId": {
							"type": "string"
						},
						"salesChannel": {
							"type": "string"
						},
						"merchantName": {
							"type": "null"
						},
						"status": {
							"type": "string"
						},
						"statusDescription": {
							"type": "string"
						},
						"value": {
							"type": "integer"
						},
						"creationDate": {
							"type": "string"
						},
						"lastChange": {
							"type": "string"
						},
						"orderGroup": {
							"type": "string"
						},
						"totals": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"value": {
										"type": "integer"
									}
								}
							}
						},
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"uniqueId": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"productId": {
										"type": "string"
									},
									"ean": {
										"type": "string"
									},
									"lockId": {
										"type": "string"
									},
									"itemAttachment": {
										"type": "object",
										"properties": {
											"content": {
												"type": "object"
											},
											"name": {
												"type": "null"
											}
										}
									},
									"attachments": {
										"type": "array"
									},
									"quantity": {
										"type": "integer"
									},
									"seller": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"refId": {
										"type": "string"
									},
									"price": {
										"type": "integer"
									},
									"listPrice": {
										"type": "integer"
									},
									"manualPrice": {
										"type": "null"
									},
									"priceTags": {
										"type": "array"
									},
									"imageUrl": {
										"type": "string"
									},
									"detailUrl": {
										"type": "string"
									},
									"components": {
										"type": "array"
									},
									"bundleItems": {
										"type": "array"
									},
									"params": {
										"type": "array"
									},
									"offerings": {
										"type": "array"
									},
									"sellerSku": {
										"type": "string"
									},
									"priceValidUntil": {
										"type": "null"
									},
									"commission": {
										"type": "integer"
									},
									"tax": {
										"type": "integer"
									},
									"preSaleDate": {
										"type": "string"
									},
									"additionalInfo": {
										"type": "object",
										"properties": {
											"brandName": {
												"type": "string"
											},
											"brandId": {
												"type": "string"
											},
											"categoriesIds": {
												"type": "string"
											},
											"categories": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "integer"
														},
														"name": {
															"type": "string"
														}
													}
												}
											},
											"productClusterId": {
												"type": "string"
											},
											"commercialConditionId": {
												"type": "string"
											},
											"dimension": {
												"type": "object",
												"properties": {
													"cubicweight": {
														"type": "number"
													},
													"height": {
														"type": "number"
													},
													"length": {
														"type": "number"
													},
													"weight": {
														"type": "number"
													},
													"width": {
														"type": "number"
													}
												}
											},
											"offeringInfo": {
												"type": "null"
											},
											"offeringType": {
												"type": "null"
											},
											"offeringTypeId": {
												"type": "null"
											}
										}
									},
									"measurementUnit": {
										"type": "string"
									},
									"unitMultiplier": {
										"type": "number"
									},
									"sellingPrice": {
										"type": "integer"
									},
									"isGift": {
										"type": "boolean"
									},
									"shippingPrice": {
										"type": "null"
									},
									"rewardValue": {
										"type": "integer"
									},
									"freightCommission": {
										"type": "integer"
									},
									"priceDefinitions": {
										"type": "null"
									},
									"taxCode": {
										"type": "null"
									},
									"parentItemIndex": {
										"type": "null"
									},
									"parentAssemblyBinding": {
										"type": "null"
									},
									"callCenterOperator": {
										"type": "null"
									},
									"serialNumbers": {
										"type": "null"
									},
									"assemblies": {
										"type": "array"
									},
									"costPrice": {
										"type": "integer"
									}
								}
							}
						},
						"marketplaceItems": {
							"type": "array"
						},
						"clientProfileData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"firstName": {
									"type": "string"
								},
								"lastName": {
									"type": "string"
								},
								"documentType": {
									"type": "string"
								},
								"document": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"corporateName": {
									"type": "null"
								},
								"tradeName": {
									"type": "null"
								},
								"corporateDocument": {
									"type": "null"
								},
								"stateInscription": {
									"type": "null"
								},
								"corporatePhone": {
									"type": "null"
								},
								"isCorporate": {
									"type": "boolean"
								},
								"userProfileId": {
									"type": "string"
								},
								"customerClass": {
									"type": "null"
								}
							}
						},
						"giftRegistryData": {
							"type": "null"
						},
						"marketingData": {
							"type": "null"
						},
						"ratesAndBenefitsData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"rateAndBenefitsIdentifiers": {
									"type": "array"
								}
							}
						},
						"shippingData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"address": {
									"type": "object",
									"properties": {
										"addressType": {
											"type": "string"
										},
										"receiverName": {
											"type": "string"
										},
										"addressId": {
											"type": "string"
										},
										"postalCode": {
											"type": "string"
										},
										"city": {
											"type": "string"
										},
										"state": {
											"type": "string"
										},
										"country": {
											"type": "string"
										},
										"street": {
											"type": "string"
										},
										"number": {
											"type": "string"
										},
										"neighborhood": {
											"type": "string"
										},
										"complement": {
											"type": "null"
										},
										"reference": {
											"type": "null"
										},
										"geoCoordinates": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								},
								"logisticsInfo": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"itemIndex": {
												"type": "integer"
											},
											"selectedSla": {
												"type": "string"
											},
											"lockTTL": {
												"type": "string"
											},
											"price": {
												"type": "integer"
											},
											"listPrice": {
												"type": "integer"
											},
											"sellingPrice": {
												"type": "integer"
											},
											"deliveryWindow": {
												"type": "null"
											},
											"deliveryCompany": {
												"type": "string"
											},
											"shippingEstimate": {
												"type": "string"
											},
											"shippingEstimateDate": {
												"type": "string"
											},
											"slas": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"shippingEstimate": {
															"type": "string"
														},
														"deliveryWindow": {
															"type": "null"
														},
														"price": {
															"type": "integer"
														},
														"deliveryChannel": {
															"type": "string"
														},
														"pickupStoreInfo": {
															"type": "object",
															"properties": {
																"additionalInfo": {
																	"type": "null"
																},
																"address": {
																	"type": "null"
																},
																"dockId": {
																	"type": "null"
																},
																"friendlyName": {
																	"type": "null"
																},
																"isPickupStore": {
																	"type": "boolean"
																}
															}
														},
														"polygonName": {
															"type": "null"
														},
														"lockTTL": {
															"type": "string"
														},
														"pickupPointId": {
															"type": "null"
														},
														"transitTime": {
															"type": "string"
														}
													}
												}
											},
											"shipsTo": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"deliveryIds": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"courierId": {
															"type": "string"
														},
														"courierName": {
															"type": "string"
														},
														"dockId": {
															"type": "string"
														},
														"quantity": {
															"type": "integer"
														},
														"warehouseId": {
															"type": "string"
														},
														"accountCarrierName": {
															"type": "null"
														}
													}
												}
											},
											"deliveryChannel": {
												"type": "string"
											},
											"pickupStoreInfo": {
												"type": "object",
												"properties": {
													"additionalInfo": {
														"type": "null"
													},
													"address": {
														"type": "null"
													},
													"dockId": {
														"type": "null"
													},
													"friendlyName": {
														"type": "null"
													},
													"isPickupStore": {
														"type": "boolean"
													}
												}
											},
											"addressId": {
												"type": "string"
											},
											"polygonName": {
												"type": "null"
											},
											"pickupPointId": {
												"type": "null"
											},
											"transitTime": {
												"type": "string"
											}
										}
									}
								},
								"trackingHints": {
									"type": "null"
								},
								"selectedAddresses": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"addressId": {
												"type": "string"
											},
											"addressType": {
												"type": "string"
											},
											"receiverName": {
												"type": "string"
											},
											"street": {
												"type": "string"
											},
											"number": {
												"type": "string"
											},
											"complement": {
												"type": "null"
											},
											"neighborhood": {
												"type": "string"
											},
											"postalCode": {
												"type": "string"
											},
											"city": {
												"type": "string"
											},
											"state": {
												"type": "string"
											},
											"country": {
												"type": "string"
											},
											"reference": {
												"type": "null"
											},
											"geoCoordinates": {
												"type": "array",
												"items": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						},
						"paymentData": {
							"type": "object",
							"properties": {
								"giftCards": {
									"type": "array"
								},
								"transactions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"isActive": {
												"type": "boolean"
											},
											"transactionId": {
												"type": "string"
											},
											"merchantName": {
												"type": "string"
											},
											"payments": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"paymentSystem": {
															"type": "string"
														},
														"paymentSystemName": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														},
														"installments": {
															"type": "integer"
														},
														"referenceValue": {
															"type": "integer"
														},
														"cardHolder": {
															"type": "null"
														},
														"cardNumber": {
															"type": "null"
														},
														"firstDigits": {
															"type": "string"
														},
														"lastDigits": {
															"type": "string"
														},
														"cvv2": {
															"type": "null"
														},
														"expireMonth": {
															"type": "null"
														},
														"expireYear": {
															"type": "null"
														},
														"url": {
															"type": "null"
														},
														"giftCardId": {
															"type": "null"
														},
														"giftCardName": {
															"type": "null"
														},
														"giftCardCaption": {
															"type": "null"
														},
														"redemptionCode": {
															"type": "null"
														},
														"group": {
															"type": "string"
														},
														"tid": {
															"type": "string"
														},
														"dueDate": {
															"type": "null"
														},
														"connectorResponses": {
															"type": "object",
															"properties": {
																"Tid": {
																	"type": "string"
																},
																"ReturnCode": {
																	"type": "null"
																},
																"Message": {
																	"type": "null"
																},
																"authId": {
																	"type": "string"
																},
																"nsu": {
																	"type": "string"
																},
																"acquirer": {
																	"type": "string"
																}
															}
														},
														"giftCardProvider": {
															"type": "null"
														},
														"giftCardAsDiscount": {
															"type": "null"
														},
														"koinUrl": {
															"type": "null"
														},
														"accountId": {
															"type": "string"
														},
														"parentAccountId": {
															"type": "string"
														},
														"bankIssuedInvoiceIdentificationNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceIdentificationNumberFormatted": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeType": {
															"type": "null"
														},
														"billingAddress": {
															"type": "object",
															"properties": {
																"postalCode": {
																	"type": "string"
																},
																"city": {
																	"type": "string"
																},
																"state": {
																	"type": "string"
																},
																"country": {
																	"type": "string"
																},
																"street": {
																	"type": "string"
																},
																"number": {
																	"type": "string"
																},
																"neighborhood": {
																	"type": "string"
																},
																"complement": {
																	"type": "null"
																},
																"reference": {
																	"type": "null"
																},
																"geoCoordinates": {
																	"type": "array",
																	"items": {
																		"type": "number"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"packageAttachment": {
							"type": "object",
							"properties": {
								"packages": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"items": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"itemIndex": {
															"type": "integer"
														},
														"quantity": {
															"type": "integer"
														},
														"price": {
															"type": "integer"
														},
														"description": {
															"type": "null"
														},
														"unitMultiplier": {
															"type": "number"
														}
													}
												}
											},
											"courier": {
												"type": "string"
											},
											"invoiceNumber": {
												"type": "string"
											},
											"invoiceValue": {
												"type": "integer"
											},
											"invoiceUrl": {
												"type": "null"
											},
											"issuanceDate": {
												"type": "string"
											},
											"trackingNumber": {
												"type": "string"
											},
											"invoiceKey": {
												"type": "string"
											},
											"trackingUrl": {
												"type": "string"
											},
											"embeddedInvoice": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"courierStatus": {
												"type": "object",
												"properties": {
													"status": {
														"type": "string"
													},
													"finished": {
														"type": "boolean"
													},
													"deliveredDate": {
														"type": "null"
													},
													"data": {
														"type": "array"
													}
												}
											},
											"cfop": {
												"type": "null"
											},
											"restitutions": {
												"type": "object"
											},
											"volumes": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"sellers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"logo": {
										"type": "string"
									},
									"fulfillmentEndpoint": {
										"type": "string"
									}
								}
							}
						},
						"callCenterOperatorData": {
							"type": "null"
						},
						"followUpEmail": {
							"type": "string"
						},
						"lastMessage": {
							"type": "null"
						},
						"hostname": {
							"type": "string"
						},
						"invoiceData": {
							"type": "null"
						},
						"changesAttachment": {
							"type": "null"
						},
						"openTextField": {
							"type": "null"
						},
						"roundingError": {
							"type": "integer"
						},
						"orderFormId": {
							"type": "string"
						},
						"commercialConditionData": {
							"type": "null"
						},
						"isCompleted": {
							"type": "boolean"
						},
						"customData": {
							"type": "null"
						},
						"storePreferencesData": {
							"type": "object",
							"properties": {
								"countryCode": {
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"currencyFormatInfo": {
									"type": "object",
									"properties": {
										"CurrencyDecimalDigits": {
											"type": "integer"
										},
										"CurrencyDecimalSeparator": {
											"type": "string"
										},
										"CurrencyGroupSeparator": {
											"type": "string"
										},
										"CurrencyGroupSize": {
											"type": "integer"
										},
										"StartsWithCurrencySymbol": {
											"type": "boolean"
										}
									}
								},
								"currencyLocale": {
									"type": "integer"
								},
								"currencySymbol": {
									"type": "string"
								},
								"timeZone": {
									"type": "string"
								}
							}
						},
						"allowCancellation": {
							"type": "boolean"
						},
						"allowEdition": {
							"type": "boolean"
						},
						"isCheckedIn": {
							"type": "boolean"
						},
						"marketplace": {
							"type": "object",
							"properties": {
								"baseURL": {
									"type": "string"
								},
								"isCertified": {
									"type": "null"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"authorizedDate": {
							"type": "string"
						},
						"invoicedDate": {
							"type": "string"
						},
						"cancelReason": {
							"type": "null"
						},
						"itemMetadata": {
							"type": "object",
							"properties": {
								"Items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Id": {
												"type": "string"
											},
											"Seller": {
												"type": "string"
											},
											"Name": {
												"type": "string"
											},
											"SkuName": {
												"type": "string"
											},
											"ProductId": {
												"type": "string"
											},
											"RefId": {
												"type": "string"
											},
											"Ean": {
												"type": "string"
											},
											"ImageUrl": {
												"type": "string"
											},
											"DetailUrl": {
												"type": "string"
											},
											"AssemblyOptions": {
												"type": "array"
											}
										}
									}
								}
							}
						},
						"subscriptionData": {
							"type": "null"
						},
						"taxData": {
							"type": "null"
						},
						"checkedInPickupPointId": {
							"type": "null"
						},
						"cancellationData": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrderDetailsParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OrderDetails.parquet",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "orderId",
						"type": "UTF8"
					},
					{
						"name": "creationDate",
						"type": "UTF8"
					},
					{
						"name": "clientName",
						"type": "UTF8"
					},
					{
						"name": "items",
						"type": "UTF8"
					},
					{
						"name": "totalValue",
						"type": "UTF8"
					},
					{
						"name": "paymentNames",
						"type": "UTF8"
					},
					{
						"name": "status",
						"type": "UTF8"
					},
					{
						"name": "statusDescription",
						"type": "UTF8"
					},
					{
						"name": "marketPlaceOrderId",
						"type": "UTF8"
					},
					{
						"name": "sequence",
						"type": "UTF8"
					},
					{
						"name": "salesChannel",
						"type": "UTF8"
					},
					{
						"name": "affiliateId",
						"type": "UTF8"
					},
					{
						"name": "origin",
						"type": "UTF8"
					},
					{
						"name": "workflowInErrorState",
						"type": "UTF8"
					},
					{
						"name": "workflowInRetry",
						"type": "UTF8"
					},
					{
						"name": "lastMessageUnread",
						"type": "UTF8"
					},
					{
						"name": "ShippingEstimatedDate",
						"type": "UTF8"
					},
					{
						"name": "ShippingEstimatedDateMax",
						"type": "UTF8"
					},
					{
						"name": "ShippingEstimatedDateMin",
						"type": "UTF8"
					},
					{
						"name": "orderIsComplete",
						"type": "UTF8"
					},
					{
						"name": "listId",
						"type": "UTF8"
					},
					{
						"name": "listType",
						"type": "UTF8"
					},
					{
						"name": "authorizedDate",
						"type": "UTF8"
					},
					{
						"name": "callCenterOperatorName",
						"type": "UTF8"
					},
					{
						"name": "totalItems",
						"type": "UTF8"
					},
					{
						"name": "currencyCode",
						"type": "UTF8"
					},
					{
						"name": "hostname",
						"type": "UTF8"
					},
					{
						"name": "invoiceOutput",
						"type": "UTF8"
					},
					{
						"name": "invoiceInput",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "clientes.parquet",
						"folderPath": "cigam",
						"fileSystem": "cleansing"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "gst_bi_clientes.parquet",
						"folderPath": "brazil/transacional/cigam/frente de caixa/gst_bi_clientes",
						"fileSystem": "cleansing"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RestVTEX')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceVtex",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ParRelativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().ParRelativeURL",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/RestServiceVtex')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SAP_TABLE_RESOURCE')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAP_TABLE_ORIGEM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NomeTabela": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().NomeTabela",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SAP_TABLE_ORIGEM')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL_DS_CONTROLE')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_CONTROLE",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NomeTabela": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CONTROLE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().NomeTabela",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQL_CONTROLE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SapTableResource1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SAP_TABLE_ORIGEM",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "VBEP"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SAP_TABLE_ORIGEM')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_jni')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ESTAB_IDCIGAM",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CODIGO",
						"type": "DOUBLE"
					},
					{
						"name": "CLIENTE_NOME",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CPFCNPJ",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_EMAIL",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CIDADE",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ESTADO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_SEXO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ANIVERSARIO",
						"type": "INT96"
					},
					{
						"name": "CLIENTE_DDD_CELULAR",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CELULAR",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ENDERECO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_NUMERO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_COMPLEMENTO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_BAIRRO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CEP",
						"type": "UTF8"
					},
					{
						"name": "NUM_MATRICULA",
						"type": "UTF8"
					},
					{
						"name": "DAT_HORA_EXPORTACAO",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_mly')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "brazil/transacional/cigam/frente de caixa/gst_bi_clientes",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ESTAB_IDCIGAM",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CODIGO",
						"type": "DOUBLE"
					},
					{
						"name": "CLIENTE_NOME",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CPFCNPJ",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_EMAIL",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CIDADE",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ESTADO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_SEXO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ANIVERSARIO",
						"type": "INT96"
					},
					{
						"name": "CLIENTE_DDD_CELULAR",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CELULAR",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_ENDERECO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_NUMERO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_COMPLEMENTO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_BAIRRO",
						"type": "UTF8"
					},
					{
						"name": "CLIENTE_CEP",
						"type": "UTF8"
					},
					{
						"name": "NUM_MATRICULA",
						"type": "UTF8"
					},
					{
						"name": "DAT_HORA_EXPORTACAO",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "PK_CLIENTE",
						"type": "varchar"
					},
					{
						"name": "ESTAB_IDCIGAM",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CODIGO",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CLIENTE_NOME",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CPFCNPJ",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_EMAIL",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CIDADE",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_ESTADO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_SEXO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_ANIVERSARIO",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CLIENTE_DDD_CELULAR",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CELULAR",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_ENDERECO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_NUMERO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_COMPLEMENTO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_BAIRRO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CEP",
						"type": "varchar"
					},
					{
						"name": "NUM_MATRICULA",
						"type": "varchar"
					},
					{
						"name": "DAT_HORA_EXPORTACAO",
						"type": "varchar"
					},
					{
						"name": "TIPO_ACAO",
						"type": "varchar"
					},
					{
						"name": "FLAG_VIGENCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DAT_INICIO_VIGENCIA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DAT_FINAL_VIGENCIA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "temp",
					"table": "CLIENTES_PROCESSAMENTO"
				},
				"sqlPool": {
					"referenceName": "dwmwe",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dwmwe')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTable3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "OBJETO",
						"type": "varchar"
					},
					{
						"name": "MARCA",
						"type": "varchar"
					},
					{
						"name": "LINHA DE PRODUTO",
						"type": "varchar"
					},
					{
						"name": "SUB LINHA DE PRODUTO",
						"type": "varchar"
					},
					{
						"name": "LICENSING OFFICE",
						"type": "varchar"
					},
					{
						"name": "LINHA DE VAREJO",
						"type": "varchar"
					},
					{
						"name": "GENERO",
						"type": "varchar"
					},
					{
						"name": "MIX DO MATERIAL",
						"type": "varchar"
					},
					{
						"name": "OCASIÃO DE USO",
						"type": "varchar"
					},
					{
						"name": "META DO MATERIAL",
						"type": "varchar"
					},
					{
						"name": "SEGMENTO",
						"type": "varchar"
					},
					{
						"name": "CATEGORIA DO PRODUTO",
						"type": "varchar"
					},
					{
						"name": "DESTINO CONFECÇÃO",
						"type": "varchar"
					},
					{
						"name": "ESPÉCIE",
						"type": "varchar"
					},
					{
						"name": "ESPÉCIE DETALHADA",
						"type": "varchar"
					},
					{
						"name": "DESCRIÇÃO",
						"type": "varchar"
					},
					{
						"name": "ESPECIFICAÇÃO",
						"type": "varchar"
					},
					{
						"name": "COMPLEMENTO",
						"type": "varchar"
					},
					{
						"name": "DESCRIÇÃO COMERCIAL",
						"type": "varchar"
					},
					{
						"name": "GRADE",
						"type": "varchar"
					},
					{
						"name": "COR DO MOSTRUÁRIO TAMANHO",
						"type": "varchar"
					},
					{
						"name": "FAIXA DE PREÇO",
						"type": "varchar"
					},
					{
						"name": "NÍVEL DE MODA",
						"type": "varchar"
					},
					{
						"name": "NIVEL DE SEASON",
						"type": "varchar"
					},
					{
						"name": "PERMANÊNCIA",
						"type": "varchar"
					},
					{
						"name": "SAZONALIDADE PERMANENTE",
						"type": "varchar"
					},
					{
						"name": "MATERIA PRIMA",
						"type": "varchar"
					},
					{
						"name": "LEGADO  CONJUNTO KIT",
						"type": "varchar"
					},
					{
						"name": "LEGADO  MATERIAL DE REFERENCIA",
						"type": "varchar"
					},
					{
						"name": "CONJUNTO KIT",
						"type": "varchar"
					},
					{
						"name": "MATERIAL DE REFERENCIA",
						"type": "varchar"
					},
					{
						"name": "REFERENCIA DO PRIVATE LABEL",
						"type": "varchar"
					},
					{
						"name": "RETILINEA",
						"type": "varchar"
					},
					{
						"name": "CAD  NACIONAL DE PRODUTOS",
						"type": "varchar"
					},
					{
						"name": "IMAGEM DO TAG",
						"type": "varchar"
					},
					{
						"name": "DESCRIÇÃO ETIQUETA MEIA",
						"type": "varchar"
					},
					{
						"name": "ESTRATÉGIA PRODUTO",
						"type": "varchar"
					},
					{
						"name": "QUANTIDADE ETIQUETA EXPEDIÇÃO",
						"type": "varchar"
					},
					{
						"name": "LICENÇA",
						"type": "varchar"
					},
					{
						"name": "RELANÇADO",
						"type": "varchar"
					},
					{
						"name": "PRODUTO ACOMPANHA ACESSORIO",
						"type": "varchar"
					},
					{
						"name": "ANO2",
						"type": "varchar"
					},
					{
						"name": "MARCA PARA",
						"type": "varchar"
					},
					{
						"name": "GENERO PARA",
						"type": "varchar"
					},
					{
						"name": "SEGMENTO PARA",
						"type": "varchar"
					},
					{
						"name": "MIX PARA",
						"type": "varchar"
					},
					{
						"name": "ESPECIE PARA",
						"type": "varchar"
					},
					{
						"name": "CONJUNTO DETALHADO PARA",
						"type": "varchar"
					},
					{
						"name": "TIPO DE PRODUTO PARA",
						"type": "varchar"
					},
					{
						"name": "LINHA DE PRODUTO PARA",
						"type": "varchar"
					},
					{
						"name": "GRUPO DE PRODUTO PARA",
						"type": "varchar"
					},
					{
						"name": "SUB GRUPO DE PRODUTO PARA",
						"type": "varchar"
					},
					{
						"name": "CATEGORIA DE PRODUTO PARA",
						"type": "varchar"
					},
					{
						"name": "DESTINO CONFECCAO PARA",
						"type": "varchar"
					},
					{
						"name": "GRADE PARA",
						"type": "varchar"
					},
					{
						"name": "CLIENTE",
						"type": "varchar"
					},
					{
						"name": "PERMANENCIA PARA",
						"type": "varchar"
					},
					{
						"name": "SAZONALIDADE PERMANENTE PARA",
						"type": "varchar"
					},
					{
						"name": "RELANCADO PARA",
						"type": "varchar"
					},
					{
						"name": "LEGADO CONJUNTO KIT PARA",
						"type": "varchar"
					},
					{
						"name": "LEGADO MATERIAL REFERENCIA",
						"type": "varchar"
					},
					{
						"name": "CONJUNTO KIT PARA",
						"type": "varchar"
					},
					{
						"name": "MATERIAL REFERENCIA PARA",
						"type": "varchar"
					},
					{
						"name": "FAIXA DE PREÇO PARA",
						"type": "varchar"
					},
					{
						"name": "ESTRATEGIA PRODUTO PARA",
						"type": "varchar"
					},
					{
						"name": "REFERENCIA PRIVATE LABEL PARA",
						"type": "varchar"
					},
					{
						"name": "IMAGEM DO TAG PARA",
						"type": "varchar"
					},
					{
						"name": "NIVEL DE SEASON PARA",
						"type": "varchar"
					},
					{
						"name": "LICENCA PARA",
						"type": "varchar"
					},
					{
						"name": "LICENSING OFFICE PARA",
						"type": "varchar"
					},
					{
						"name": "QUANTIDADE ETIQUETA EXPEDICAO PARA",
						"type": "varchar"
					},
					{
						"name": "CODIGO CA  NACIONAL DE PRODUTOS PARA",
						"type": "varchar"
					},
					{
						"name": "RETILINEA PARA",
						"type": "varchar"
					},
					{
						"name": "COR DE MOSTRUARIO PARA",
						"type": "varchar"
					},
					{
						"name": "DATA",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "planilha_produto"
				},
				"sqlPool": {
					"referenceName": "dwmwe",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dwmwe')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTable4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "IdData",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ano",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AnoMes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AnoMesDia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Data",
						"type": "date"
					},
					{
						"name": "Dia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mes",
						"type": "varchar"
					},
					{
						"name": "MesAnoDesc",
						"type": "varchar"
					},
					{
						"name": "NumeroMes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumeroDiaDaSemana",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DiaSemana",
						"type": "varchar"
					},
					{
						"name": "DiaDoAno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NumeroSemanaDoAno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Trimestre",
						"type": "varchar"
					},
					{
						"name": "NumeroTrimestre",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Semestre",
						"type": "varchar"
					},
					{
						"name": "NumeroSemestre",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dw",
					"table": "DIM_DATA"
				},
				"sqlPool": {
					"referenceName": "dwmwe",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dwmwe')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTable5')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "pk_cliente",
						"type": "varchar"
					},
					{
						"name": "estab_idcigam",
						"type": "varchar"
					},
					{
						"name": "cliente_codigo",
						"type": "float",
						"precision": 15
					},
					{
						"name": "cliente_nome",
						"type": "varchar"
					},
					{
						"name": "cliente_cpfcnpj",
						"type": "varchar"
					},
					{
						"name": "cliente_email",
						"type": "varchar"
					},
					{
						"name": "cliente_cidade",
						"type": "varchar"
					},
					{
						"name": "cliente_estado",
						"type": "varchar"
					},
					{
						"name": "cliente_sexo",
						"type": "varchar"
					},
					{
						"name": "cliente_aniversario",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cliente_ddd_celular",
						"type": "varchar"
					},
					{
						"name": "cliente_celular",
						"type": "varchar"
					},
					{
						"name": "cliente_endereco",
						"type": "varchar"
					},
					{
						"name": "cliente_numero",
						"type": "varchar"
					},
					{
						"name": "cliente_complemento",
						"type": "varchar"
					},
					{
						"name": "cliente_bairro",
						"type": "varchar"
					},
					{
						"name": "cliente_cep",
						"type": "varchar"
					},
					{
						"name": "num_matricula",
						"type": "varchar"
					},
					{
						"name": "flag_vigencia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dat_inicio_vigencia",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "dat_final_vigencia",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "temp",
					"table": "cigam_clientes_final"
				},
				"sqlPool": {
					"referenceName": "dwmwe",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dwmwe')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TesteImagem')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOB_IMAGENS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "imagens-materiais"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/BLOB_IMAGENS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexDsTeste')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VtexTeste",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "orders/1100050750047-01",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/VtexTeste')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexJsonOrder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePathRaw": {
						"type": "string"
					},
					"FileNameRaw": {
						"type": "string"
					},
					"FileSystemRaw": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileNameRaw",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePathRaw",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystemRaw",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"list": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"orderId": {
										"type": "string"
									},
									"creationDate": {
										"type": "string"
									},
									"clientName": {
										"type": "string"
									},
									"items": {
										"type": "null"
									},
									"totalValue": {
										"type": "number"
									},
									"paymentNames": {
										"type": "string"
									},
									"status": {
										"type": "string"
									},
									"statusDescription": {
										"type": "string"
									},
									"marketPlaceOrderId": {
										"type": "null"
									},
									"sequence": {
										"type": "string"
									},
									"salesChannel": {
										"type": "string"
									},
									"affiliateId": {
										"type": "string"
									},
									"origin": {
										"type": "string"
									},
									"workflowInErrorState": {
										"type": "boolean"
									},
									"workflowInRetry": {
										"type": "boolean"
									},
									"lastMessageUnread": {
										"type": "string"
									},
									"ShippingEstimatedDate": {
										"type": "null"
									},
									"ShippingEstimatedDateMax": {
										"type": "string"
									},
									"ShippingEstimatedDateMin": {
										"type": "string"
									},
									"orderIsComplete": {
										"type": "boolean"
									},
									"listId": {
										"type": "null"
									},
									"listType": {
										"type": "null"
									},
									"authorizedDate": {
										"type": "string"
									},
									"callCenterOperatorName": {
										"type": "null"
									},
									"totalItems": {
										"type": "integer"
									},
									"currencyCode": {
										"type": "string"
									},
									"hostname": {
										"type": "string"
									},
									"invoiceOutput": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"invoiceInput": {
										"type": "null"
									}
								}
							}
						},
						"facets": {
							"type": "array"
						},
						"paging": {
							"type": "object",
							"properties": {
								"total": {
									"type": "integer"
								},
								"pages": {
									"type": "integer"
								},
								"currentPage": {
									"type": "integer"
								},
								"perPage": {
									"type": "integer"
								}
							}
						},
						"stats": {
							"type": "object",
							"properties": {
								"stats": {
									"type": "object",
									"properties": {
										"totalValue": {
											"type": "object",
											"properties": {
												"Count": {
													"type": "integer"
												},
												"Max": {
													"type": "number"
												},
												"Mean": {
													"type": "number"
												},
												"Min": {
													"type": "number"
												},
												"Missing": {
													"type": "integer"
												},
												"StdDev": {
													"type": "number"
												},
												"Sum": {
													"type": "number"
												},
												"SumOfSquares": {
													"type": "number"
												},
												"Facets": {
													"type": "object"
												}
											}
										},
										"totalItems": {
											"type": "object",
											"properties": {
												"Count": {
													"type": "integer"
												},
												"Max": {
													"type": "number"
												},
												"Mean": {
													"type": "number"
												},
												"Min": {
													"type": "number"
												},
												"Missing": {
													"type": "integer"
												},
												"StdDev": {
													"type": "number"
												},
												"Sum": {
													"type": "number"
												},
												"SumOfSquares": {
													"type": "number"
												},
												"Facets": {
													"type": "object"
												}
											}
										}
									}
								}
							}
						},
						"reportRecordsLimit": {
							"type": "integer"
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"orderId": {
							"type": "string"
						},
						"sequence": {
							"type": "string"
						},
						"marketplaceOrderId": {
							"type": "string"
						},
						"marketplaceServicesEndpoint": {
							"type": "string"
						},
						"sellerOrderId": {
							"type": "string"
						},
						"origin": {
							"type": "string"
						},
						"affiliateId": {
							"type": "string"
						},
						"salesChannel": {
							"type": "string"
						},
						"merchantName": {
							"type": "null"
						},
						"status": {
							"type": "string"
						},
						"statusDescription": {
							"type": "string"
						},
						"value": {
							"type": "integer"
						},
						"creationDate": {
							"type": "string"
						},
						"lastChange": {
							"type": "string"
						},
						"orderGroup": {
							"type": "string"
						},
						"totals": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"value": {
										"type": "integer"
									}
								}
							}
						},
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"uniqueId": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"productId": {
										"type": "string"
									},
									"ean": {
										"type": "string"
									},
									"lockId": {
										"type": "string"
									},
									"itemAttachment": {
										"type": "object",
										"properties": {
											"content": {
												"type": "object"
											},
											"name": {
												"type": "null"
											}
										}
									},
									"attachments": {
										"type": "array"
									},
									"quantity": {
										"type": "integer"
									},
									"seller": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"refId": {
										"type": "string"
									},
									"price": {
										"type": "integer"
									},
									"listPrice": {
										"type": "integer"
									},
									"manualPrice": {
										"type": "null"
									},
									"priceTags": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string"
												},
												"value": {
													"type": "integer"
												},
												"isPercentual": {
													"type": "boolean"
												},
												"identifier": {
													"type": "string"
												},
												"rawValue": {
													"type": "number"
												},
												"rate": {
													"type": "null"
												},
												"jurisCode": {
													"type": "null"
												},
												"jurisType": {
													"type": "null"
												},
												"jurisName": {
													"type": "null"
												}
											}
										}
									},
									"imageUrl": {
										"type": "string"
									},
									"detailUrl": {
										"type": "string"
									},
									"components": {
										"type": "array"
									},
									"bundleItems": {
										"type": "array"
									},
									"params": {
										"type": "array"
									},
									"offerings": {
										"type": "array"
									},
									"sellerSku": {
										"type": "string"
									},
									"priceValidUntil": {
										"type": "null"
									},
									"commission": {
										"type": "integer"
									},
									"tax": {
										"type": "integer"
									},
									"preSaleDate": {
										"type": "null"
									},
									"additionalInfo": {
										"type": "object",
										"properties": {
											"brandName": {
												"type": "string"
											},
											"brandId": {
												"type": "string"
											},
											"categoriesIds": {
												"type": "string"
											},
											"categories": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "integer"
														},
														"name": {
															"type": "string"
														}
													}
												}
											},
											"productClusterId": {
												"type": "string"
											},
											"commercialConditionId": {
												"type": "string"
											},
											"dimension": {
												"type": "object",
												"properties": {
													"cubicweight": {
														"type": "number"
													},
													"height": {
														"type": "number"
													},
													"length": {
														"type": "number"
													},
													"weight": {
														"type": "number"
													},
													"width": {
														"type": "number"
													}
												}
											},
											"offeringInfo": {
												"type": "null"
											},
											"offeringType": {
												"type": "null"
											},
											"offeringTypeId": {
												"type": "null"
											}
										}
									},
									"measurementUnit": {
										"type": "string"
									},
									"unitMultiplier": {
										"type": "number"
									},
									"sellingPrice": {
										"type": "integer"
									},
									"isGift": {
										"type": "boolean"
									},
									"shippingPrice": {
										"type": "null"
									},
									"rewardValue": {
										"type": "integer"
									},
									"freightCommission": {
										"type": "integer"
									},
									"priceDefinitions": {
										"type": "null"
									},
									"taxCode": {
										"type": "string"
									},
									"parentItemIndex": {
										"type": "null"
									},
									"parentAssemblyBinding": {
										"type": "null"
									},
									"callCenterOperator": {
										"type": "null"
									},
									"serialNumbers": {
										"type": "null"
									},
									"assemblies": {
										"type": "array"
									},
									"costPrice": {
										"type": "integer"
									}
								}
							}
						},
						"marketplaceItems": {
							"type": "array"
						},
						"clientProfileData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"firstName": {
									"type": "string"
								},
								"lastName": {
									"type": "string"
								},
								"documentType": {
									"type": "string"
								},
								"document": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"corporateName": {
									"type": "null"
								},
								"tradeName": {
									"type": "null"
								},
								"corporateDocument": {
									"type": "null"
								},
								"stateInscription": {
									"type": "string"
								},
								"corporatePhone": {
									"type": "null"
								},
								"isCorporate": {
									"type": "boolean"
								},
								"userProfileId": {
									"type": "string"
								},
								"customerClass": {
									"type": "null"
								}
							}
						},
						"giftRegistryData": {
							"type": "null"
						},
						"marketingData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"utmSource": {
									"type": "null"
								},
								"utmPartner": {
									"type": "null"
								},
								"utmMedium": {
									"type": "null"
								},
								"utmCampaign": {
									"type": "null"
								},
								"coupon": {
									"type": "string"
								},
								"utmiCampaign": {
									"type": "null"
								},
								"utmipage": {
									"type": "null"
								},
								"utmiPart": {
									"type": "null"
								},
								"marketingTags": {
									"type": "array"
								}
							}
						},
						"ratesAndBenefitsData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"rateAndBenefitsIdentifiers": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"description": {
												"type": "string"
											},
											"featured": {
												"type": "boolean"
											},
											"id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"matchedParameters": {
												"type": "object",
												"properties": {
													"couponCode@Marketing": {
														"type": "string"
													}
												}
											},
											"additionalInfo": {
												"type": "null"
											}
										}
									}
								}
							}
						},
						"shippingData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"address": {
									"type": "object",
									"properties": {
										"addressType": {
											"type": "string"
										},
										"receiverName": {
											"type": "string"
										},
										"addressId": {
											"type": "string"
										},
										"postalCode": {
											"type": "string"
										},
										"city": {
											"type": "string"
										},
										"state": {
											"type": "string"
										},
										"country": {
											"type": "string"
										},
										"street": {
											"type": "string"
										},
										"number": {
											"type": "string"
										},
										"neighborhood": {
											"type": "string"
										},
										"complement": {
											"type": "string"
										},
										"reference": {
											"type": "null"
										},
										"geoCoordinates": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								},
								"logisticsInfo": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"itemIndex": {
												"type": "integer"
											},
											"selectedSla": {
												"type": "string"
											},
											"lockTTL": {
												"type": "string"
											},
											"price": {
												"type": "integer"
											},
											"listPrice": {
												"type": "integer"
											},
											"sellingPrice": {
												"type": "integer"
											},
											"deliveryWindow": {
												"type": "null"
											},
											"deliveryCompany": {
												"type": "string"
											},
											"shippingEstimate": {
												"type": "string"
											},
											"shippingEstimateDate": {
												"type": "null"
											},
											"slas": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"shippingEstimate": {
															"type": "string"
														},
														"deliveryWindow": {
															"type": "null"
														},
														"price": {
															"type": "integer"
														},
														"deliveryChannel": {
															"type": "string"
														},
														"pickupStoreInfo": {
															"type": "object",
															"properties": {
																"additionalInfo": {
																	"type": "null"
																},
																"address": {
																	"type": "null"
																},
																"dockId": {
																	"type": "null"
																},
																"friendlyName": {
																	"type": "null"
																},
																"isPickupStore": {
																	"type": "boolean"
																}
															}
														},
														"polygonName": {
															"type": "null"
														},
														"lockTTL": {
															"type": "string"
														},
														"pickupPointId": {
															"type": "null"
														},
														"transitTime": {
															"type": "string"
														}
													}
												}
											},
											"shipsTo": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"deliveryIds": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"courierId": {
															"type": "string"
														},
														"courierName": {
															"type": "string"
														},
														"dockId": {
															"type": "string"
														},
														"quantity": {
															"type": "integer"
														},
														"warehouseId": {
															"type": "string"
														},
														"accountCarrierName": {
															"type": "string"
														}
													}
												}
											},
											"deliveryChannel": {
												"type": "string"
											},
											"pickupStoreInfo": {
												"type": "object",
												"properties": {
													"additionalInfo": {
														"type": "null"
													},
													"address": {
														"type": "null"
													},
													"dockId": {
														"type": "null"
													},
													"friendlyName": {
														"type": "null"
													},
													"isPickupStore": {
														"type": "boolean"
													}
												}
											},
											"addressId": {
												"type": "string"
											},
											"polygonName": {
												"type": "null"
											},
											"pickupPointId": {
												"type": "null"
											},
											"transitTime": {
												"type": "string"
											}
										}
									}
								},
								"trackingHints": {
									"type": "null"
								},
								"selectedAddresses": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"addressId": {
												"type": "string"
											},
											"addressType": {
												"type": "string"
											},
											"receiverName": {
												"type": "string"
											},
											"street": {
												"type": "string"
											},
											"number": {
												"type": "string"
											},
											"complement": {
												"type": "string"
											},
											"neighborhood": {
												"type": "string"
											},
											"postalCode": {
												"type": "string"
											},
											"city": {
												"type": "string"
											},
											"state": {
												"type": "string"
											},
											"country": {
												"type": "string"
											},
											"reference": {
												"type": "null"
											},
											"geoCoordinates": {
												"type": "array",
												"items": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						},
						"paymentData": {
							"type": "object",
							"properties": {
								"giftCards": {
									"type": "array"
								},
								"transactions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"isActive": {
												"type": "boolean"
											},
											"transactionId": {
												"type": "string"
											},
											"merchantName": {
												"type": "string"
											},
											"payments": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"paymentSystem": {
															"type": "string"
														},
														"paymentSystemName": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														},
														"installments": {
															"type": "integer"
														},
														"referenceValue": {
															"type": "integer"
														},
														"cardHolder": {
															"type": "null"
														},
														"cardNumber": {
															"type": "null"
														},
														"firstDigits": {
															"type": "null"
														},
														"lastDigits": {
															"type": "null"
														},
														"cvv2": {
															"type": "null"
														},
														"expireMonth": {
															"type": "null"
														},
														"expireYear": {
															"type": "null"
														},
														"url": {
															"type": "string"
														},
														"giftCardId": {
															"type": "null"
														},
														"giftCardName": {
															"type": "null"
														},
														"giftCardCaption": {
															"type": "null"
														},
														"redemptionCode": {
															"type": "null"
														},
														"group": {
															"type": "string"
														},
														"tid": {
															"type": "string"
														},
														"dueDate": {
															"type": "null"
														},
														"connectorResponses": {
															"type": "object",
															"properties": {
																"Tid": {
																	"type": "string"
																},
																"ReturnCode": {
																	"type": "null"
																},
																"Message": {
																	"type": "null"
																},
																"nsu": {
																	"type": "string"
																},
																"acquirer": {
																	"type": "string"
																}
															}
														},
														"giftCardProvider": {
															"type": "null"
														},
														"giftCardAsDiscount": {
															"type": "null"
														},
														"koinUrl": {
															"type": "null"
														},
														"accountId": {
															"type": "null"
														},
														"parentAccountId": {
															"type": "null"
														},
														"bankIssuedInvoiceIdentificationNumber": {
															"type": "string"
														},
														"bankIssuedInvoiceIdentificationNumberFormatted": {
															"type": "string"
														},
														"bankIssuedInvoiceBarCodeNumber": {
															"type": "string"
														},
														"bankIssuedInvoiceBarCodeType": {
															"type": "string"
														},
														"billingAddress": {
															"type": "null"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"packageAttachment": {
							"type": "object",
							"properties": {
								"packages": {
									"type": "array"
								}
							}
						},
						"sellers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"logo": {
										"type": "string"
									},
									"fulfillmentEndpoint": {
										"type": "string"
									}
								}
							}
						},
						"callCenterOperatorData": {
							"type": "null"
						},
						"followUpEmail": {
							"type": "string"
						},
						"lastMessage": {
							"type": "null"
						},
						"hostname": {
							"type": "string"
						},
						"invoiceData": {
							"type": "null"
						},
						"changesAttachment": {
							"type": "null"
						},
						"openTextField": {
							"type": "null"
						},
						"roundingError": {
							"type": "integer"
						},
						"orderFormId": {
							"type": "string"
						},
						"commercialConditionData": {
							"type": "null"
						},
						"isCompleted": {
							"type": "boolean"
						},
						"customData": {
							"type": "null"
						},
						"storePreferencesData": {
							"type": "object",
							"properties": {
								"countryCode": {
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"currencyFormatInfo": {
									"type": "object",
									"properties": {
										"CurrencyDecimalDigits": {
											"type": "integer"
										},
										"CurrencyDecimalSeparator": {
											"type": "string"
										},
										"CurrencyGroupSeparator": {
											"type": "string"
										},
										"CurrencyGroupSize": {
											"type": "integer"
										},
										"StartsWithCurrencySymbol": {
											"type": "boolean"
										}
									}
								},
								"currencyLocale": {
									"type": "integer"
								},
								"currencySymbol": {
									"type": "string"
								},
								"timeZone": {
									"type": "string"
								}
							}
						},
						"allowCancellation": {
							"type": "boolean"
						},
						"allowEdition": {
							"type": "boolean"
						},
						"isCheckedIn": {
							"type": "boolean"
						},
						"marketplace": {
							"type": "object",
							"properties": {
								"baseURL": {
									"type": "string"
								},
								"isCertified": {
									"type": "null"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"authorizedDate": {
							"type": "null"
						},
						"invoicedDate": {
							"type": "null"
						},
						"cancelReason": {
							"type": "null"
						},
						"itemMetadata": {
							"type": "object",
							"properties": {
								"Items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Id": {
												"type": "string"
											},
											"Seller": {
												"type": "string"
											},
											"Name": {
												"type": "string"
											},
											"SkuName": {
												"type": "string"
											},
											"ProductId": {
												"type": "string"
											},
											"RefId": {
												"type": "string"
											},
											"Ean": {
												"type": "string"
											},
											"ImageUrl": {
												"type": "string"
											},
											"DetailUrl": {
												"type": "string"
											},
											"AssemblyOptions": {
												"type": "array"
											}
										}
									}
								}
							}
						},
						"subscriptionData": {
							"type": "null"
						},
						"taxData": {
							"type": "null"
						},
						"checkedInPickupPointId": {
							"type": "null"
						},
						"cancellationData": {
							"type": "null"
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderClientParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderClientParquetCleasing')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderItemsParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderItemsParquetCleasing')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderParquetCleasing')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderPaymentParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderPaymentParquetCleansing')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderShippingItemsParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderShippingItemsParquetCleansing')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderShippingParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderShippingParquetCleansing')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderTotalsParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "orderid",
						"type": "UTF8"
					},
					{
						"name": "sequence",
						"type": "UTF8"
					},
					{
						"name": "marketplaceOrderId",
						"type": "UTF8"
					},
					{
						"name": "sellerOrderId",
						"type": "UTF8"
					},
					{
						"name": "origin",
						"type": "UTF8"
					},
					{
						"name": "affiliateId",
						"type": "UTF8"
					},
					{
						"name": "salesChannel",
						"type": "UTF8"
					},
					{
						"name": "merchantName",
						"type": "UTF8"
					},
					{
						"name": "status",
						"type": "UTF8"
					},
					{
						"name": "statusDescription",
						"type": "UTF8"
					},
					{
						"name": "value",
						"type": "UTF8"
					},
					{
						"name": "creationDate",
						"type": "UTF8"
					},
					{
						"name": "orderGroup",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexOrderDetailsOrderTotalsParquetCleansing')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "orderid",
						"type": "UTF8"
					},
					{
						"name": "sequence",
						"type": "UTF8"
					},
					{
						"name": "marketplaceOrderId",
						"type": "UTF8"
					},
					{
						"name": "sellerOrderId",
						"type": "UTF8"
					},
					{
						"name": "origin",
						"type": "UTF8"
					},
					{
						"name": "affiliateId",
						"type": "UTF8"
					},
					{
						"name": "salesChannel",
						"type": "UTF8"
					},
					{
						"name": "merchantName",
						"type": "UTF8"
					},
					{
						"name": "status",
						"type": "UTF8"
					},
					{
						"name": "statusDescription",
						"type": "UTF8"
					},
					{
						"name": "value",
						"type": "UTF8"
					},
					{
						"name": "creationDate",
						"type": "UTF8"
					},
					{
						"name": "orderGroup",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cliente_processado')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "PK_CLIENTE",
						"type": "varchar"
					},
					{
						"name": "ESTAB_IDCIGAM",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CODIGO",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CLIENTE_NOME",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CPFCNPJ",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_EMAIL",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CIDADE",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_ESTADO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_SEXO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_ANIVERSARIO",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CLIENTE_DDD_CELULAR",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CELULAR",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_ENDERECO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_NUMERO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_COMPLEMENTO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_BAIRRO",
						"type": "varchar"
					},
					{
						"name": "CLIENTE_CEP",
						"type": "varchar"
					},
					{
						"name": "NUM_MATRICULA",
						"type": "varchar"
					},
					{
						"name": "DAT_HORA_EXPORTACAO",
						"type": "varchar"
					},
					{
						"name": "TIPO_ACAO",
						"type": "varchar"
					},
					{
						"name": "FLAG_VIGENCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DAT_INICIO_VIGENCIA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DAT_FINAL_VIGENCIA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "temp",
					"table": "CLIENTES_PROCESSAMENTO"
				},
				"sqlPool": {
					"referenceName": "dwmwe",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dwmwe')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_ausp')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_AUSP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"OBJEK": {
										"type": "string"
									},
									"ATINN": {
										"type": "string"
									},
									"ATZHL": {
										"type": "string"
									},
									"MAFID": {
										"type": "string"
									},
									"KLART": {
										"type": "string"
									},
									"ATWRT": {
										"type": "string"
									}
								}
							}
						},
						"E_MENSAGEM": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_konv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_KONV": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"KNUMV": {
										"type": "string"
									},
									"KPOSN": {
										"type": "string"
									},
									"STUNR": {
										"type": "string"
									},
									"ZAEHK": {
										"type": "string"
									},
									"KSCHL": {
										"type": "string"
									},
									"KWERT": {
										"type": "number"
									},
									"KAWRT": {
										"type": "number"
									},
									"KBETR": {
										"type": "number"
									},
									"KSTAT": {
										"type": "string"
									},
									"KDATU": {
										"type": "string"
									},
									"KINAK": {
										"type": "string"
									},
									"VBELN": {
										"type": "string"
									}
								}
							}
						},
						"E_MENSAGEM": {
							"type": "string"
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_marc')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_MARC": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"MATNR": {
										"type": "string"
									},
									"WERKS": {
										"type": "string"
									},
									"MMSTA": {
										"type": "string"
									},
									"LVORM": {
										"type": "string"
									},
									"SOBSK": {
										"type": "string"
									},
									"DISPO": {
										"type": "string"
									},
									"EISBE": {
										"type": "number"
									},
									"PLIFZ": {
										"type": "integer"
									},
									"MRPPP": {
										"type": "string"
									}
								}
							}
						},
						"E_MENSAGEM": {
							"type": "string"
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_vbak')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_MENSAGEM": {
							"type": "string"
						},
						"E_VBAK": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"VBELN": {
										"type": "string"
									},
									"ERDAT": {
										"type": "string"
									},
									"ERNAM": {
										"type": "string"
									},
									"AUDAT": {
										"type": "string"
									},
									"VBTYP": {
										"type": "string"
									},
									"AUART": {
										"type": "string"
									},
									"LIFSK": {
										"type": "string"
									},
									"FAKSK": {
										"type": "string"
									},
									"VKORG": {
										"type": "string"
									},
									"VTWEG": {
										"type": "string"
									},
									"SPART": {
										"type": "string"
									},
									"VKGRP": {
										"type": "string"
									},
									"VKBUR": {
										"type": "string"
									},
									"KNUMV": {
										"type": "string"
									},
									"VDATU": {
										"type": "string"
									},
									"BSARK": {
										"type": "string"
									},
									"KUNNR": {
										"type": "string"
									},
									"AEDAT": {
										"type": "string"
									},
									"KVGR3": {
										"type": "string"
									},
									"BUKRS_VF": {
										"type": "string"
									},
									"ZZCODMOD": {
										"type": "string"
									}
								}
							}
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_vbap')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_MENSAGEM": {
							"type": "string"
						},
						"E_VBAP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"VBELN": {
										"type": "string"
									},
									"POSNR": {
										"type": "string"
									},
									"MATNR": {
										"type": "string"
									},
									"PSTYV": {
										"type": "string"
									},
									"ABGRU": {
										"type": "string"
									},
									"UMZIZ": {
										"type": "integer"
									},
									"UMZIN": {
										"type": "integer"
									},
									"NETWR": {
										"type": "number"
									},
									"KWMENG": {
										"type": "number"
									},
									"VRKME": {
										"type": "string"
									},
									"WERKS": {
										"type": "string"
									},
									"KONDM": {
										"type": "string"
									},
									"MVGR3": {
										"type": "string"
									},
									"J_3ASEAN": {
										"type": "string"
									},
									"_-AFS_-COLLECTION": {
										"type": "string"
									}
								}
							}
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_vbep')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_MENSAGEM": {
							"type": "string"
						},
						"E_VBEP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"VBELN": {
										"type": "string"
									},
									"POSNR": {
										"type": "string"
									},
									"ETENR": {
										"type": "string"
									},
									"WMENG": {
										"type": "number"
									},
									"J_3ASIZE": {
										"type": "string"
									},
									"J_3AABGRU": {
										"type": "string"
									},
									"J_3ASZGR": {
										"type": "string"
									},
									"J_3ANETW": {
										"type": "number"
									}
								}
							}
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_vbpa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FilePath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FileSystem": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_MENSAGEM": {
							"type": "string"
						},
						"E_VBPA": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"VBELN": {
										"type": "string"
									},
									"POSNR": {
										"type": "string"
									},
									"PARVW": {
										"type": "string"
									},
									"LIFNR": {
										"type": "string"
									},
									"PERNR": {
										"type": "string"
									}
								}
							}
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dataset_sapjson_vbrp')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystem": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FilePath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_MENSAGEM": {
							"type": "string"
						},
						"E_VBRP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"VBELN": {
										"type": "string"
									},
									"POSNR": {
										"type": "string"
									},
									"FKIMG": {
										"type": "number"
									},
									"VRKME": {
										"type": "string"
									},
									"FKLMG": {
										"type": "number"
									},
									"NETWR": {
										"type": "number"
									},
									"VGBEL": {
										"type": "string"
									},
									"AUBEL": {
										"type": "string"
									},
									"AUPOS": {
										"type": "string"
									},
									"MATNR": {
										"type": "string"
									},
									"PSTYV": {
										"type": "string"
									},
									"POSPA": {
										"type": "string"
									},
									"WERKS": {
										"type": "string"
									},
									"SKFBP": {
										"type": "number"
									},
									"KONDM": {
										"type": "string"
									},
									"VKGRP": {
										"type": "string"
									},
									"VKBUR": {
										"type": "string"
									},
									"BWTAR": {
										"type": "string"
									},
									"VTWEG_AUFT": {
										"type": "string"
									},
									"MWSBP": {
										"type": "number"
									},
									"J_1BCFOP": {
										"type": "string"
									},
									"BRTWR": {
										"type": "number"
									},
									"J_3AETENR": {
										"type": "string"
									},
									"J_3AVGETE": {
										"type": "string"
									},
									"J_3ASZGR": {
										"type": "string"
									},
									"J_3ASEAN": {
										"type": "string"
									},
									"_-AFS_-COLLECTION": {
										"type": "string"
									},
									"J_3ASIZE": {
										"type": "string"
									},
									"J_3APGNR": {
										"type": "string"
									}
								}
							}
						},
						"DATA_HORA_EXPORTACAO": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/destino_sap_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "VBAP.parquet",
						"folderPath": "brazil/transacional/saptable/saprest/vbap",
						"fileSystem": "cleansing"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_data_csv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DIM_CALENDARIO.csv",
						"folderPath": "cigam",
						"fileSystem": "cleasing"
					},
					"columnDelimiter": ";",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "IdData;Ano;AnoMes;AnoMesDia;Data;Dia;Mes;MesAnoDesc;NumeroMes;NumeroDiaDaSemana;DiaSemana;DiaDoAno;NumeroSemanaDoAno;Trimestre;NumeroTrimestre;Semestre;NumeroSemestre",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/order_payment')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Vtex_payment.parquet",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "orderId",
						"type": "UTF8"
					},
					{
						"name": "brandName",
						"type": "UTF8"
					},
					{
						"name": "brandId",
						"type": "UTF8"
					},
					{
						"name": "categoriesid",
						"type": "UTF8"
					},
					{
						"name": "categoriesname",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/orderjson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order_.json",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"list": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"orderId": {
										"type": "string"
									},
									"creationDate": {
										"type": "string"
									},
									"clientName": {
										"type": "string"
									},
									"items": {
										"type": "null"
									},
									"totalValue": {
										"type": "number"
									},
									"paymentNames": {
										"type": "string"
									},
									"status": {
										"type": "string"
									},
									"statusDescription": {
										"type": "string"
									},
									"marketPlaceOrderId": {
										"type": "null"
									},
									"sequence": {
										"type": "string"
									},
									"salesChannel": {
										"type": "string"
									},
									"affiliateId": {
										"type": "string"
									},
									"origin": {
										"type": "string"
									},
									"workflowInErrorState": {
										"type": "boolean"
									},
									"workflowInRetry": {
										"type": "boolean"
									},
									"lastMessageUnread": {
										"type": "string"
									},
									"ShippingEstimatedDate": {
										"type": "null"
									},
									"ShippingEstimatedDateMax": {
										"type": "string"
									},
									"ShippingEstimatedDateMin": {
										"type": "string"
									},
									"orderIsComplete": {
										"type": "boolean"
									},
									"listId": {
										"type": "null"
									},
									"listType": {
										"type": "null"
									},
									"authorizedDate": {
										"type": "string"
									},
									"callCenterOperatorName": {
										"type": "null"
									},
									"totalItems": {
										"type": "integer"
									},
									"currencyCode": {
										"type": "string"
									},
									"hostname": {
										"type": "string"
									},
									"invoiceOutput": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"invoiceInput": {
										"type": "null"
									}
								}
							}
						},
						"facets": {
							"type": "array"
						},
						"paging": {
							"type": "object",
							"properties": {
								"total": {
									"type": "integer"
								},
								"pages": {
									"type": "integer"
								},
								"currentPage": {
									"type": "integer"
								},
								"perPage": {
									"type": "integer"
								}
							}
						},
						"stats": {
							"type": "object",
							"properties": {
								"stats": {
									"type": "object",
									"properties": {
										"totalValue": {
											"type": "object",
											"properties": {
												"Count": {
													"type": "integer"
												},
												"Max": {
													"type": "number"
												},
												"Mean": {
													"type": "number"
												},
												"Min": {
													"type": "number"
												},
												"Missing": {
													"type": "integer"
												},
												"StdDev": {
													"type": "number"
												},
												"Sum": {
													"type": "number"
												},
												"SumOfSquares": {
													"type": "number"
												},
												"Facets": {
													"type": "object"
												}
											}
										},
										"totalItems": {
											"type": "object",
											"properties": {
												"Count": {
													"type": "integer"
												},
												"Max": {
													"type": "number"
												},
												"Mean": {
													"type": "number"
												},
												"Min": {
													"type": "number"
												},
												"Missing": {
													"type": "integer"
												},
												"StdDev": {
													"type": "number"
												},
												"Sum": {
													"type": "number"
												},
												"SumOfSquares": {
													"type": "number"
												},
												"Facets": {
													"type": "object"
												}
											}
										}
									}
								}
							}
						},
						"reportRecordsLimit": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/origem_sap_jason')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "VBAP.json",
						"folderPath": "brazil/transacional/saprest/vbap",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"E_MENSAGEM": {
							"type": "string"
						},
						"E_VBAP": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"VBELN": {
										"type": "string"
									},
									"POSNR": {
										"type": "string"
									},
									"MATNR": {
										"type": "string"
									},
									"PSTYV": {
										"type": "string"
									},
									"UMZIZ": {
										"type": "integer"
									},
									"UMZIN": {
										"type": "integer"
									},
									"NETWR": {
										"type": "number"
									},
									"KWMENG": {
										"type": "number"
									},
									"VRKME": {
										"type": "string"
									},
									"WERKS": {
										"type": "string"
									},
									"J_3ASEAN": {
										"type": "string"
									},
									"_-AFS_-COLLECTION": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sap_destino_json')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "VBAP.json",
						"folderPath": "brazil/transacional/saprest/vbap",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/testeimagemdesino')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex.parquet",
						"folderPath": "imagens",
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexOrder_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_order.parquet",
						"folderPath": "brazil/vtex/Order/2021/",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtex_order_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "VtextOrderpayment.parquet",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "orderId",
						"type": "UTF8"
					},
					{
						"name": "uniqueId",
						"type": "UTF8"
					},
					{
						"name": "IdItem",
						"type": "UTF8"
					},
					{
						"name": "productId",
						"type": "UTF8"
					},
					{
						"name": "ean",
						"type": "UTF8"
					},
					{
						"name": "lockId",
						"type": "UTF8"
					},
					{
						"name": "quantity",
						"type": "INT32"
					},
					{
						"name": "seller",
						"type": "UTF8"
					},
					{
						"name": "nameItem",
						"type": "UTF8"
					},
					{
						"name": "refId",
						"type": "UTF8"
					},
					{
						"name": "price",
						"type": "INT32"
					},
					{
						"name": "listPrice",
						"type": "INT32"
					},
					{
						"name": "imageUrl",
						"type": "UTF8"
					},
					{
						"name": "brandName",
						"type": "UTF8"
					},
					{
						"name": "brandId",
						"type": "UTF8"
					},
					{
						"name": "categoriesIds",
						"type": "UTF8"
					},
					{
						"name": "IdCategory",
						"type": "INT64"
					},
					{
						"name": "nameCategory",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "firstName",
						"type": "UTF8"
					},
					{
						"name": "lastName",
						"type": "UTF8"
					},
					{
						"name": "documentType",
						"type": "UTF8"
					},
					{
						"name": "document",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "addressType",
						"type": "UTF8"
					},
					{
						"name": "receiverName",
						"type": "UTF8"
					},
					{
						"name": "addressId",
						"type": "UTF8"
					},
					{
						"name": "postalCode",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "street",
						"type": "UTF8"
					},
					{
						"name": "number",
						"type": "UTF8"
					},
					{
						"name": "neighborhood",
						"type": "UTF8"
					},
					{
						"name": "complement",
						"type": "UTF8"
					},
					{
						"name": "reference",
						"type": "UTF8"
					},
					{
						"name": "geoCoordinates",
						"type": "UTF8"
					},
					{
						"name": "itemIndex",
						"type": "INT32"
					},
					{
						"name": "selectedSla",
						"type": "UTF8"
					},
					{
						"name": "lockTTL",
						"type": "UTF8"
					},
					{
						"name": "priceLogistics",
						"type": "INT32"
					},
					{
						"name": "listPriceLogistics",
						"type": "INT32"
					},
					{
						"name": "sellingPrice",
						"type": "INT32"
					},
					{
						"name": "deliveryWindow",
						"type": "UTF8"
					},
					{
						"name": "deliveryCompany",
						"type": "UTF8"
					},
					{
						"name": "shippingEstimate",
						"type": "UTF8"
					},
					{
						"name": "shippingEstimateDate",
						"type": "UTF8"
					},
					{
						"name": "deliveryChannel",
						"type": "UTF8"
					},
					{
						"name": "paymentSystem",
						"type": "UTF8"
					},
					{
						"name": "paymentSystemName",
						"type": "UTF8"
					},
					{
						"name": "value",
						"type": "INT32"
					},
					{
						"name": "installments",
						"type": "INT32"
					},
					{
						"name": "referenceValue",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtex_total_order_page_total')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_order_page_total.parquet",
						"folderPath": "brazil/vtex/vtex_order_page_total/",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexclient_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_client.parquet",
						"folderPath": "brazil/vtex/Client/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexitems_categories_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_items_categorias.parquet",
						"folderPath": "brazil/vtex/ItemsCategories/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexitems_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_items.parquet",
						"folderPath": "brazil/vtex/Items/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexj_order')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order.json",
						"folderPath": "brazil/vtex",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"orderId": {
							"type": "string"
						},
						"sequence": {
							"type": "string"
						},
						"marketplaceOrderId": {
							"type": "string"
						},
						"marketplaceServicesEndpoint": {
							"type": "string"
						},
						"sellerOrderId": {
							"type": "string"
						},
						"origin": {
							"type": "string"
						},
						"affiliateId": {
							"type": "string"
						},
						"salesChannel": {
							"type": "string"
						},
						"merchantName": {
							"type": "null"
						},
						"status": {
							"type": "string"
						},
						"statusDescription": {
							"type": "string"
						},
						"value": {
							"type": "integer"
						},
						"creationDate": {
							"type": "string"
						},
						"lastChange": {
							"type": "string"
						},
						"orderGroup": {
							"type": "string"
						},
						"totals": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"value": {
										"type": "integer"
									}
								}
							}
						},
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"uniqueId": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"productId": {
										"type": "string"
									},
									"ean": {
										"type": "string"
									},
									"lockId": {
										"type": "string"
									},
									"itemAttachment": {
										"type": "object",
										"properties": {
											"content": {
												"type": "object"
											},
											"name": {
												"type": "null"
											}
										}
									},
									"attachments": {
										"type": "array"
									},
									"quantity": {
										"type": "integer"
									},
									"seller": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"refId": {
										"type": "string"
									},
									"price": {
										"type": "integer"
									},
									"listPrice": {
										"type": "integer"
									},
									"manualPrice": {
										"type": "null"
									},
									"priceTags": {
										"type": "array"
									},
									"imageUrl": {
										"type": "string"
									},
									"detailUrl": {
										"type": "string"
									},
									"components": {
										"type": "array"
									},
									"bundleItems": {
										"type": "array"
									},
									"params": {
										"type": "array"
									},
									"offerings": {
										"type": "array"
									},
									"sellerSku": {
										"type": "string"
									},
									"priceValidUntil": {
										"type": "null"
									},
									"commission": {
										"type": "integer"
									},
									"tax": {
										"type": "integer"
									},
									"preSaleDate": {
										"type": "string"
									},
									"additionalInfo": {
										"type": "object",
										"properties": {
											"brandName": {
												"type": "string"
											},
											"brandId": {
												"type": "string"
											},
											"categoriesIds": {
												"type": "string"
											},
											"categories": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "integer"
														},
														"name": {
															"type": "string"
														}
													}
												}
											},
											"productClusterId": {
												"type": "string"
											},
											"commercialConditionId": {
												"type": "string"
											},
											"dimension": {
												"type": "object",
												"properties": {
													"cubicweight": {
														"type": "number"
													},
													"height": {
														"type": "number"
													},
													"length": {
														"type": "number"
													},
													"weight": {
														"type": "number"
													},
													"width": {
														"type": "number"
													}
												}
											},
											"offeringInfo": {
												"type": "null"
											},
											"offeringType": {
												"type": "null"
											},
											"offeringTypeId": {
												"type": "null"
											}
										}
									},
									"measurementUnit": {
										"type": "string"
									},
									"unitMultiplier": {
										"type": "number"
									},
									"sellingPrice": {
										"type": "integer"
									},
									"isGift": {
										"type": "boolean"
									},
									"shippingPrice": {
										"type": "null"
									},
									"rewardValue": {
										"type": "integer"
									},
									"freightCommission": {
										"type": "integer"
									},
									"priceDefinitions": {
										"type": "null"
									},
									"taxCode": {
										"type": "null"
									},
									"parentItemIndex": {
										"type": "null"
									},
									"parentAssemblyBinding": {
										"type": "null"
									},
									"callCenterOperator": {
										"type": "null"
									},
									"serialNumbers": {
										"type": "null"
									},
									"assemblies": {
										"type": "array"
									},
									"costPrice": {
										"type": "integer"
									}
								}
							}
						},
						"marketplaceItems": {
							"type": "array"
						},
						"clientProfileData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"firstName": {
									"type": "string"
								},
								"lastName": {
									"type": "string"
								},
								"documentType": {
									"type": "string"
								},
								"document": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"corporateName": {
									"type": "null"
								},
								"tradeName": {
									"type": "null"
								},
								"corporateDocument": {
									"type": "null"
								},
								"stateInscription": {
									"type": "null"
								},
								"corporatePhone": {
									"type": "null"
								},
								"isCorporate": {
									"type": "boolean"
								},
								"userProfileId": {
									"type": "string"
								},
								"customerClass": {
									"type": "null"
								}
							}
						},
						"giftRegistryData": {
							"type": "null"
						},
						"marketingData": {
							"type": "null"
						},
						"ratesAndBenefitsData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"rateAndBenefitsIdentifiers": {
									"type": "array"
								}
							}
						},
						"shippingData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"address": {
									"type": "object",
									"properties": {
										"addressType": {
											"type": "string"
										},
										"receiverName": {
											"type": "string"
										},
										"addressId": {
											"type": "string"
										},
										"postalCode": {
											"type": "string"
										},
										"city": {
											"type": "string"
										},
										"state": {
											"type": "string"
										},
										"country": {
											"type": "string"
										},
										"street": {
											"type": "string"
										},
										"number": {
											"type": "string"
										},
										"neighborhood": {
											"type": "string"
										},
										"complement": {
											"type": "null"
										},
										"reference": {
											"type": "null"
										},
										"geoCoordinates": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								},
								"logisticsInfo": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"itemIndex": {
												"type": "integer"
											},
											"selectedSla": {
												"type": "string"
											},
											"lockTTL": {
												"type": "string"
											},
											"price": {
												"type": "integer"
											},
											"listPrice": {
												"type": "integer"
											},
											"sellingPrice": {
												"type": "integer"
											},
											"deliveryWindow": {
												"type": "null"
											},
											"deliveryCompany": {
												"type": "string"
											},
											"shippingEstimate": {
												"type": "string"
											},
											"shippingEstimateDate": {
												"type": "string"
											},
											"slas": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"shippingEstimate": {
															"type": "string"
														},
														"deliveryWindow": {
															"type": "null"
														},
														"price": {
															"type": "integer"
														},
														"deliveryChannel": {
															"type": "string"
														},
														"pickupStoreInfo": {
															"type": "object",
															"properties": {
																"additionalInfo": {
																	"type": "null"
																},
																"address": {
																	"type": "null"
																},
																"dockId": {
																	"type": "null"
																},
																"friendlyName": {
																	"type": "null"
																},
																"isPickupStore": {
																	"type": "boolean"
																}
															}
														},
														"polygonName": {
															"type": "null"
														},
														"lockTTL": {
															"type": "string"
														},
														"pickupPointId": {
															"type": "null"
														},
														"transitTime": {
															"type": "string"
														}
													}
												}
											},
											"shipsTo": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"deliveryIds": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"courierId": {
															"type": "string"
														},
														"courierName": {
															"type": "string"
														},
														"dockId": {
															"type": "string"
														},
														"quantity": {
															"type": "integer"
														},
														"warehouseId": {
															"type": "string"
														},
														"accountCarrierName": {
															"type": "null"
														}
													}
												}
											},
											"deliveryChannel": {
												"type": "string"
											},
											"pickupStoreInfo": {
												"type": "object",
												"properties": {
													"additionalInfo": {
														"type": "null"
													},
													"address": {
														"type": "null"
													},
													"dockId": {
														"type": "null"
													},
													"friendlyName": {
														"type": "null"
													},
													"isPickupStore": {
														"type": "boolean"
													}
												}
											},
											"addressId": {
												"type": "string"
											},
											"polygonName": {
												"type": "null"
											},
											"pickupPointId": {
												"type": "null"
											},
											"transitTime": {
												"type": "string"
											}
										}
									}
								},
								"trackingHints": {
									"type": "null"
								},
								"selectedAddresses": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"addressId": {
												"type": "string"
											},
											"addressType": {
												"type": "string"
											},
											"receiverName": {
												"type": "string"
											},
											"street": {
												"type": "string"
											},
											"number": {
												"type": "string"
											},
											"complement": {
												"type": "null"
											},
											"neighborhood": {
												"type": "string"
											},
											"postalCode": {
												"type": "string"
											},
											"city": {
												"type": "string"
											},
											"state": {
												"type": "string"
											},
											"country": {
												"type": "string"
											},
											"reference": {
												"type": "null"
											},
											"geoCoordinates": {
												"type": "array",
												"items": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						},
						"paymentData": {
							"type": "object",
							"properties": {
								"giftCards": {
									"type": "array"
								},
								"transactions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"isActive": {
												"type": "boolean"
											},
											"transactionId": {
												"type": "string"
											},
											"merchantName": {
												"type": "string"
											},
											"payments": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"paymentSystem": {
															"type": "string"
														},
														"paymentSystemName": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														},
														"installments": {
															"type": "integer"
														},
														"referenceValue": {
															"type": "integer"
														},
														"cardHolder": {
															"type": "null"
														},
														"cardNumber": {
															"type": "null"
														},
														"firstDigits": {
															"type": "string"
														},
														"lastDigits": {
															"type": "string"
														},
														"cvv2": {
															"type": "null"
														},
														"expireMonth": {
															"type": "null"
														},
														"expireYear": {
															"type": "null"
														},
														"url": {
															"type": "null"
														},
														"giftCardId": {
															"type": "null"
														},
														"giftCardName": {
															"type": "null"
														},
														"giftCardCaption": {
															"type": "null"
														},
														"redemptionCode": {
															"type": "null"
														},
														"group": {
															"type": "string"
														},
														"tid": {
															"type": "string"
														},
														"dueDate": {
															"type": "null"
														},
														"connectorResponses": {
															"type": "object",
															"properties": {
																"Tid": {
																	"type": "string"
																},
																"ReturnCode": {
																	"type": "null"
																},
																"Message": {
																	"type": "null"
																},
																"authId": {
																	"type": "string"
																},
																"nsu": {
																	"type": "string"
																},
																"acquirer": {
																	"type": "string"
																}
															}
														},
														"giftCardProvider": {
															"type": "null"
														},
														"giftCardAsDiscount": {
															"type": "null"
														},
														"koinUrl": {
															"type": "null"
														},
														"accountId": {
															"type": "string"
														},
														"parentAccountId": {
															"type": "string"
														},
														"bankIssuedInvoiceIdentificationNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceIdentificationNumberFormatted": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeType": {
															"type": "null"
														},
														"billingAddress": {
															"type": "object",
															"properties": {
																"postalCode": {
																	"type": "string"
																},
																"city": {
																	"type": "string"
																},
																"state": {
																	"type": "string"
																},
																"country": {
																	"type": "string"
																},
																"street": {
																	"type": "string"
																},
																"number": {
																	"type": "string"
																},
																"neighborhood": {
																	"type": "string"
																},
																"complement": {
																	"type": "null"
																},
																"reference": {
																	"type": "null"
																},
																"geoCoordinates": {
																	"type": "array",
																	"items": {
																		"type": "number"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"packageAttachment": {
							"type": "object",
							"properties": {
								"packages": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"items": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"itemIndex": {
															"type": "integer"
														},
														"quantity": {
															"type": "integer"
														},
														"price": {
															"type": "integer"
														},
														"description": {
															"type": "null"
														},
														"unitMultiplier": {
															"type": "number"
														}
													}
												}
											},
											"courier": {
												"type": "string"
											},
											"invoiceNumber": {
												"type": "string"
											},
											"invoiceValue": {
												"type": "integer"
											},
											"invoiceUrl": {
												"type": "null"
											},
											"issuanceDate": {
												"type": "string"
											},
											"trackingNumber": {
												"type": "string"
											},
											"invoiceKey": {
												"type": "string"
											},
											"trackingUrl": {
												"type": "string"
											},
											"embeddedInvoice": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"courierStatus": {
												"type": "object",
												"properties": {
													"status": {
														"type": "string"
													},
													"finished": {
														"type": "boolean"
													},
													"deliveredDate": {
														"type": "null"
													},
													"data": {
														"type": "array"
													}
												}
											},
											"cfop": {
												"type": "null"
											},
											"restitutions": {
												"type": "object"
											},
											"volumes": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"sellers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"logo": {
										"type": "string"
									},
									"fulfillmentEndpoint": {
										"type": "string"
									}
								}
							}
						},
						"callCenterOperatorData": {
							"type": "null"
						},
						"followUpEmail": {
							"type": "string"
						},
						"lastMessage": {
							"type": "null"
						},
						"hostname": {
							"type": "string"
						},
						"invoiceData": {
							"type": "null"
						},
						"changesAttachment": {
							"type": "null"
						},
						"openTextField": {
							"type": "null"
						},
						"roundingError": {
							"type": "integer"
						},
						"orderFormId": {
							"type": "string"
						},
						"commercialConditionData": {
							"type": "null"
						},
						"isCompleted": {
							"type": "boolean"
						},
						"customData": {
							"type": "null"
						},
						"storePreferencesData": {
							"type": "object",
							"properties": {
								"countryCode": {
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"currencyFormatInfo": {
									"type": "object",
									"properties": {
										"CurrencyDecimalDigits": {
											"type": "integer"
										},
										"CurrencyDecimalSeparator": {
											"type": "string"
										},
										"CurrencyGroupSeparator": {
											"type": "string"
										},
										"CurrencyGroupSize": {
											"type": "integer"
										},
										"StartsWithCurrencySymbol": {
											"type": "boolean"
										}
									}
								},
								"currencyLocale": {
									"type": "integer"
								},
								"currencySymbol": {
									"type": "string"
								},
								"timeZone": {
									"type": "string"
								}
							}
						},
						"allowCancellation": {
							"type": "boolean"
						},
						"allowEdition": {
							"type": "boolean"
						},
						"isCheckedIn": {
							"type": "boolean"
						},
						"marketplace": {
							"type": "object",
							"properties": {
								"baseURL": {
									"type": "string"
								},
								"isCertified": {
									"type": "null"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"authorizedDate": {
							"type": "string"
						},
						"invoicedDate": {
							"type": "string"
						},
						"cancelReason": {
							"type": "null"
						},
						"itemMetadata": {
							"type": "object",
							"properties": {
								"Items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Id": {
												"type": "string"
											},
											"Seller": {
												"type": "string"
											},
											"Name": {
												"type": "string"
											},
											"SkuName": {
												"type": "string"
											},
											"ProductId": {
												"type": "string"
											},
											"RefId": {
												"type": "string"
											},
											"Ean": {
												"type": "string"
											},
											"ImageUrl": {
												"type": "string"
											},
											"DetailUrl": {
												"type": "string"
											},
											"AssemblyOptions": {
												"type": "array"
											}
										}
									}
								}
							}
						},
						"subscriptionData": {
							"type": "null"
						},
						"taxData": {
							"type": "null"
						},
						"checkedInPickupPointId": {
							"type": "null"
						},
						"cancellationData": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexj_order_total')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order_total.json",
						"folderPath": "brazil/vtex/1100050750047-01/",
						"fileSystem": "raw"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"orderId": {
							"type": "string"
						},
						"sequence": {
							"type": "string"
						},
						"marketplaceOrderId": {
							"type": "string"
						},
						"marketplaceServicesEndpoint": {
							"type": "string"
						},
						"sellerOrderId": {
							"type": "string"
						},
						"origin": {
							"type": "string"
						},
						"affiliateId": {
							"type": "string"
						},
						"salesChannel": {
							"type": "string"
						},
						"merchantName": {
							"type": "null"
						},
						"status": {
							"type": "string"
						},
						"statusDescription": {
							"type": "string"
						},
						"value": {
							"type": "integer"
						},
						"creationDate": {
							"type": "string"
						},
						"lastChange": {
							"type": "string"
						},
						"orderGroup": {
							"type": "string"
						},
						"totals": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"value": {
										"type": "integer"
									}
								}
							}
						},
						"items": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"uniqueId": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"productId": {
										"type": "string"
									},
									"ean": {
										"type": "string"
									},
									"lockId": {
										"type": "string"
									},
									"itemAttachment": {
										"type": "object",
										"properties": {
											"content": {
												"type": "object"
											},
											"name": {
												"type": "null"
											}
										}
									},
									"attachments": {
										"type": "array"
									},
									"quantity": {
										"type": "integer"
									},
									"seller": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"refId": {
										"type": "string"
									},
									"price": {
										"type": "integer"
									},
									"listPrice": {
										"type": "integer"
									},
									"manualPrice": {
										"type": "null"
									},
									"priceTags": {
										"type": "array"
									},
									"imageUrl": {
										"type": "string"
									},
									"detailUrl": {
										"type": "string"
									},
									"components": {
										"type": "array"
									},
									"bundleItems": {
										"type": "array"
									},
									"params": {
										"type": "array"
									},
									"offerings": {
										"type": "array"
									},
									"sellerSku": {
										"type": "string"
									},
									"priceValidUntil": {
										"type": "null"
									},
									"commission": {
										"type": "integer"
									},
									"tax": {
										"type": "integer"
									},
									"preSaleDate": {
										"type": "string"
									},
									"additionalInfo": {
										"type": "object",
										"properties": {
											"brandName": {
												"type": "string"
											},
											"brandId": {
												"type": "string"
											},
											"categoriesIds": {
												"type": "string"
											},
											"categories": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "integer"
														},
														"name": {
															"type": "string"
														}
													}
												}
											},
											"productClusterId": {
												"type": "string"
											},
											"commercialConditionId": {
												"type": "string"
											},
											"dimension": {
												"type": "object",
												"properties": {
													"cubicweight": {
														"type": "number"
													},
													"height": {
														"type": "number"
													},
													"length": {
														"type": "number"
													},
													"weight": {
														"type": "number"
													},
													"width": {
														"type": "number"
													}
												}
											},
											"offeringInfo": {
												"type": "null"
											},
											"offeringType": {
												"type": "null"
											},
											"offeringTypeId": {
												"type": "null"
											}
										}
									},
									"measurementUnit": {
										"type": "string"
									},
									"unitMultiplier": {
										"type": "number"
									},
									"sellingPrice": {
										"type": "integer"
									},
									"isGift": {
										"type": "boolean"
									},
									"shippingPrice": {
										"type": "null"
									},
									"rewardValue": {
										"type": "integer"
									},
									"freightCommission": {
										"type": "integer"
									},
									"priceDefinitions": {
										"type": "null"
									},
									"taxCode": {
										"type": "null"
									},
									"parentItemIndex": {
										"type": "null"
									},
									"parentAssemblyBinding": {
										"type": "null"
									},
									"callCenterOperator": {
										"type": "null"
									},
									"serialNumbers": {
										"type": "null"
									},
									"assemblies": {
										"type": "array"
									},
									"costPrice": {
										"type": "integer"
									}
								}
							}
						},
						"marketplaceItems": {
							"type": "array"
						},
						"clientProfileData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"firstName": {
									"type": "string"
								},
								"lastName": {
									"type": "string"
								},
								"documentType": {
									"type": "string"
								},
								"document": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"corporateName": {
									"type": "null"
								},
								"tradeName": {
									"type": "null"
								},
								"corporateDocument": {
									"type": "null"
								},
								"stateInscription": {
									"type": "null"
								},
								"corporatePhone": {
									"type": "null"
								},
								"isCorporate": {
									"type": "boolean"
								},
								"userProfileId": {
									"type": "string"
								},
								"customerClass": {
									"type": "null"
								}
							}
						},
						"giftRegistryData": {
							"type": "null"
						},
						"marketingData": {
							"type": "null"
						},
						"ratesAndBenefitsData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"rateAndBenefitsIdentifiers": {
									"type": "array"
								}
							}
						},
						"shippingData": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"address": {
									"type": "object",
									"properties": {
										"addressType": {
											"type": "string"
										},
										"receiverName": {
											"type": "string"
										},
										"addressId": {
											"type": "string"
										},
										"postalCode": {
											"type": "string"
										},
										"city": {
											"type": "string"
										},
										"state": {
											"type": "string"
										},
										"country": {
											"type": "string"
										},
										"street": {
											"type": "string"
										},
										"number": {
											"type": "string"
										},
										"neighborhood": {
											"type": "string"
										},
										"complement": {
											"type": "null"
										},
										"reference": {
											"type": "null"
										},
										"geoCoordinates": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									}
								},
								"logisticsInfo": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"itemIndex": {
												"type": "integer"
											},
											"selectedSla": {
												"type": "string"
											},
											"lockTTL": {
												"type": "string"
											},
											"price": {
												"type": "integer"
											},
											"listPrice": {
												"type": "integer"
											},
											"sellingPrice": {
												"type": "integer"
											},
											"deliveryWindow": {
												"type": "null"
											},
											"deliveryCompany": {
												"type": "string"
											},
											"shippingEstimate": {
												"type": "string"
											},
											"shippingEstimateDate": {
												"type": "string"
											},
											"slas": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"shippingEstimate": {
															"type": "string"
														},
														"deliveryWindow": {
															"type": "null"
														},
														"price": {
															"type": "integer"
														},
														"deliveryChannel": {
															"type": "string"
														},
														"pickupStoreInfo": {
															"type": "object",
															"properties": {
																"additionalInfo": {
																	"type": "null"
																},
																"address": {
																	"type": "null"
																},
																"dockId": {
																	"type": "null"
																},
																"friendlyName": {
																	"type": "null"
																},
																"isPickupStore": {
																	"type": "boolean"
																}
															}
														},
														"polygonName": {
															"type": "null"
														},
														"lockTTL": {
															"type": "string"
														},
														"pickupPointId": {
															"type": "null"
														},
														"transitTime": {
															"type": "string"
														}
													}
												}
											},
											"shipsTo": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"deliveryIds": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"courierId": {
															"type": "string"
														},
														"courierName": {
															"type": "string"
														},
														"dockId": {
															"type": "string"
														},
														"quantity": {
															"type": "integer"
														},
														"warehouseId": {
															"type": "string"
														},
														"accountCarrierName": {
															"type": "null"
														}
													}
												}
											},
											"deliveryChannel": {
												"type": "string"
											},
											"pickupStoreInfo": {
												"type": "object",
												"properties": {
													"additionalInfo": {
														"type": "null"
													},
													"address": {
														"type": "null"
													},
													"dockId": {
														"type": "null"
													},
													"friendlyName": {
														"type": "null"
													},
													"isPickupStore": {
														"type": "boolean"
													}
												}
											},
											"addressId": {
												"type": "string"
											},
											"polygonName": {
												"type": "null"
											},
											"pickupPointId": {
												"type": "null"
											},
											"transitTime": {
												"type": "string"
											}
										}
									}
								},
								"trackingHints": {
									"type": "null"
								},
								"selectedAddresses": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"addressId": {
												"type": "string"
											},
											"addressType": {
												"type": "string"
											},
											"receiverName": {
												"type": "string"
											},
											"street": {
												"type": "string"
											},
											"number": {
												"type": "string"
											},
											"complement": {
												"type": "null"
											},
											"neighborhood": {
												"type": "string"
											},
											"postalCode": {
												"type": "string"
											},
											"city": {
												"type": "string"
											},
											"state": {
												"type": "string"
											},
											"country": {
												"type": "string"
											},
											"reference": {
												"type": "null"
											},
											"geoCoordinates": {
												"type": "array",
												"items": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						},
						"paymentData": {
							"type": "object",
							"properties": {
								"giftCards": {
									"type": "array"
								},
								"transactions": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"isActive": {
												"type": "boolean"
											},
											"transactionId": {
												"type": "string"
											},
											"merchantName": {
												"type": "string"
											},
											"payments": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														},
														"paymentSystem": {
															"type": "string"
														},
														"paymentSystemName": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														},
														"installments": {
															"type": "integer"
														},
														"referenceValue": {
															"type": "integer"
														},
														"cardHolder": {
															"type": "null"
														},
														"cardNumber": {
															"type": "null"
														},
														"firstDigits": {
															"type": "string"
														},
														"lastDigits": {
															"type": "string"
														},
														"cvv2": {
															"type": "null"
														},
														"expireMonth": {
															"type": "null"
														},
														"expireYear": {
															"type": "null"
														},
														"url": {
															"type": "null"
														},
														"giftCardId": {
															"type": "null"
														},
														"giftCardName": {
															"type": "null"
														},
														"giftCardCaption": {
															"type": "null"
														},
														"redemptionCode": {
															"type": "null"
														},
														"group": {
															"type": "string"
														},
														"tid": {
															"type": "string"
														},
														"dueDate": {
															"type": "null"
														},
														"connectorResponses": {
															"type": "object",
															"properties": {
																"Tid": {
																	"type": "string"
																},
																"ReturnCode": {
																	"type": "null"
																},
																"Message": {
																	"type": "null"
																},
																"authId": {
																	"type": "string"
																},
																"nsu": {
																	"type": "string"
																},
																"acquirer": {
																	"type": "string"
																}
															}
														},
														"giftCardProvider": {
															"type": "null"
														},
														"giftCardAsDiscount": {
															"type": "null"
														},
														"koinUrl": {
															"type": "null"
														},
														"accountId": {
															"type": "string"
														},
														"parentAccountId": {
															"type": "string"
														},
														"bankIssuedInvoiceIdentificationNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceIdentificationNumberFormatted": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeNumber": {
															"type": "null"
														},
														"bankIssuedInvoiceBarCodeType": {
															"type": "null"
														},
														"billingAddress": {
															"type": "object",
															"properties": {
																"postalCode": {
																	"type": "string"
																},
																"city": {
																	"type": "string"
																},
																"state": {
																	"type": "string"
																},
																"country": {
																	"type": "string"
																},
																"street": {
																	"type": "string"
																},
																"number": {
																	"type": "string"
																},
																"neighborhood": {
																	"type": "string"
																},
																"complement": {
																	"type": "null"
																},
																"reference": {
																	"type": "null"
																},
																"geoCoordinates": {
																	"type": "array",
																	"items": {
																		"type": "number"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"packageAttachment": {
							"type": "object",
							"properties": {
								"packages": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"items": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"itemIndex": {
															"type": "integer"
														},
														"quantity": {
															"type": "integer"
														},
														"price": {
															"type": "integer"
														},
														"description": {
															"type": "null"
														},
														"unitMultiplier": {
															"type": "number"
														}
													}
												}
											},
											"courier": {
												"type": "string"
											},
											"invoiceNumber": {
												"type": "string"
											},
											"invoiceValue": {
												"type": "integer"
											},
											"invoiceUrl": {
												"type": "null"
											},
											"issuanceDate": {
												"type": "string"
											},
											"trackingNumber": {
												"type": "string"
											},
											"invoiceKey": {
												"type": "string"
											},
											"trackingUrl": {
												"type": "string"
											},
											"embeddedInvoice": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"courierStatus": {
												"type": "object",
												"properties": {
													"status": {
														"type": "string"
													},
													"finished": {
														"type": "boolean"
													},
													"deliveredDate": {
														"type": "null"
													},
													"data": {
														"type": "array"
													}
												}
											},
											"cfop": {
												"type": "null"
											},
											"restitutions": {
												"type": "object"
											},
											"volumes": {
												"type": "integer"
											}
										}
									}
								}
							}
						},
						"sellers": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"logo": {
										"type": "string"
									},
									"fulfillmentEndpoint": {
										"type": "string"
									}
								}
							}
						},
						"callCenterOperatorData": {
							"type": "null"
						},
						"followUpEmail": {
							"type": "string"
						},
						"lastMessage": {
							"type": "null"
						},
						"hostname": {
							"type": "string"
						},
						"invoiceData": {
							"type": "null"
						},
						"changesAttachment": {
							"type": "null"
						},
						"openTextField": {
							"type": "null"
						},
						"roundingError": {
							"type": "integer"
						},
						"orderFormId": {
							"type": "string"
						},
						"commercialConditionData": {
							"type": "null"
						},
						"isCompleted": {
							"type": "boolean"
						},
						"customData": {
							"type": "null"
						},
						"storePreferencesData": {
							"type": "object",
							"properties": {
								"countryCode": {
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"currencyFormatInfo": {
									"type": "object",
									"properties": {
										"CurrencyDecimalDigits": {
											"type": "integer"
										},
										"CurrencyDecimalSeparator": {
											"type": "string"
										},
										"CurrencyGroupSeparator": {
											"type": "string"
										},
										"CurrencyGroupSize": {
											"type": "integer"
										},
										"StartsWithCurrencySymbol": {
											"type": "boolean"
										}
									}
								},
								"currencyLocale": {
									"type": "integer"
								},
								"currencySymbol": {
									"type": "string"
								},
								"timeZone": {
									"type": "string"
								}
							}
						},
						"allowCancellation": {
							"type": "boolean"
						},
						"allowEdition": {
							"type": "boolean"
						},
						"isCheckedIn": {
							"type": "boolean"
						},
						"marketplace": {
							"type": "object",
							"properties": {
								"baseURL": {
									"type": "string"
								},
								"isCertified": {
									"type": "null"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"authorizedDate": {
							"type": "string"
						},
						"invoicedDate": {
							"type": "string"
						},
						"cancelReason": {
							"type": "null"
						},
						"itemMetadata": {
							"type": "object",
							"properties": {
								"Items": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"Id": {
												"type": "string"
											},
											"Seller": {
												"type": "string"
											},
											"Name": {
												"type": "string"
											},
											"SkuName": {
												"type": "string"
											},
											"ProductId": {
												"type": "string"
											},
											"RefId": {
												"type": "string"
											},
											"Ean": {
												"type": "string"
											},
											"ImageUrl": {
												"type": "string"
											},
											"DetailUrl": {
												"type": "string"
											},
											"AssemblyOptions": {
												"type": "array"
											}
										}
									}
								}
							}
						},
						"subscriptionData": {
							"type": "null"
						},
						"taxData": {
							"type": "null"
						},
						"checkedInPickupPointId": {
							"type": "null"
						},
						"cancellationData": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexorder_totals_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_order_totals.parquet",
						"folderPath": "brazil/vtex/Order_Total/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "orderId",
						"type": "UTF8"
					},
					{
						"name": "sequence",
						"type": "UTF8"
					},
					{
						"name": "marketplaceOrderId",
						"type": "UTF8"
					},
					{
						"name": "sellerOrderId",
						"type": "UTF8"
					},
					{
						"name": "origin",
						"type": "UTF8"
					},
					{
						"name": "affiliateId",
						"type": "UTF8"
					},
					{
						"name": "salesChannel",
						"type": "UTF8"
					},
					{
						"name": "merchantName",
						"type": "UTF8"
					},
					{
						"name": "status",
						"type": "UTF8"
					},
					{
						"name": "statusDescription",
						"type": "UTF8"
					},
					{
						"name": "value",
						"type": "UTF8"
					},
					{
						"name": "creationDate",
						"type": "UTF8"
					},
					{
						"name": "orderGroup",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexpayment_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtext_payment.parquet",
						"folderPath": "brazil/vtex/Payment/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexshippingLogistical_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_shipping_logInfo.parquet",
						"folderPath": "brazil/vtex/ShippingLogisticInfo/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexshipping_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_DESTINO_GEN2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vtex_shipping.parquet",
						"folderPath": "brazil/vtex/Shipping/2021",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ADLS_DESTINO_GEN2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wsdevbrsynapse')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {},
				"sqlPool": {
					"referenceName": "dwmwe",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/dwmwe')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_DESTINO_GEN2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_DESTINO_GEN2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "key-storage-acount-dev",
						"secretVersion": ""
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BLOB_IMAGENS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('BLOB_IMAGENS_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ORC_GIGAM_ORIGEM')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ORC_GIGAM_ORIGEM_properties_typeProperties_connectionString_secretName')]",
						"secretVersion": ""
					}
				},
				"connectVia": {
					"referenceName": "ir-dev-malwee-2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/ir-dev-malwee-2')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RestService1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RestServiceVtex')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceVtex_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestServiceVtex_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestServiceVtex_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SAP_TABLE_ORIGEM')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "con-malwee-sap-ecc",
						"secretVersion": ""
					},
					"server": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SAP_TABLE_ORIGEM_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "ir-dev-malwee-2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/ir-dev-malwee-2')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL_CONTROLE')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_CONTROLE_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SapRest')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('SapRest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('SapRest_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapRest_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexTeste')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('VtexTeste_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('VtexTeste_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('VtexTeste_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/as-dev-us-synapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('as-dev-us-synapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkedService1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedService1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedService1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkedService2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedService2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedService2_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wsbisinapsys-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('wsbisinapsys-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wsdevbrdatalake-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('wsdevbrdatalake-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wsdevbrsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('wsdevbrsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wsdevbrsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('wsdevbrsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger diario 00h')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Execução diaria",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "EXEC_GDRIVE",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2021-03-12T08:00:00",
						"timeZone": "E. South America Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_GDRIVE')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger diario 03h')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-10T12:58:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cigam_diario_0630h')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_PROCESSA_DIMENSIONAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-19T13:51:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_PROCESSA_DIMENSIONAL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cigam_diario_06h')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_CLIENTES",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_DEVOLUCAOCLIENTE",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_ESTAB_USUARIOS",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_ESTABELECIMENTO",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_ESTOQUEHISTORICO",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_METALOJA",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_PRODUTO_ESTOQUE",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_PRODUTOENTRADA",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_PRODUTOS_",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "EXEC_PIPE_CIGAM_GST_BI_VENDAS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-10T12:58:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								20
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_CLIENTES')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_DEVOLUCAOCLIENTE')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_ESTAB_USUARIOS')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_ESTABELECIMENTO')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_ESTOQUEHISTORICO')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_METALOJA')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_PRODUTO_ESTOQUE')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_PRODUTOENTRADA')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_PRODUTOS_')]",
				"[concat(variables('workspaceId'), '/pipelines/EXEC_PIPE_CIGAM_GST_BI_VENDAS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtex_diario_06h')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "VTEX_ORDER_DETAIL_IMPORT",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-23T02:26:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/VTEX_ORDER_DETAIL_IMPORT')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ir-dev-malwee-2')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ir-dev-malwee')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CARGA_FATO_MOVIMENTO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": "\n\ninsert into dw.fato_cigam_movimento\nselect \n isnull(dim_calendario.sk_data,19000101)\t\t\tas sk_data\n,isnull(dim_cliente.sk_cliente,1)\t\t\t\t\tas sk_cliente\n,isnull(dim_loja.sk_loja,1)\t\t\t\t\t\t\tas sk_cigam_loja\n,isnull(dim_produto.sk_produto,1)\t\t\t\t\tas sk_produto\n,isnull(dim_vendedor.sk_vendedor,1)\t\t\t\t\tas sk_vendedor\n,upper(ods.modalidade_venda)\t\t\t\t\t\tas modalidade_venda\n,upper(ods.tipo_movimento)\t\t\t\t\t\t\tas tipo_movimento\n,ods.numero_docto\n,ods.vendas_qtd_item\n,ods.vendas_valor_unitario\n,ods.vendas_valor_total_item\n,ods.devolucao_qtd_item\n,ods.devolucao_valor_unitario\n,ods.devolucao_valor_total_item\n from  ods.pre_carga_fato_movimento\t\tas ods\n\t\t\tleft join dw.dim_calendario\t\tas dim_calendario       on ods.data_confirmacao = dim_calendario.sk_data\n            left join dw.dim_cigam_cliente\tas dim_cliente\t\t\ton ods.estab_idcigam = dim_cliente.estab_idcigam and \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tods.cliente_codigo = dim_cliente.cliente_codigo\n            left join dw.dim_cigam_loja\t\tas dim_loja             on dim_loja.estab_idcigam  = ods.estab_idcigam  \n            left join dw.dim_cigam_produto\tas dim_produto\t\t\ton dim_produto.produto_referenciatam = ods.produto_referenciatam     \n            left join dw.dim_cigam_vendedor as dim_vendedor\t\t\ton dim_vendedor.idloja_cigam =  ods.estab_idcigam and \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdim_vendedor.vendedor_codigo = ods.vendedor_codigo                                     \n                                         ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CARGA_ODS_MOVIMENTACAO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": "/*acrescentar o campos id_cupom_fiscal \nconcat(\n convert(int,replace(convert(varchar,convert(date,data_confirmacao)),'-','')) ,\n convert(int,vendas.numero_docto) ,\n convert(varchar(5), loja.estab_idcigam))\t\n*/\n\n\n truncate table  ods.pre_carga_fato_movimento\n ---vendas\n insert into ods.pre_carga_fato_movimento\n select  \n convert(int,replace(convert(varchar,convert(date,data_confirmacao)),'-',''))                       as data_confirmacao\n ,convert(varchar(5), loja.estab_idcigam)                                                           as estab_idcigam\n ,convert(int, vendas.vendedor_codigo )\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas vendedor_codigo\n ,convert(int,cliente.cliente_codigo)                                                               as cliente_codigo\n ,convert(varchar(20), produto.produto_referenciatam )                                              as produto_referenciatam\n , upper(convert(varchar(50),isnull(vendas.modalidade_venda,'não informado')))                      as modalidade_venda\n ,case\n    when vendas.tipo_movimento = 'v' then convert(varchar(15),'venda') \n    else convert(varchar(15),'não informado') \n end                                                                                                as tipo_movimento \n ,convert(int,vendas.numero_docto)                                                                  as numero_docto\n ,convert(int,vendas.qtd_item)                                                                      as vendas_qtd_item\n ,convert(numeric(18,2),vendas.valor_unitario)                                                      as vendas_valor_unitario\n ,convert(numeric(18,2),vendas.valor_total_item)                                                    as vendas_valor_total_item\n ,convert(int,0)                                                                                    as devolucao_qtd_item\n ,convert(numeric(18,2),0)                                                                          as devolucao_valor_unitario\n ,convert(numeric(18,2),0)                                                                          as devolucao_valor_total_item\n from cleansing_data.cigam_gst_bi_vendas                                                                 as vendas\n inner join cleansing_data.cigam_gst_bi_estabelecimento as loja on vendas.idloja_cigam = loja.estab_idcigam\n left join cleansing_data.cigam_gst_bi_produtos as produto on vendas.codigo_barras =  produto.produto_referenciatam \n left join cleansing_data.cigam_gst_bi_clientes as cliente on \n           vendas.idloja_cigam = cliente.estab_idcigam and \n           vendas.cliente_codigo = cliente.cliente_codigo\n\n\n\n\n--devolucao\n insert into ods.pre_carga_fato_movimento\n select \n convert(int,replace(convert(varchar,convert(date,devolucao.data_confirmacao)),'-',''))             as data_confirmacao\n ,convert(varchar(5), loja.estab_idcigam)                                                           as estab_idcigam\n ,convert(int, devolucao.vendedor_codigo )                                                          as vendedor_codigo\n ,convert(int,cliente.cliente_codigo)                                                               as cliente_codigo\n ,convert(varchar(20), produto.produto_referenciatam )                                                 as produto_referenciatam\n, convert(varchar(50),'não informado')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas modalidade_venda\n ,case\n    when devolucao.tipo_movimento = 'd' then convert(varchar(15),'devolução') \n    else convert(varchar(15),'não informado') \n end                                                                                                as tipo_movimento \n ,convert(int,devolucao.numero_docto)                                                               as numero_docto\n ,convert(int,0)                                                                                    as vendas_qtd_item\n ,convert(numeric(18,2),0)                                                                          as vendas_valor_unitario\n ,convert(numeric(18,2),0)                                                                          as vendas_valor_total_item\n ,convert(int,devolucao.qtd_item)                                                                   as devolucao_qtd_item\n ,convert(numeric(18,2),devolucao.valor_unitario)                                                   as devolucao_valor_unitario\n ,convert(numeric(18,2),devolucao.valor_total_item)                                                 as devolucao_valor_total_item\n from cleansing_data.cigam_gst_bi_devolucaocliente  \t\t\t\t\t\t\t\t\t\t\t    as devolucao          \n inner join cleansing_data.cigam_gst_bi_estabelecimento as loja on devolucao.estab_idcigam = loja.estab_idcigam\n left join cleansing_data.cigam_gst_bi_produtos as produto on devolucao.codigo_barras =  produto.produto_referenciatam \n left join cleansing_data.cigam_gst_bi_clientes as cliente on \n           devolucao.estab_idcigam = cliente.estab_idcigam and \n           devolucao.cliente_codigo = cliente.cliente_codigo\t ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CRIA PK')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL"
				},
				"content": {
					"query": "ALTER TABLE  DW.DIM_CIGAM_CLIENTE add CONSTRAINT PK_DIM_CIGAM_CLIENTE PRIMARY KEY NONCLUSTERED (SK_CLIENTE) NOT ENFORCED\nALTER TABLE  DW.DIM_CIGAM_PRODUTO add CONSTRAINT PK_DIM_CIGAM_PRODUTO PRIMARY KEY NONCLUSTERED (SK_PRODUTO) NOT ENFORCED\nALTER TABLE  DW.DIM_CIGAM_LOJA add CONSTRAINT PK_DIM_CIGAM_LOJA PRIMARY KEY NONCLUSTERED (SK_LOJA) NOT ENFORCED\n\nALTER TABLE  DW.DIM_CIGAM_VENDEDOR add CONSTRAINT PK_DIM_CIGAM_VENDEDOR PRIMARY KEY NONCLUSTERED (SK_VENDEDOR) NOT ENFORCED\n\nALTER TABLE  DW.DIM_CALENDARIO add CONSTRAINT PK_DIM_CALENDARIO PRIMARY KEY NONCLUSTERED (SK_DATA) NOT ENFORCED\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CriarVtexClient')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nCREATE TABLE dim_vtex_client \n(\n    [orderId] [NVARCHAR](1000) null, \n    [email] [NVARCHAR](1000) null, \n    [firstName] [NVARCHAR](1000) null, \n    [lastName] [NVARCHAR](1000) null , \n    [documentType] [NVARCHAR](1000) null , \n    [document] [NVARCHAR](1000) null, \n    [phone] [NVARCHAR](1000) null\n)\n\n\nCREATE TABLE dim_vtex_payment \n(\n    [iditems] [NVARCHAR](1000) null,\n    [iditemsvtex] [NVARCHAR](1000) null,\n    [value] [NVARCHAR](1000) null,\n    [installments] [NVARCHAR](1000) null,\n    [referenceValue] [NVARCHAR](1000) null,\n    [orderId] [NVARCHAR](1000) null\n)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DIM_CIDGAM_PRODUTO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": "\nINSERT INTO DW.DIM_CIGAM_PRODUTO\nSELECT  \nupper(convert(varchar(25),PRODUTO_REFERENCIATAM))\t\t\tAS PRODUTO_REFERENCIATAM\n,upper(CONVERT(VARCHAR(10),PRODUTO_MODELO))                                                                        AS PRODUTO_MODELO\n,upper(CONVERT(VARCHAR(20), PRODUTO_REFERENCIA ))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS PRODUTO_REFERENCIA\n,UPPER(CONVERT(VARCHAR(100),ISNULL(PRODUTO_DESCRICAO,'NÃO INFORMADO')))                                     AS PRODUTO_DESCRICAO\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_COLECAO,'NÃO INFORMADO')))                                        AS PRODUTO_COLECAO\n,CONVERT(INT,ISNULL(PRODUTO_SUBCOLECAO,-1))                                                                 AS PRODUTO_SUBCOLECAO\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_LINHA,'NÃO INFORMADO')))                                          AS PRODUTO_LINHA\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_ARTIGO,'NÃO INFORMADO')))                                         AS PRODUTO_ARTIGO\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_COMPL_ARTIGO,'NÃO INFORMADO')))                                   AS PRODUTO_COMPL_ARTIGO\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_COR,'NÃO INFORMADO')))                                            AS PRODUTO_COR\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_COR_FRANQUEADORA,'NÃO INFORMADO')))                               AS PRODUTO_COR_FRANQUEADORA\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_GENERO,'NÃO INFORMADO')))                                         AS PRODUTO_GENERO\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_MARCA,'NÃO INFORMADO')))                                          AS PRODUTO_MARCA\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_GRUPOALVO,'NÃO INFORMADO')))                                      AS PRODUTO_GRUPOALVO\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_MATERIAL,'NÃO INFORMADO')))                                       AS PRODUTO_MATERIAL\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_EAN,'NÃO INFORMADO')))                                            AS PRODUTO_EAN\n,UPPER(CONVERT(VARCHAR(50),'NÃO INFORMADO'))                                                                AS VENDAS_EAN\n,UPPER(CONVERT(VARCHAR(50),ISNULL(PRODUTO_TAMANHO,'NÃO INFORMADO')))                                        AS PRODUTO_TAMANHO\n,CASE\n    WHEN PRODUTO_ATIVO IS NULL OR LEN(PRODUTO_ATIVO) =  0 OR PRODUTO_ATIVO NOT IN ('S','N') THEN 'NÃO INFORMADO'\n    WHEN PRODUTO_ATIVO = 'S'     THEN 'SIM'\n    WHEN PRODUTO_ATIVO = 'N'     THEN 'NÃO'\nEND PRODUTO_ATIVO\nFROM CLEANSING_DATA.GST_BI_PRODUTOS\n\n\nUPDATE PRODUTO\nSET PRODUTO.VENDAS_EAN = VENDAS.CODIGO_BARRAS\nFROM DW.DIM_CIGAM_PRODUTO PRODUTO\nINNER JOIN CLEANSING_DATA.GST_BI_VENDAS  VENDAS\nON  PRODUTO.PRODUTO_REFERENCIATAM   =  VENDAS.CODIGO_BARRAS  \n\nUPDATE PRODUTO\nSET PRODUTO.VENDAS_EAN = DEVOLUCAO.CODIGO_BARRAS\nFROM DW.DIM_CIGAM_PRODUTO PRODUTO\nINNER JOIN CLEANSING_DATA.GST_BI_DEVOLUCAOCLIENTE  DEVOLUCAO\nON  PRODUTO.PRODUTO_REFERENCIATAM  =  DEVOLUCAO.CODIGO_BARRAS  ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DIM_CIGAM_CLIENTE')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": "INSERT INTO DW.DIM_CIGAM_CLIENTE\nSELECT  \nCONVERT(VARCHAR(15), UPPER(ISNULL(PK_CLIENTE,'NÃOINFORMADO')))                                          AS  ID_CLIENTE\n,CONVERT(VARCHAR(5), UPPER(ISNULL(ESTAB_IDCIGAM,'NÃOINFORMADO')))                                       AS  ESTAB_IDCIGAM\n,CONVERT(INT,ISNULL(CLIENTE_CODIGO,-1))                                                                 AS  CLIENTE_CODIGO\n,CONVERT(VARCHAR(150), UPPER(ISNULL(CLIENTE_NOME,'NÃO INFORMADO')))                                     AS  CLIENTE_NOME\n,CONVERT(VARCHAR(15), UPPER(ISNULL(CLIENTE_CPFCNPJ,'NÃO INFORMADO')))                                   AS  CLIENTE_CPFCNPJ\n,CONVERT(VARCHAR(150),UPPER(ISNULL(CLIENTE_EMAIL,'NÃO INFORMADO')))                                     AS  CLIENTE_EMAIL\n,CONVERT(VARCHAR(50),UPPER(ISNULL(CLIENTE_CIDADE,'NÃO INFORMADO')))                                     AS  CLIENTE_CIDADE\n,CONVERT(VARCHAR(15), UPPER(ISNULL(CLIENTE_ESTADO,'NÃO INFROAMDO')))                                    AS  CLIENTE_ESTADO\n,CASE\n    WHEN CLIENTE_SEXO = 'M' THEN 'MASCULINO'\n    WHEN CLIENTE_SEXO = 'F' THEN 'FEMININO'\n        ELSE 'NÃO INFORMADO'\nEND                                                                                                     AS CLIENTE_SEXO\n,CONVERT(DATE,ISNULL(CLIENTE_ANIVERSARIO,'1900-01-01'))                                                 AS  CLIENTE_ANIVERSARIO\n,CONVERT(INT,ISNULL(CLIENTE_DDD_CELULAR,-1))                                                            AS  CLIENTE_DDD_CELULAR\n,CONVERT(VARCHAR(10),ISNULL(CLIENTE_CELULAR,-1))                                                        AS  CLIENTE_CELULAR\n\n,CONVERT(VARCHAR(150),UPPER(ISNULL(CLIENTE_ENDERECO,'NÃO INFORMADO')))                                  AS  CLIENTE_ENDERECO\n,CONVERT(VARCHAR(15),ISNULL(CLIENTE_NUMERO,'NÃO INFORMADO'))                                            AS  CLIENTE_NUMERO\n,CONVERT(VARCHAR(150),UPPER(ISNULL(CLIENTE_BAIRRO,'NÃO INFORMADO')))                                    AS  CLIENTE_BAIRRO\n,CASE\n    WHEN NUM_MATRICULA IS NULL OR LEN(NUM_MATRICULA) = 0 THEN   'NÃO INFORMADO'\n        ELSE UPPER(CONVERT(VARCHAR(25),NUM_MATRICULA))\nEND                                                                                                     AS  NUM_MATRICULA\nFROM CLEANSING_DATA.GST_BI_CLIENTES\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DIM_CIGAM_LOJA')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": "\n/** LOJA **/\n\nINSERT INTO DW.DIM_CIGAM_LOJA\nSELECT   \nCONVERT(VARCHAR(5),ESTAB_IDCIGAM)                                                                       AS  ESTAB_IDCIGAM\n,CONVERT(INT,ISNULL(ESTAB_IDINTEGRACAO,-1))                                                             AS  ESTAB_IDINTEGRACAO\n,CONVERT(VARCHAR(15), UPPER(ISNULL(ESTAB_TIPOFILIAL,'NÃOINFORMADO')))                                   AS  ESTAB_TIPOFILIAL\n,CONVERT(VARCHAR(150), UPPER(ISNULL(ESTAB_NOME,'NÃO INFORMADO')))                                       AS  ESTAB_NOME\n,CONVERT(FLOAT, ISNULL(ESTAB_AREA,-1))                                                                  AS  ESTAB_AREA\n,CONVERT(VARCHAR(20), UPPER(ISNULL(REGIAO_DESCRICAO,'NÃOINFORMADO')))                                   AS  REGIAO_DESCRICAO\n,CONVERT(VARCHAR(15), UPPER(ISNULL(ESTAB_ESTADO,'NÃO INFROAMDO')))                                      AS  ESTAB_ESTADO\n,CONVERT(VARCHAR(15), UPPER(ISNULL(CONSULTOR_NUMMATR,'NÃO INFORMADO')))                                 AS  CONSULTOR_NUMMATR\n,CONVERT(VARCHAR(150),UPPER(ISNULL(CONSULTOR_NOME,'NÃO INFORMADO')))                                    AS  CONSULTOR_NOME\n,CASE\n    WHEN ESTAB_ATIVO IS NULL OR LEN(ESTAB_ATIVO) =  0 OR ESTAB_ATIVO NOT IN ('S','N') THEN CONVERT(VARCHAR(15),'NÃO INFORMADO')\n    WHEN ESTAB_ATIVO = 'S'     THEN CONVERT(VARCHAR(15),'SIM')\n    WHEN ESTAB_ATIVO = 'N'     THEN CONVERT(VARCHAR(15),'NÃO')\nEND ESTAB_ATIVO\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_RAZAO_SOCIAL,'NÃO INFORMADO')))                                AS  ESTAB_RAZAO_SOCIAL\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_ENDERECO,'NÃO INFORMADO')))                                    AS  ESTAB_ENDERECO\n,CONVERT(VARCHAR(15),ISNULL(ESTAB_ENDNUMERO,'NÃO INFORMADO'))                                           AS  ESTAB_ENDNUMERO\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_BAIRRO,'NÃO INFORMADO')))                                      AS  ESTAB_BAIRRO\n,CONVERT(VARCHAR(15),ISNULL(ESTAB_CEP,'NAO INFORMADO'))                                                 AS  ESTAB_CEP\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_CIDADE,'NÃO INFORMADO')))                                      AS  ESTAB_CIDADE\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_EMAIL,'NÃO INFORMADO')))                                       AS  ESTAB_EMAIL\n,CONVERT(INT,ISNULL(ESTAB_DDD,-1))                                                                      AS  ESTAB_DDD\n,CONVERT(INT,ISNULL(ESTAB_TELEFONE,-1))                                                                 AS  ESTAB_TELEFONE\n,CONVERT(DATE,ISNULL(ESTAB_DATA_INICIOOPER,'1900-01-01'))                                               AS  ESTAB_DATA_INICIOOPER\n,CONVERT(VARCHAR(150),UPPER(ISNULL(SHOPPING_NOME,'NÃO INFORMADO')))                                     AS  SHOPPING_NOME\n,CONVERT(VARCHAR(150),UPPER(ISNULL(FRANQUEADO_NOME,'NÃO INFORMADO')))                                   AS  FRANQUEADO_NOME\n,CONVERT(VARCHAR(150),UPPER(ISNULL(FRANQUEADO_EMAIL,'NÃO INFORMADO')))                                  AS  FRANQUEADO_EMAIL\n,CONVERT(VARCHAR(20),UPPER(ISNULL(ESTAB_CNPJ,'NÃO INFORMADO')))                                         AS  ESTAB_CNPJ\n,CONVERT(VARCHAR(25),UPPER(ISNULL(ESTAB_PERFIL,'NÃO INFORMADO')))                                       AS  ESTAB_PERFIL\n,CONVERT(INT,ISNULL(REDELOJA_CODIGO,-1))                                                                AS  REDELOJA_CODIGO\n,CONVERT(VARCHAR(50),UPPER(ISNULL(REDELOJA_NOME,'NÃO INFORMADO')))                                      AS  REDELOJA_NOME\n\nFROM CLEANSING_DATA.GST_BI_ESTABELECIMENTO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DIM_CIGAM_VENDED')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": "INSERT INTO DW.DIM_CIGAM_VENDEDOR\nSELECT DISTINCT \nCONCAT(CONVERT(VARCHAR(5),IDLOJA_CIGAM) ,CONVERT(INT,VENDEDOR_CODIGO)  )                                                   AS ID_VENDEDOR\n,CONVERT(VARCHAR(5),IDLOJA_CIGAM)                                                                                          AS IDLOJA_CIGAM\n,CONVERT(INT, ISNULL(VENDEDOR_CODIGO,-1))                                                                                  AS VENDEDOR_CODIGO\n,UPPER(CONVERT(VARCHAR(100),ISNULL(VENDEDOR_NOME,'NÃO INFORMADO')))                                                       AS VENDEDOR_NOME\nFROM   [cleansing_data].[cigam_gst_bi_vendas]\nUNION \nSELECT DISTINCT \nCONCAT(CONVERT(VARCHAR(5),ESTAB_IDCIGAM) ,CONVERT(INT,VENDEDOR_CODIGO)  )                                                   AS ID_VENDEDOR\n,CONVERT(VARCHAR(5),ESTAB_IDCIGAM)                                                                                          AS IDLOJA_CIGAM\n,CONVERT(INT, ISNULL(VENDEDOR_CODIGO,-1))                                                                                  AS VENDEDOR_CODIGO\n,UPPER(CONVERT(VARCHAR(100),ISNULL(VENDEDOR_NOME,'NÃO INFORMADO')))                                                       AS VENDEDOR_NOME\nFROM [cleansing_data].[cigam_gst_bi_devolucaocliente]\n ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DIM_DATA')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": "TRUNCATE TABLE DW.DIM_cALENDARIO\n\ndeclare @datainicio as date\nset @datainicio = '1900-01-01'\n\n\nwhile @datainicio <= convert(date,'2050-12-31')\nbegin \ninsert into dw.DIM_CALENDARIO\nselect \nreplace(CONVERT(varchar(10),@datainicio),'-','')as IdData\n,DATEPART(year,@datainicio) as Ano\n,case\nwhen LEN(DATEPART(MONTH,@datainicio)) = 1 then \nCONVERT(varchar,DATEPART(year,@datainicio)) + '0' + CONVERT(varchar,DATEPART(MONTH,@datainicio))\nelse \nCONVERT(varchar,DATEPART(year,@datainicio))  + CONVERT(varchar,DATEPART(MONTH,@datainicio))\nend  as AnoMes\n,replace(CONVERT(varchar(10),@datainicio),'-','')as AnoMesDia\n,@datainicio as Data\n,DATEPART(day,@datainicio)as Dia\n,case\n\twhen DATEPART(MONTH,@datainicio) = 1 then 'Janeiro'\n\twhen DATEPART(MONTH,@datainicio) = 2 then 'Fevereiro'\n\twhen DATEPART(MONTH,@datainicio) = 3 then 'Março'\n\twhen DATEPART(MONTH,@datainicio) = 4 then 'Abril'\n\twhen DATEPART(MONTH,@datainicio) = 5 then 'Maio'\n\twhen DATEPART(MONTH,@datainicio) = 6 then 'junho'\n\twhen DATEPART(MONTH,@datainicio) = 7 then 'Julho'\n\twhen DATEPART(MONTH,@datainicio) = 8 then 'Agosto'\n\twhen DATEPART(MONTH,@datainicio) = 9 then 'Setembro'\n\twhen DATEPART(MONTH,@datainicio) = 10 then 'Outubro'\n\twhen DATEPART(MONTH,@datainicio) = 11 then 'Novembro'\n\twhen DATEPART(MONTH,@datainicio) = 12 then 'Dezembro'\nend as Mes\n,case\n\twhen DATEPART(MONTH,@datainicio) = 1  then 'Jan/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 2  then 'Fev/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 3  then 'Mar/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 4  then 'Abr/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 5  then 'Mai/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 6  then 'jun/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 7  then 'Jul/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 8  then 'Ago/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 9  then 'Set/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 10 then 'Out/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 11 then 'Nov/' + CONVERT(varchar,DATEPART(year,@datainicio)) \n\twhen DATEPART(MONTH,@datainicio) = 12 then 'Dez/' + CONVERT(varchar,DATEPART(year,@datainicio)) \nend as MesAnoDesc\n,DATEPART(MONTH,@datainicio)as MumeroMes\n,DATEPART(DW,@datainicio)as NumeroDiaDaSemana\n,case\n\twhen DATEPART(DW,@datainicio) = 1 then 'Domingo'\n\twhen DATEPART(DW,@datainicio) = 2 then 'Segunda-Feira'\n\twhen DATEPART(DW,@datainicio) = 3 then 'Terça-Feira'\n\twhen DATEPART(DW,@datainicio) = 4 then 'Quarta-Feira'\n\twhen DATEPART(DW,@datainicio) = 5 then 'Quinta-Feira'\n\twhen DATEPART(DW,@datainicio) = 6 then 'Sexta-Feira'\n\twhen DATEPART(DW,@datainicio) = 7 then 'Sábado'\nend as DiaSemana\n,DATEPART(dy,@datainicio) as DiaDoAno\n,DATEPART(week,@datainicio) as SemanadoAno\n,case\n\twhen DATEPART(MONTH,@datainicio) in (1,2,3) then 'Q1'\n\twhen DATEPART(MONTH,@datainicio) in (4,5,6) then 'Q2'\n\twhen DATEPART(MONTH,@datainicio) in (7,8,9) then 'Q3'\n\twhen DATEPART(MONTH,@datainicio) in (10,11,12)then 'Q4'\nend AS Trimestre\n,case\n\twhen DATEPART(MONTH,@datainicio) in (1,2,3) then 1\n\twhen DATEPART(MONTH,@datainicio) in (4,5,6) then 2\n\twhen DATEPART(MONTH,@datainicio) in (7,8,9) then 3\n\twhen DATEPART(MONTH,@datainicio) in (10,11,12)then 4\nend AS NumeroTrimestre\n,case\n\twhen DATEPART(MONTH,@datainicio) in (1,2,3,4,5,6) then 'S1'\n\twhen DATEPART(MONTH,@datainicio) in (7,8,9,10,11,12)then 'S2'\nend AS Semestre\n,case\n\twhen DATEPART(MONTH,@datainicio) in (1,2,3,4,5,6) then 1\n\twhen DATEPART(MONTH,@datainicio) in (7,8,9,10,11,12)then 2\nend AS NumeroSemestre\n\nset @datainicio = DATEADD(d,1,@datainicio)\n\n\nend \n\n\n\n\n\n ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Demo Cliente')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nSET QUOTED_IDENTIFIER ON\nGO\n\n\nDECLARE @SEPARATOR VARCHAR(30) = '     //     '\nDECLARE @COUNT_BEFORE BIGINT\nSELECT @COUNT_BEFORE = COUNT(*) FROM mm.cliente\nPRINT @SEPARATOR + 'INÍCIO: ' + CAST(@COUNT_BEFORE AS VARCHAR(30)) + ' CLIENTES'\n\n\nPRINT 'Create tmp_cliente'\nCREATE TABLE mm.tmp_cliente\n( \n\t[pk_cliente] [bigint]  NULL,\n\t[Cidade] [nvarchar](3000)  NULL,\n\t[Cidade IBGE] [nvarchar](3000)  NULL,\n\t[Cidade/UF] [nvarchar](3000)  NULL,\n\t[Código] [bigint]  NULL,\n\t[Nome-Código] [nvarchar](3000)  NULL,\n\t[CEP] [nvarchar](3000)  NULL,\n\t[UF] [nvarchar](3000)  NULL,\n\t[Data de Criação] [nvarchar](3000)  NULL,\n\t[Dias Criação] [bigint]  NULL,\n\t[Ano Criação] [smallint]  NULL,\n\t[Cidade SAP] [nvarchar](3000)  NULL,\n\t[Região] [nvarchar](3000)  NULL,\n\t[Grupo Loja] [nvarchar](3000)  NULL,\n\t[Rede] [nvarchar](3000)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\n\nPRINT @SEPARATOR + 'Copy csv to tmp_cliente'\nCOPY INTO mm.tmp_cliente\n\t(pk_cliente 1, Cidade 2, [Cidade IBGE] 3, [Cidade/UF] 4, Código 5, [Nome-Código] 6, CEP 7, UF 8, [Data de Criação] 9, [Dias Criação] 10, [Ano Criação] 11, [Cidade SAP] 12, Região 13, [Grupo Loja] 14, Rede 15)\nFROM 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/Cliente.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\n\nPRINT @SEPARATOR + 'Drop cliente'\nDROP TABLE mm.cliente\n\n\nPRINT @SEPARATOR + 'Create cliente'\nCREATE TABLE mm.cliente\n( \n\t[pk_cliente] [bigint]  NOT NULL,\n\t[Cliente - Cidade] [nvarchar](3000)  NULL,\n\t[Cliente - Cidade IBGE] [nvarchar](3000)  NULL,\n\t[Cliente - Cidade/UF] [nvarchar](3000)  NULL,\n\t[Cliente - Código] [bigint]  NOT NULL,\n\t[Cliente - Nome-Código] [nvarchar](3000)  NULL,\n\t[Cliente - CEP] [nvarchar](3000)  NULL,\n\t[Cliente - UF] [nvarchar](3000)  NULL,\n\t[Cliente - Data de Criação] [date]  NULL,\n\t[Cliente - Dias Criação] [bigint]  NULL,\n\t[Cliente - Ano Criação] [smallint]  NULL,\n\t[Cliente - Cidade SAP] [nvarchar](3000)  NULL,\n\t[Cliente - Região] [nvarchar](3000)  NULL,\n\t[Cliente - Grupo Loja] [nvarchar](3000)  NULL,\n\t[Cliente - Rede] [nvarchar](3000)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\n\nPRINT @SEPARATOR + 'Load tmp to cliente'\ninsert into mm.cliente\n\t([pk_cliente], [Cliente - Cidade], [Cliente - Cidade IBGE], [Cliente - Cidade/UF], [Cliente - Código], [Cliente - Nome-Código], [Cliente - CEP], [Cliente - UF],\n\t[Cliente - Data de Criação],\n\t[Cliente - Dias Criação], [Cliente - Ano Criação], [Cliente - Cidade SAP], [Cliente - Região], [Cliente - Grupo Loja], [Cliente - Rede])\nselect pk_cliente, Cidade, [Cidade IBGE], [Cidade/UF], Código, [Nome-Código], CEP, UF,\n\tCONVERT(datetime, [Data de Criação], 103) as [Data de Criação],\n\t[Dias Criação], [Ano Criação], [Cidade SAP], Região, [Grupo Loja], Rede\nfrom mm.tmp_cliente\n\n\nPRINT @SEPARATOR + 'Drop tmp_cliente'\nDROP TABLE mm.tmp_cliente\n\n\nDECLARE @COUNT_AFTER BIGINT\nSELECT @COUNT_AFTER = COUNT(*) FROM mm.cliente\nSELECT 'IMPORTAÇÃO REALIZADA', GETDATE() AS DT_FINALIZADO, @COUNT_AFTER AS COUNT_AFTER, MAX([pk_cliente]) AS MAX_PK_CLIENTE FROM mm.cliente\nPRINT @SEPARATOR + 'FIM: ' + CAST(@COUNT_AFTER AS VARCHAR(30)) + ' CLIENTES'\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Demo OrdemVenda 2 - Append Infantil')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nSET QUOTED_IDENTIFIER ON\n\n\nDECLARE @SEPARATOR VARCHAR(30) = '     //     '\nDECLARE @COUNT_BEFORE BIGINT\nSELECT COUNT_BEFORE = COUNT(*) FROM mm.ordem_venda\nPRINT @SEPARATOR + 'INÍCIO: ' + CAST(@COUNT_BEFORE AS VARCHAR(30)) + ' OVs'\n\n\nPRINT @SEPARATOR + 'Verifica se tmp_ordem_venda está vazia'\nIF EXISTS (SELECT TOP 1 1 FROM mm.tmp_ordem_venda)\nBEGIN\n\tselect 'ERRO: tmp_ordem_venda já possui registros.';\n\tThrow 50000, 'ERRO: tmp_ordem_venda já possui registros.', 1\n\tselect 1/0\nEND\n\n\nPRINT @SEPARATOR + 'Copy csv to tmp_ordem_venda'\nCOPY INTO mm.tmp_ordem_venda\n\t(pk_material 1, pk_OrdemVenda 2, pk_documento_condicao 3, pk_cliente 4, pk_representante 5, [OV - PV Comercial] 6, [OV - PV Número] 7, [%DataID] 8, [OV - Número] 9, [OV - Mês Despacho] 10, [OV - Ano Despacho] 11, [OV - Tipo Documento] 12, [OV - Grupo Tp.Documento] 13, [OV - Data Entrada] 14, [OV - Ano Entrada] 15, [OV - Mes Entrada] 16, [OV - Data Entrada (Dia)] 17, [OV - Programado] 18, [OV - Canal Venda] 19, [OV - Grupo Cliente] 20, [OV - Modalidade] 21, [OV - Entrada Ultimos 10] 22, [OV - Período PV/Ano] 23, [OV - Período PV] 24, [OV - Tipo Meta] 25, [OV - Periodo] 26, [OV - Sigla Nome Antigo] 27, [OV - Sigla Nome] 28, [OV - Regional] 29, [Meta - Regional] 30, [OV - Modo Envio] 31, [OV - Valor Desconto] 32, [OV - Item Grupo Tamanho] 33, [OV - Item Grupo Alvo] 34, [OV - Item Estação] 35, [OV - Item Estação Ano] 36, [OV - Item Coleção] 37, [OV - Item Qtde] 38, [OV - Item Qtde Geral] 39, [OV - Item Valor] 40, [OV - Item Valor Unit] 41, [OV - Item Status] 42, [OV - Item Equipe de Vendas] 43, [OV - Item Sigla Nome Ajs] 44, [OV - Tipo Pedido] 45, [OV - Item Mascara] 46, [OV - BU] 47, [OV Item - Marca Meta] 48, [Rec. Meta Total] 49, [OV - Item Motivo Recusa] 50, [Representante - Codigo Ajustado] 51, [OV - Valor Cancelado Antes PV] 52, [OV - Valor Cancelado Depois PV] 53, [OV - ColecaoAjustada] 54, [OV - Item Valor Geral] 55, [OV - Subcanal] 56, [OV - PV To Date] 57, [OV - Produto Grupo Temp] 58, [OV - Chave SSS Geral] 59, [Margem - PM] 60, [Margem - Custo PÇ] 61, [Margem - Perc. CustoV] 62, [OV - Margem Liq Produto] 63, [OV - SSS Geral] 64, [OV - SSS Ponderado] 65, [OV - Produto Grupo] 66, [OV - Abertura_AnoAtual] 67, [OV - Abertura_AnoAnterior] 68, [OV - Segmento] 69, [Meta - Quantidade] 70, [Meta - Valor] 71, [Meta - Grupo de Marca] 72, [Meta - Marca] 73, [Meta - Gerente Regional] 74, [Meta - Representante] 75, [Meta - Representante - Codigo Ajustado] 76, [Meta - Gerente de Área Fidelizado] 77, [Meta - Canal] 78, [Meta - ROB Meta (Venda)] 79, [Meta - ROB Meta] 80, [Meta - Qtde. Meta (Venda)] 81, [Meta - Qtde. Meta] 82, [Meta - ROL Meta Venda] 83, [Meta - ROL Meta] 84, [Meta - Margem Bruta Meta Venda] 85, [Meta - Margem Bruta Meta] 86, [Meta - Margem Liq. Meta Venda] 87, [Meta - Margem Liq. Meta] 88, [Meta - Qtde. Aberturas] 89, [Meta - Desconto Valor] 90, [Meta - Desconto Pct] 91, [RC - Qtde Prep] 92, [RC - Qtde RC_Prep] 93, [DiasVenda - Qtde] 94, [DiasVenda - Tipo] 95, [MetaTM - TM_Pct] 96)\nFROM 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/OrdemVendaInfantil.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\n\nPRINT @SEPARATOR + 'Delete ordem_venda Infantil'\nDELETE mm.ordem_venda where [Origem] = 'Infantil'\n\n\nPRINT @SEPARATOR + 'APPEND: insert tmp to ordem_venda'\ninsert into mm.ordem_venda\n \t(Origem, pk_material, pk_OrdemVenda, pk_documento_condicao, pk_cliente, pk_representante, [OV - PV Comercial], [OV - PV Número], [OV - Número], [OV - Mês Despacho], [OV - Ano Despacho], [OV - Tipo Documento], [OV - Grupo Tp.Documento], [OV - Data Entrada], [OV - Ano Entrada], [OV - Mes Entrada], [OV - Data Entrada (Dia)], [OV - Programado], [OV - Canal Venda], [OV - Grupo Cliente], [OV - Modalidade], [OV - Entrada Ultimos 10], [OV - Período PV/Ano], [OV - Período PV], [OV - Tipo Meta], [OV - Periodo], [OV - Sigla Nome Antigo], [OV - Sigla Nome], [OV - Regional], [Meta - Regional], [OV - Modo Envio], [OV - Valor Desconto], [OV - Item Grupo Tamanho], [OV - Item Grupo Alvo], [OV - Item Estação], [OV - Item Estação Ano], [OV - Item Coleção], [OV - Item Qtde], [OV - Item Qtde Geral], [OV - Item Valor], [OV - Item Valor Unit], [OV - Item Status], [OV - Item Equipe de Vendas], [OV - Item Sigla Nome Ajs], [OV - Tipo Pedido], [OV - Item Mascara], [OV - BU], [OV Item - Marca Meta], [Rec. Meta Total], [OV - Item Motivo Recusa], [Representante - Codigo Ajustado], [OV - Valor Cancelado Antes PV], [OV - Valor Cancelado Depois PV], [OV - ColecaoAjustada], [OV - Item Valor Geral], [OV - Subcanal], [OV - PV To Date], [OV - Produto Grupo Temp], [OV - Chave SSS Geral], [Margem - PM],  [Margem - Custo PÇ],  [Margem - Perc. CustoV], [OV - Margem Liq Produto], [OV - SSS Geral], [OV - SSS Ponderado], [OV - Produto Grupo], [OV - Abertura_AnoAtual], [OV - Abertura_AnoAnterior], [OV - Segmento], [Meta - Quantidade], [Meta - Valor], [Meta - Grupo de Marca], [Meta - Marca], [Meta - Gerente Regional], [Meta - Representante], [Meta - Representante - Codigo Ajustado], [Meta - Gerente de Área Fidelizado], [Meta - Canal], [Meta - ROB Meta (Venda)], [Meta - ROB Meta], [Meta - Qtde. Meta (Venda)], [Meta - Qtde. Meta], [Meta - ROL Meta Venda], [Meta - ROL Meta], [Meta - Margem Bruta Meta Venda], [Meta - Margem Bruta Meta], [Meta - Margem Liq. Meta Venda], [Meta - Margem Liq. Meta], [Meta - Qtde. Aberturas], [Meta - Desconto Valor], [Meta - Desconto Pct], [RC - Qtde Prep], [RC - Qtde RC_Prep], [DiasVenda - Qtde], [DiasVenda - Tipo], [MetaTM - TM_Pct])\nselect\n\t'Infantil' as Origem,\n\tpk_material, pk_OrdemVenda, pk_documento_condicao, pk_cliente, pk_representante, [OV - PV Comercial], [OV - PV Número], [OV - Número], [OV - Mês Despacho], [OV - Ano Despacho], [OV - Tipo Documento], [OV - Grupo Tp.Documento]\n,CONVERT(datetime, [OV - Data Entrada], 103) as [OV - Data Entrada],\n\t[OV - Ano Entrada], [OV - Mes Entrada], [OV - Data Entrada (Dia)], [OV - Programado], [OV - Canal Venda], [OV - Grupo Cliente], [OV - Modalidade], [OV - Entrada Ultimos 10], [OV - Período PV/Ano], [OV - Período PV], [OV - Tipo Meta], [OV - Periodo], [OV - Sigla Nome Antigo], [OV - Sigla Nome], [OV - Regional], [Meta - Regional], [OV - Modo Envio]\n,REPLACE([OV - Valor Desconto], ',', '.') as [OV - Valor Desconto]\n\t,[OV - Item Grupo Tamanho], [OV - Item Grupo Alvo], [OV - Item Estação], [OV - Item Estação Ano], [OV - Item Coleção], [OV - Item Qtde], [OV - Item Qtde Geral]\n,REPLACE([OV - Item Valor], ',', '.') as [OV - Item Valor]\n,REPLACE([OV - Item Valor Unit], ',', '.') as [OV - Item Valor Unit]\n\t,[OV - Item Status], [OV - Item Equipe de Vendas], [OV - Item Sigla Nome Ajs], [OV - Tipo Pedido], [OV - Item Mascara], [OV - BU], [OV Item - Marca Meta]\n,REPLACE([Rec. Meta Total], ',', '.') as [Rec. Meta Total]\n\t, [OV - Item Motivo Recusa], [Representante - Codigo Ajustado]\n,REPLACE([OV - Valor Cancelado Antes PV], ',', '.') as [OV - Valor Cancelado Antes PV]\n,REPLACE([OV - Valor Cancelado Depois PV], ',', '.') as [OV - Valor Cancelado Depois PV]\n\t, [OV - ColecaoAjustada]\n,REPLACE([OV - Item Valor Geral], ',', '.') as [OV - Item Valor Geral]\n\t,[OV - Subcanal], [OV - PV To Date], [OV - Produto Grupo Temp], [OV - Chave SSS Geral]\n,REPLACE([Margem - PM], ',', '.') as [Margem - PM]\n,NULLIF(REPLACE([Margem - Custo PÇ], ',', '.'), '---') as [Margem - Custo PÇ]\n,REPLACE([Margem - Perc. CustoV], ',', '.') as [Margem - Perc. CustoV]  --<<<<<<<<<<<<<<<<<<<< AUMENTAR casas precison/scale\n, CAST(CAST(REPLACE([OV - Margem Liq Produto], ',', '.') AS float) AS [decimal](19,4)) as [OV - Margem Liq Produto]  --<<<<<<<<<<<<<<<<<<<< AUMENTAR casas precison/scale \n\t,[OV - SSS Geral], [OV - SSS Ponderado], [OV - Produto Grupo], [OV - Abertura_AnoAtual], [OV - Abertura_AnoAnterior], [OV - Segmento], [Meta - Quantidade]\n,REPLACE([Meta - Valor], ',', '.') as [Meta - Valor]\n\t,[Meta - Grupo de Marca],[Meta - Marca],[Meta - Gerente Regional], [Meta - Representante], [Meta - Representante - Codigo Ajustado], [Meta - Gerente de Área Fidelizado], [Meta - Canal]\n,REPLACE([Meta - ROB Meta (Venda)], ',', '.') as [Meta - ROB Meta (Venda)]\n,REPLACE([Meta - ROB Meta], ',', '.') as [Meta - ROB Meta]\n\n,ROUND(REPLACE([Meta - Qtde. Meta (Venda)], ',', '.'), 0) as [Meta - Qtde. Meta (Venda)]   -- << #DIFERENTE DA ADULTO, VALORES DECIMAIS ARREDONDADOS#\n,ROUND(REPLACE([Meta - Qtde. Meta], ',', '.'), 0) as [Meta - Qtde. Meta]   -- << #DIFERENTE DA ADULTO, VALORES DECIMAIS ARREDONDADOS#\n\n,REPLACE([Meta - ROL Meta Venda], ',', '.') as [Meta - ROL Meta Venda]\n,REPLACE([Meta - ROL Meta], ',', '.') as [Meta - ROL Meta]\n,REPLACE([Meta - Margem Bruta Meta Venda], ',', '.') as [Meta - Margem Bruta Meta Venda]\n,REPLACE([Meta - Margem Bruta Meta], ',', '.') as [Meta - Margem Bruta Meta]\n,REPLACE([Meta - Margem Liq. Meta Venda], ',', '.') as [Meta - Margem Liq. Meta Venda]\n,REPLACE([Meta - Margem Liq. Meta], ',', '.') as [Meta - Margem Liq. Meta]\n\t,[Meta - Qtde. Aberturas]\n,REPLACE([Meta - Desconto Valor], ',', '.') as [Meta - Desconto Valor]   --<<<<<<<<<<<<<<<<<<<< AUMENTAR casas precison/scale e calcular\n,REPLACE(REPLACE([Meta - Desconto Pct], ',', '.'), '%', '') / 100.0 as [Meta - Desconto Pct]\n\t,[RC - Qtde Prep], [RC - Qtde RC_Prep], [DiasVenda - Qtde], [DiasVenda - Tipo]\n,REPLACE(REPLACE([MetaTM - TM_Pct], ',', '.'), '%', '') / 100.0 as [MetaTM - TM_Pct]\nfrom mm.tmp_ordem_venda\n\n\nPRINT @SEPARATOR + 'Drop tmp_ordem_venda'\nDROP TABLE mm.tmp_ordem_venda\n\n\n\nPRINT @SEPARATOR + 'Transformação dos campos calculados 1'\nUPDATE mm.ordem_venda SET\n\t[OV - Ano (PV Com.)] = RIGHT([OV - PV Comercial], 4)\n\t,[OV - Equipe de Vendas Ajustada] = CASE\n\t\tWHEN [OV - Item Equipe de Vendas] = 'Malwee Infantil' THEN 'Malwee Kids'\n\t\tELSE [OV - Item Equipe de Vendas]\n\tEND\n\n\nPRINT @SEPARATOR + 'Transformação dos campos calculados 2'\nUPDATE mm.ordem_venda SET\n\t[OV - BU Ajustada] = CASE\n\t\tWHEN [OV - Equipe de Vendas Ajustada] IN ('Malwee Adulto', 'Enfim') THEN 'Adulto'\n\t\tWHEN [OV - Equipe de Vendas Ajustada] IN ('Malwee Kids', 'Carinhoso', 'Zig Zig Zaa') THEN 'Infantil'\n\t\tELSE 'Sem Equipe'\n\tEND\n\t,[OV - Produto Grupo Ajustado] = CASE\n\t\tWHEN [OV - Equipe de Vendas Ajustada] IN ('Malwee Adulto', 'Malwee Kids')\n\t\t\tAND [OV - Produto Grupo] IN ('Básicos', 'Basicos', 'Moda', 'Jeans')\n\t\t\tTHEN [OV - Produto Grupo]\n\t\tELSE 'Outros Grupos'\n\tEND\n\n\nDECLARE @COUNT_AFTER BIGINT\nSELECT COUNT_AFTER = COUNT(*) FROM mm.ordem_venda\nSELECT 'IMPORTAÇÃO REALIZADA', GETDATE() AS DT_FINALIZADO, @COUNT_AFTER AS COUNT_AFTER, MAX([pk_OrdemVenda]) AS MAX_PK_OV, MAX([OV - Data Entrada]) AS ULTIMA_DATA_ENTRADA FROM mm.ordem_venda\nPRINT @SEPARATOR + 'FIM: ' + CAST(@COUNT_AFTER AS VARCHAR(30)) + ' OVs'\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Demo OrdemVenda')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nSET QUOTED_IDENTIFIER ON\n\n\nDECLARE @SEPARATOR VARCHAR(30) = '     //     '\nDECLARE @COUNT_BEFORE BIGINT\nSELECT @COUNT_BEFORE = COUNT(*) FROM mm.ordem_venda\nPRINT @SEPARATOR + 'INÍCIO: ' + CAST(@COUNT_BEFORE AS VARCHAR(30)) + ' OVs'\n\n\nPRINT 'Create tmp_ordem_venda'\nCREATE TABLE mm.tmp_ordem_venda\n(\n\t[pk_material] [bigint]  NULL,\n\t[pk_OrdemVenda] [nvarchar](30)  NULL,\n\t[pk_documento_condicao] [bigint]  NULL,\n\t[pk_cliente] [bigint]  NULL,\n\t[pk_representante] [bigint]  NULL,\n\t[OV - PV Comercial] [nvarchar](30)  NULL,\n\t[OV - PV Número] [bigint]  NULL,\n\t[%DataID] [bigint]  NULL,\n\t[OV - Número] [bigint]  NULL,\n\t[OV - Mês Despacho] [nvarchar](30)  NULL,\n\t[OV - Ano Despacho] [smallint]  NULL,\n\t[OV - Tipo Documento] [nvarchar](30)  NULL,\n\t[OV - Grupo Tp.Documento] [nvarchar](30)  NULL,\n\t[OV - Data Entrada] [nvarchar](30)  NULL,\n\t[OV - Ano Entrada] [smallint]  NULL,\n\t[OV - Mes Entrada] [nvarchar](30)  NULL,\n\t[OV - Data Entrada (Dia)] [nvarchar](30)  NULL,\n\t[OV - Programado] [nvarchar](30)  NULL,\n\t[OV - Canal Venda] [nvarchar](30)  NULL,\n\t[OV - Grupo Cliente] [nvarchar](30)  NULL,\n\t[OV - Modalidade] [nvarchar](30)  NULL,\n\t[OV - Entrada Ultimos 10] [nvarchar](30)  NULL,\n\t[OV - Período PV/Ano] [nvarchar](30)  NULL,\n\t[OV - Período PV] [bigint]  NULL,\n\t[OV - Tipo Meta] [nvarchar](30)  NULL,\n\t[OV - Periodo] [nvarchar](30)  NULL,\n\t[OV - Sigla Nome Antigo] [nvarchar](3000)  NULL,\n\t[OV - Sigla Nome] [nvarchar](3000)  NULL,\n\t[OV - Regional] [nvarchar](30)  NULL,\n\t[Meta - Regional] [nvarchar](30)  NULL,\n\t[OV - Modo Envio] [nvarchar](30)  NULL,\n\t[OV - Valor Desconto] [nvarchar](30)  NULL,\n\t[OV - Item Grupo Tamanho] [nvarchar](30)  NULL,\n\t[OV - Item Grupo Alvo] [nvarchar](30)  NULL,\n\t[OV - Item Estação] [nvarchar](30)  NULL,\n\t[OV - Item Estação Ano] [nvarchar](30)  NULL,\n\t[OV - Item Coleção] [nvarchar](30)  NULL,\n\t[OV - Item Qtde] [bigint]  NULL,\n\t[OV - Item Qtde Geral] [bigint]  NULL,\n\t[OV - Item Valor] [nvarchar](30)  NULL,\n\t[OV - Item Valor Unit] [nvarchar](30)  NULL,\n\t[OV - Item Status] [nvarchar](30)  NULL,\n\t[OV - Item Equipe de Vendas] [nvarchar](30)  NULL,\n\t[OV - Item Sigla Nome Ajs] [nvarchar](3000)  NULL,\n\t[OV - Tipo Pedido] [nvarchar](30)  NULL,\n\t[OV - Item Mascara] [nvarchar](30)  NULL,\n\t[OV - BU] [nvarchar](30)  NULL,\n\t[OV Item - Marca Meta] [nvarchar](30)  NULL,\n\t[Rec. Meta Total] [nvarchar](30)  NULL,\n\t[OV - Item Motivo Recusa] [nvarchar](30)  NULL,\n\t[Representante - Codigo Ajustado] [bigint]  NULL,\n\t[OV - Valor Cancelado Antes PV] [bigint]  NULL,\n\t[OV - Valor Cancelado Depois PV] [bigint]  NULL,\n\t[OV - ColecaoAjustada] [nvarchar](30)  NULL,\n\t[OV - Item Valor Geral] [nvarchar](30)  NULL,\n\t[OV - Subcanal] [nvarchar](30)  NULL,\n\t[OV - PV To Date] [nvarchar](30)  NULL,\n\t[OV - Produto Grupo Temp] [nvarchar](30)  NULL,\n\t[OV - Chave SSS Geral] [nvarchar](30)  NULL,\n\t[Margem - PM] [nvarchar](30)  NULL,\n\t[Margem - Custo PÇ] [nvarchar](30)  NULL,\n\t[Margem - Perc. CustoV] [nvarchar](30)  NULL,\n\t[OV - Margem Liq Produto] [nvarchar](30)  NULL,\n\t[OV - SSS Geral] [nvarchar](30)  NULL,\n\t[OV - SSS Ponderado] [nvarchar](30)  NULL,\n\t[OV - Produto Grupo] [nvarchar](30)  NULL,\n\t[OV - Abertura_AnoAtual] [bigint]  NULL,\n\t[OV - Abertura_AnoAnterior] [bigint]  NULL,\n\t[OV - Segmento] [nvarchar](30)  NULL,\n\t[Meta - Quantidade] [nvarchar](30)  NULL,\n\t[Meta - Valor] [nvarchar](30)  NULL,\n\t[Meta - Grupo de Marca] [nvarchar](30)  NULL,\n\t[Meta - Marca] [nvarchar](30)  NULL,\n\t[Meta - Gerente Regional] [nvarchar](30)  NULL,\n\t[Meta - Representante] [nvarchar](3000)  NULL,\n\t[Meta - Representante - Codigo Ajustado] [nvarchar](30)  NULL,\n\t[Meta - Gerente de Área Fidelizado] [nvarchar](30)  NULL,\n\t[Meta - Canal] [nvarchar](30)  NULL,\n\t[Meta - ROB Meta (Venda)] [nvarchar](30)  NULL,\n\t[Meta - ROB Meta] [nvarchar](30)  NULL,\n\t[Meta - Qtde. Meta (Venda)] [nvarchar](30)  NULL,\n\t[Meta - Qtde. Meta] [nvarchar](30)  NULL,\n\t[Meta - ROL Meta Venda] [nvarchar](30)  NULL,\n\t[Meta - ROL Meta] [nvarchar](30)  NULL,\n\t[Meta - Margem Bruta Meta Venda] [nvarchar](30)  NULL,\n\t[Meta - Margem Bruta Meta] [nvarchar](30)  NULL,\n\t[Meta - Margem Liq. Meta Venda] [nvarchar](30)  NULL,\n\t[Meta - Margem Liq. Meta] [nvarchar](30)  NULL,\n\t[Meta - Qtde. Aberturas] [nvarchar](30)  NULL,\n\t[Meta - Desconto Valor] [nvarchar](30)  NULL,\n\t[Meta - Desconto Pct] [nvarchar](30)  NULL,\n\t[RC - Qtde Prep] [nvarchar](30)  NULL,\n\t[RC - Qtde RC_Prep] [nvarchar](30)  NULL,\n\t[DiasVenda - Qtde] [nvarchar](30)  NULL,\n\t[DiasVenda - Tipo] [nvarchar](30)  NULL,\n\t[MetaTM - TM_Pct] [nvarchar](30)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\n\nPRINT @SEPARATOR + 'Copy csv to tmp_ordem_venda'\nCOPY INTO mm.tmp_ordem_venda\n\t(pk_material 1, pk_OrdemVenda 2, pk_documento_condicao 3, pk_cliente 4, pk_representante 5, [OV - PV Comercial] 6, [OV - PV Número] 7, [%DataID] 8, [OV - Número] 9, [OV - Mês Despacho] 10, [OV - Ano Despacho] 11, [OV - Tipo Documento] 12, [OV - Grupo Tp.Documento] 13, [OV - Data Entrada] 14, [OV - Ano Entrada] 15, [OV - Mes Entrada] 16, [OV - Data Entrada (Dia)] 17, [OV - Programado] 18, [OV - Canal Venda] 19, [OV - Grupo Cliente] 20, [OV - Modalidade] 21, [OV - Entrada Ultimos 10] 22, [OV - Período PV/Ano] 23, [OV - Período PV] 24, [OV - Tipo Meta] 25, [OV - Periodo] 26, [OV - Sigla Nome Antigo] 27, [OV - Sigla Nome] 28, [OV - Regional] 29, [Meta - Regional] 30, [OV - Modo Envio] 31, [OV - Valor Desconto] 32, [OV - Item Grupo Tamanho] 33, [OV - Item Grupo Alvo] 34, [OV - Item Estação] 35, [OV - Item Estação Ano] 36, [OV - Item Coleção] 37, [OV - Item Qtde] 38, [OV - Item Qtde Geral] 39, [OV - Item Valor] 40, [OV - Item Valor Unit] 41, [OV - Item Status] 42, [OV - Item Equipe de Vendas] 43, [OV - Item Sigla Nome Ajs] 44, [OV - Tipo Pedido] 45, [OV - Item Mascara] 46, [OV - BU] 47, [OV Item - Marca Meta] 48, [Rec. Meta Total] 49, [OV - Item Motivo Recusa] 50, [Representante - Codigo Ajustado] 51, [OV - Valor Cancelado Antes PV] 52, [OV - Valor Cancelado Depois PV] 53, [OV - ColecaoAjustada] 54, [OV - Item Valor Geral] 55, [OV - Subcanal] 56, [OV - PV To Date] 57, [OV - Produto Grupo Temp] 58, [OV - Chave SSS Geral] 59, [Margem - PM] 60, [Margem - Custo PÇ] 61, [Margem - Perc. CustoV] 62, [OV - Margem Liq Produto] 63, [OV - SSS Geral] 64, [OV - SSS Ponderado] 65, [OV - Produto Grupo] 66, [OV - Abertura_AnoAtual] 67, [OV - Abertura_AnoAnterior] 68, [OV - Segmento] 69, [Meta - Quantidade] 70, [Meta - Valor] 71, [Meta - Grupo de Marca] 72, [Meta - Marca] 73, [Meta - Gerente Regional] 74, [Meta - Representante] 75, [Meta - Representante - Codigo Ajustado] 76, [Meta - Gerente de Área Fidelizado] 77, [Meta - Canal] 78, [Meta - ROB Meta (Venda)] 79, [Meta - ROB Meta] 80, [Meta - Qtde. Meta (Venda)] 81, [Meta - Qtde. Meta] 82, [Meta - ROL Meta Venda] 83, [Meta - ROL Meta] 84, [Meta - Margem Bruta Meta Venda] 85, [Meta - Margem Bruta Meta] 86, [Meta - Margem Liq. Meta Venda] 87, [Meta - Margem Liq. Meta] 88, [Meta - Qtde. Aberturas] 89, [Meta - Desconto Valor] 90, [Meta - Desconto Pct] 91, [RC - Qtde Prep] 92, [RC - Qtde RC_Prep] 93, [DiasVenda - Qtde] 94, [DiasVenda - Tipo] 95, [MetaTM - TM_Pct] 96)\nFROM 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/OrdemVenda.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\n\nPRINT @SEPARATOR + 'Drop ordem_venda'\nDROP TABLE mm.ordem_venda\n\n\nPRINT @SEPARATOR + 'Create ordem_venda'\nCREATE TABLE mm.ordem_venda\n(\n\t[Origem] [nvarchar](10) NOT NULL,\n\t[pk_material] [bigint]  NULL,\n\t[pk_OrdemVenda] [nvarchar](30)  NULL,\n\t[pk_documento_condicao] [bigint]  NULL,\n\t[pk_cliente] [bigint]  NULL,\n\t[pk_representante] [bigint]  NULL,\n\t[OV - PV Comercial] [nvarchar](30)  NULL,\n\t[OV - PV Número] [bigint]  NULL,\n\t[OV - Número] [bigint]  NULL,\n\t[OV - Mês Despacho] [nvarchar](30)  NULL,\n\t[OV - Ano Despacho] [smallint]  NULL,\n\t[OV - Tipo Documento] [nvarchar](30)  NULL,\n\t[OV - Grupo Tp.Documento] [nvarchar](30)  NULL,\n\t[OV - Data Entrada] [date]  NULL,\n\t[OV - Ano Entrada] [smallint]  NULL,\n\t[OV - Mes Entrada] [nvarchar](30)  NULL,\n\t[OV - Data Entrada (Dia)] [nvarchar](30)  NULL,\n\t[OV - Programado] [nvarchar](30)  NULL,\n\t[OV - Canal Venda] [nvarchar](30)  NULL,\n\t[OV - Grupo Cliente] [nvarchar](30)  NULL,\n\t[OV - Modalidade] [nvarchar](30)  NULL,\n\t[OV - Entrada Ultimos 10] [nvarchar](30)  NULL,\n\t[OV - Período PV/Ano] [nvarchar](30)  NULL,\n\t[OV - Período PV] [bigint]  NULL,\n\t[OV - Tipo Meta] [nvarchar](30)  NULL,\n\t[OV - Periodo] [nvarchar](30)  NULL,\n\t[OV - Sigla Nome Antigo] [nvarchar](3000)  NULL,\n\t[OV - Sigla Nome] [nvarchar](3000)  NULL,\n\t[OV - Regional] [nvarchar](30)  NULL,\n\t[Meta - Regional] [nvarchar](30)  NULL,\n\t[OV - Modo Envio] [nvarchar](30)  NULL,\n\t[OV - Valor Desconto] [decimal](19,4)  NULL,\n\t[OV - Item Grupo Tamanho] [nvarchar](30)  NULL,\n\t[OV - Item Grupo Alvo] [nvarchar](30)  NULL,\n\t[OV - Item Estação] [nvarchar](30)  NULL,\n\t[OV - Item Estação Ano] [nvarchar](30)  NULL,\n\t[OV - Item Coleção] [nvarchar](30)  NULL,\n\t[OV - Item Qtde] [bigint]  NULL,\n\t[OV - Item Qtde Geral] [bigint]  NULL,\n\t[OV - Item Valor] [decimal](19,4)  NULL,\n\t[OV - Item Valor Unit] [decimal](19,4)  NULL,\n\t[OV - Item Status] [nvarchar](30)  NULL,\n\t[OV - Item Equipe de Vendas] [nvarchar](30)  NULL,\n\t[OV - Item Sigla Nome Ajs] [nvarchar](3000)  NULL,\n\t[OV - Tipo Pedido] [nvarchar](30)  NULL,\n\t[OV - Item Mascara] [nvarchar](30)  NULL,\n\t[OV - BU] [nvarchar](30)  NULL,\n\t[OV Item - Marca Meta] [nvarchar](30)  NULL,\n\t[Rec. Meta Total] [decimal](19,4)  NULL,\n\t[OV - Item Motivo Recusa] [nvarchar](30)  NULL,\n\t[Representante - Codigo Ajustado] [bigint]  NULL,\n\t[OV - Valor Cancelado Antes PV] [decimal](19,4)  NULL,\n\t[OV - Valor Cancelado Depois PV] [decimal](19,4)  NULL,\n\t[OV - ColecaoAjustada] [nvarchar](30)  NULL,\n\t[OV - Item Valor Geral] [decimal](19,4)  NULL,\n\t[OV - Subcanal] [nvarchar](30)  NULL,\n\t[OV - PV To Date] [nvarchar](30)  NULL,\n\t[OV - Produto Grupo Temp] [nvarchar](30)  NULL,\n\t[OV - Chave SSS Geral] [nvarchar](30)  NULL,\n\t[Margem - PM] [decimal](19,4)  NULL,\n\t[Margem - Custo PÇ] [decimal](19,4)  NULL,\n\t[Margem - Perc. CustoV] [decimal](19,4)  NULL,\n\t[OV - Margem Liq Produto] [decimal](19,4)  NULL,\n\t[OV - SSS Geral] [nvarchar](30)  NULL,\n\t[OV - SSS Ponderado] [nvarchar](30)  NULL,\n\t[OV - Produto Grupo] [nvarchar](30)  NULL,\n\t[OV - Abertura_AnoAtual] [bigint]  NULL,\n\t[OV - Abertura_AnoAnterior] [bigint]  NULL,\n\t[OV - Segmento] [nvarchar](30)  NULL,\n\t[Meta - Quantidade] [bigint]  NULL,\n\t[Meta - Valor] [decimal](19,4)  NULL,\n\t[Meta - Grupo de Marca] [nvarchar](30)  NULL,\n\t[Meta - Marca] [nvarchar](30)  NULL,\n\t[Meta - Gerente Regional] [nvarchar](50)  NULL,\n\t[Meta - Representante] [nvarchar](50)  NULL,\n\t[Meta - Representante - Codigo Ajustado] [nvarchar](30)  NULL,\n\t[Meta - Gerente de Área Fidelizado] [nvarchar](50)  NULL,\n\t[Meta - Canal] [nvarchar](30)  NULL,\n\t[Meta - ROB Meta (Venda)] [decimal](19,4)  NULL,\n\t[Meta - ROB Meta] [decimal](19,4)  NULL,\n\t[Meta - Qtde. Meta (Venda)] [bigint]  NULL,\n\t[Meta - Qtde. Meta] [bigint]  NULL,\n\t[Meta - ROL Meta Venda] [decimal](19,4)  NULL,\n\t[Meta - ROL Meta] [decimal](19,4)  NULL,\n\t[Meta - Margem Bruta Meta Venda] [decimal](19,4)  NULL,\n\t[Meta - Margem Bruta Meta] [decimal](19,4)  NULL,\n\t[Meta - Margem Liq. Meta Venda] [decimal](19,4)  NULL,\n\t[Meta - Margem Liq. Meta] [decimal](19,4)  NULL,\n\t[Meta - Qtde. Aberturas] [bigint]  NULL,\n\t[Meta - Desconto Valor] [decimal](19,4)  NULL,\n\t[Meta - Desconto Pct] [decimal](19,4)  NULL,\n\t[RC - Qtde Prep] [bigint]  NULL,\n\t[RC - Qtde RC_Prep] [bigint]  NULL,\n\t[DiasVenda - Qtde] [bigint]  NULL,\n\t[DiasVenda - Tipo] [nvarchar](30)  NULL,\n\t[MetaTM - TM_Pct] [decimal](19,4),\n\t--- CAMPOS CALCULADOS ---\n\t[OV - Ano (PV Com.)] [nvarchar](4)  NULL,\n\t[OV - BU Ajustada] [nvarchar](30)  NULL,\n\t[OV - Equipe de Vendas Ajustada] [nvarchar](30)  NULL,\n\t[OV - Produto Grupo Ajustado] [nvarchar](30)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\n\nPRINT @SEPARATOR + 'Insert tmp to ordem_venda'\ninsert into mm.ordem_venda\n \t(Origem, pk_material, pk_OrdemVenda, pk_documento_condicao, pk_cliente, pk_representante, [OV - PV Comercial], [OV - PV Número], [OV - Número], [OV - Mês Despacho], [OV - Ano Despacho], [OV - Tipo Documento], [OV - Grupo Tp.Documento], [OV - Data Entrada], [OV - Ano Entrada], [OV - Mes Entrada], [OV - Data Entrada (Dia)], [OV - Programado], [OV - Canal Venda], [OV - Grupo Cliente], [OV - Modalidade], [OV - Entrada Ultimos 10], [OV - Período PV/Ano], [OV - Período PV], [OV - Tipo Meta], [OV - Periodo], [OV - Sigla Nome Antigo], [OV - Sigla Nome], [OV - Regional], [Meta - Regional], [OV - Modo Envio], [OV - Valor Desconto], [OV - Item Grupo Tamanho], [OV - Item Grupo Alvo], [OV - Item Estação], [OV - Item Estação Ano], [OV - Item Coleção], [OV - Item Qtde], [OV - Item Qtde Geral], [OV - Item Valor], [OV - Item Valor Unit], [OV - Item Status], [OV - Item Equipe de Vendas], [OV - Item Sigla Nome Ajs], [OV - Tipo Pedido], [OV - Item Mascara], [OV - BU], [OV Item - Marca Meta], [Rec. Meta Total], [OV - Item Motivo Recusa], [Representante - Codigo Ajustado], [OV - Valor Cancelado Antes PV], [OV - Valor Cancelado Depois PV], [OV - ColecaoAjustada], [OV - Item Valor Geral], [OV - Subcanal], [OV - PV To Date], [OV - Produto Grupo Temp], [OV - Chave SSS Geral], [Margem - PM],  [Margem - Custo PÇ],  [Margem - Perc. CustoV], [OV - Margem Liq Produto], [OV - SSS Geral], [OV - SSS Ponderado], [OV - Produto Grupo], [OV - Abertura_AnoAtual], [OV - Abertura_AnoAnterior], [OV - Segmento], [Meta - Quantidade], [Meta - Valor], [Meta - Grupo de Marca], [Meta - Marca], [Meta - Gerente Regional], [Meta - Representante], [Meta - Representante - Codigo Ajustado], [Meta - Gerente de Área Fidelizado], [Meta - Canal], [Meta - ROB Meta (Venda)], [Meta - ROB Meta], [Meta - Qtde. Meta (Venda)], [Meta - Qtde. Meta], [Meta - ROL Meta Venda], [Meta - ROL Meta], [Meta - Margem Bruta Meta Venda], [Meta - Margem Bruta Meta], [Meta - Margem Liq. Meta Venda], [Meta - Margem Liq. Meta], [Meta - Qtde. Aberturas], [Meta - Desconto Valor], [Meta - Desconto Pct], [RC - Qtde Prep], [RC - Qtde RC_Prep], [DiasVenda - Qtde], [DiasVenda - Tipo], [MetaTM - TM_Pct])\nselect\n\t'Adulto' as Origem,\n\tpk_material, pk_OrdemVenda, pk_documento_condicao, pk_cliente, pk_representante, [OV - PV Comercial], [OV - PV Número], [OV - Número], [OV - Mês Despacho], [OV - Ano Despacho], [OV - Tipo Documento], [OV - Grupo Tp.Documento]\n,CONVERT(datetime, [OV - Data Entrada], 103) as [OV - Data Entrada],\n\t[OV - Ano Entrada], [OV - Mes Entrada], [OV - Data Entrada (Dia)], [OV - Programado], [OV - Canal Venda], [OV - Grupo Cliente], [OV - Modalidade], [OV - Entrada Ultimos 10], [OV - Período PV/Ano], [OV - Período PV], [OV - Tipo Meta], [OV - Periodo], [OV - Sigla Nome Antigo], [OV - Sigla Nome], [OV - Regional], [Meta - Regional], [OV - Modo Envio]\n,REPLACE([OV - Valor Desconto], ',', '.') as [OV - Valor Desconto]\n\t,[OV - Item Grupo Tamanho], [OV - Item Grupo Alvo], [OV - Item Estação], [OV - Item Estação Ano], [OV - Item Coleção], [OV - Item Qtde], [OV - Item Qtde Geral]\n,REPLACE([OV - Item Valor], ',', '.') as [OV - Item Valor]\n,REPLACE([OV - Item Valor Unit], ',', '.') as [OV - Item Valor Unit]\n\t,[OV - Item Status], [OV - Item Equipe de Vendas], [OV - Item Sigla Nome Ajs], [OV - Tipo Pedido], [OV - Item Mascara], [OV - BU], [OV Item - Marca Meta]\n,REPLACE([Rec. Meta Total], ',', '.') as [Rec. Meta Total]\n\t, [OV - Item Motivo Recusa], [Representante - Codigo Ajustado]\n,REPLACE([OV - Valor Cancelado Antes PV], ',', '.') as [OV - Valor Cancelado Antes PV]\n,REPLACE([OV - Valor Cancelado Depois PV], ',', '.') as [OV - Valor Cancelado Depois PV]\n\t, [OV - ColecaoAjustada]\n,REPLACE([OV - Item Valor Geral], ',', '.') as [OV - Item Valor Geral]\n\t,[OV - Subcanal], [OV - PV To Date], [OV - Produto Grupo Temp], [OV - Chave SSS Geral]\n,REPLACE([Margem - PM], ',', '.') as [Margem - PM]\n,NULLIF(REPLACE([Margem - Custo PÇ], ',', '.'), '---') as [Margem - Custo PÇ]\n,REPLACE([Margem - Perc. CustoV], ',', '.') as [Margem - Perc. CustoV]  --<<<<<<<<<<<<<<<<<<<< AUMENTAR casas precison/scale\n, CAST(CAST(REPLACE([OV - Margem Liq Produto], ',', '.') AS float) AS [decimal](19,4)) as [OV - Margem Liq Produto]  --<<<<<<<<<<<<<<<<<<<< AUMENTAR casas precison/scale \n\t,[OV - SSS Geral], [OV - SSS Ponderado], [OV - Produto Grupo], [OV - Abertura_AnoAtual], [OV - Abertura_AnoAnterior], [OV - Segmento], [Meta - Quantidade]\n,REPLACE([Meta - Valor], ',', '.') as [Meta - Valor]\n\t,[Meta - Grupo de Marca],[Meta - Marca],[Meta - Gerente Regional], [Meta - Representante], [Meta - Representante - Codigo Ajustado], [Meta - Gerente de Área Fidelizado], [Meta - Canal]\n,REPLACE([Meta - ROB Meta (Venda)], ',', '.') as [Meta - ROB Meta (Venda)]\n,REPLACE([Meta - ROB Meta], ',', '.') as [Meta - ROB Meta]\n\t,[Meta - Qtde. Meta (Venda)] ,[Meta - Qtde. Meta]\n,REPLACE([Meta - ROL Meta Venda], ',', '.') as [Meta - ROL Meta Venda]\n,REPLACE([Meta - ROL Meta], ',', '.') as [Meta - ROL Meta]\n,REPLACE([Meta - Margem Bruta Meta Venda], ',', '.') as [Meta - Margem Bruta Meta Venda]\n,REPLACE([Meta - Margem Bruta Meta], ',', '.') as [Meta - Margem Bruta Meta]\n,REPLACE([Meta - Margem Liq. Meta Venda], ',', '.') as [Meta - Margem Liq. Meta Venda]\n,REPLACE([Meta - Margem Liq. Meta], ',', '.') as [Meta - Margem Liq. Meta]\n\t,[Meta - Qtde. Aberturas]\n,REPLACE([Meta - Desconto Valor], ',', '.') as [Meta - Desconto Valor]   --<<<<<<<<<<<<<<<<<<<< AUMENTAR casas precison/scale e calcular\n,REPLACE(REPLACE([Meta - Desconto Pct], ',', '.'), '%', '') / 100.0 as [Meta - Desconto Pct]\n\t,[RC - Qtde Prep], [RC - Qtde RC_Prep], [DiasVenda - Qtde], [DiasVenda - Tipo]\n,REPLACE(REPLACE([MetaTM - TM_Pct], ',', '.'), '%', '') / 100.0 as [MetaTM - TM_Pct]\nfrom mm.tmp_ordem_venda\n\n\nPRINT @SEPARATOR + 'Truncate tmp_ordem_venda'\nTRUNCATE TABLE mm.tmp_ordem_venda\n\n\nDECLARE @COUNT_AFTER BIGINT\nSELECT @COUNT_AFTER = COUNT(*) FROM mm.ordem_venda\nSELECT 'IMPORTAÇÃO REALIZADA', GETDATE() AS DT_FINALIZADO, @COUNT_AFTER AS COUNT_AFTER, MAX([pk_OrdemVenda]) AS MAX_PK_OV, MAX([OV - Data Entrada]) AS ULTIMA_DATA_ENTRADA FROM mm.ordem_venda\nPRINT @SEPARATOR + 'FIM: ' + CAST(@COUNT_AFTER AS VARCHAR(30)) + ' OVs'\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Demo Produto')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\n\nDECLARE @SEPARATOR VARCHAR(30) = '     //     '\nDECLARE @COUNT_BEFORE BIGINT\nSELECT @COUNT_BEFORE = COUNT(*) FROM mm.produto\nPRINT @SEPARATOR + 'INÍCIO: ' + CAST(@COUNT_BEFORE AS VARCHAR(30)) + ' PRODUTOS'\n\n\nPRINT 'Create tmp_produto'\nCREATE TABLE mm.tmp_produto\n( \n\t[pk_material] [bigint]  NULL,\n\t[Código] [bigint]  NULL,\n\t[Descrição] [nvarchar](3000)  NULL,\n\t[Descrição-Código] [nvarchar](3000)  NULL,\n\t[Linha Produto] [nvarchar](30)  NULL,\n\t[Destino Confecção] [nvarchar](30)  NULL,\n\t[Categoria] [nvarchar](30)  NULL,\n\t[Básico/Moda] [nvarchar](30)  NULL,\n\t[Espécie] [nvarchar](30)  NULL,\n\t[Espécie Detalhada] [nvarchar](30)  NULL,\n\t[Categoria Linha] [nvarchar](30)  NULL,\n\t[Ocasião] [nvarchar](30)  NULL,\n\t[Genero] [nvarchar](30)  NULL,\n\t[Segmento] [nvarchar](30)  NULL,\n\t[Campanha] [nvarchar](30)  NULL,\n\t[Marca] [nvarchar](30)  NULL,\n\t[Empresa Licenciado] [nvarchar](30)  NULL,\n\t[MateriaPrima] [nvarchar](30)  NULL,\n\t[Personagem Licenciado] [nvarchar](30)  NULL,\n\t[SubLinha] [nvarchar](30)  NULL,\n\t[Grade] [nvarchar](30)  NULL,\n\t[Permanência] [nvarchar](30)  NULL,\n\t[Qualidade] [nvarchar](30)  NULL,\n\t[Tipo Mascara] [nvarchar](30)  NULL,\n\t[Metros Kilo] [nvarchar](30)  NULL,\n\t[Embalagem] [nvarchar](30)  NULL,\n\t[Ultima Estação] [nvarchar](30)  NULL,\n\t[Ultima Coleção] [nvarchar](30)  NULL,\n\t[Modelo Capsula] [nvarchar](30)  NULL,\n\t[Hierarquia Descrição] [nvarchar](3000)  NULL,\n\t[URL Foto] [nvarchar](3000)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\n\nPRINT @SEPARATOR + 'Copy csv to tmp_produto'\nCOPY INTO mm.tmp_produto\nFROM 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/Produto.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,FIRSTROW = 2\n\t,ERRORFILE = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw/brazil/demo/errors'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\n\nPRINT @SEPARATOR + 'Drop produto'\nDROP TABLE mm.produto\n\n\nPRINT @SEPARATOR + 'Create produto'\nCREATE TABLE mm.produto\n( \n\t[pk_material] [bigint]  NOT NULL,\n\t[Produto - Código] [bigint]  NULL,\n\t[Produto - Descrição] [nvarchar](3000)  NULL,\n\t[Produto - Descrição-Código] [nvarchar](3000)  NULL,\n\t[Produto - Linha Produto] [nvarchar](30)  NULL,\n\t[Produto - Destino Confecção] [nvarchar](30)  NULL,\n\t[Produto - Categoria] [nvarchar](30)  NULL,\n\t[Produto - Básico/Moda] [nvarchar](30)  NULL,\n\t[Produto - Espécie] [nvarchar](30)  NULL,\n\t[Produto - Espécie Detalhada] [nvarchar](30)  NULL,\n\t[Produto - Categoria Linha] [nvarchar](30)  NULL,\n\t[Produto - Ocasião] [nvarchar](30)  NULL,\n\t[Produto - Genero] [nvarchar](30)  NULL,\n\t[Produto - Segmento] [nvarchar](30)  NULL,\n\t[Produto - Campanha] [nvarchar](30)  NULL,\n\t[Produto - Marca] [nvarchar](30)  NULL,\n\t[Produto - Empresa Licenciado] [nvarchar](30)  NULL,\n\t[Produto - MateriaPrima] [nvarchar](30)  NULL,\n\t[Produto - Personagem Licenciado] [nvarchar](30)  NULL,\n\t[Produto - SubLinha] [nvarchar](30)  NULL,\n\t[Produto - Grade] [nvarchar](30)  NULL,\n\t[Produto - Permanência] [nvarchar](30)  NULL,\n\t[Produto - Qualidade] [nvarchar](30)  NULL,\n\t[Produto - Tipo Mascara] [nvarchar](30)  NULL,\n\t[Produto - Metros Kilo] [decimal](19,4)  NULL,\n\t[Produto - Embalagem] [nvarchar](30)  NULL,\n\t[Produto - Ultima Estação] [nvarchar](30)  NULL,\n\t[Produto - Ultima Coleção] [nvarchar](30)  NULL,\n\t[Produto - Modelo Capsula] [nvarchar](30)  NULL,\n\t[Produto - Hierarquia Descrição] [nvarchar](3000)  NULL,\n\t[Produto - URL Foto] [nvarchar](3000)  NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\n\nPRINT @SEPARATOR + 'Insert tmp to produto'\ninsert into mm.produto (\n\t\t[pk_material],\n\t\t[Produto - Código],\n\t\t[Produto - Descrição],\n\t\t[Produto - Descrição-Código],\n\t\t[Produto - Linha Produto],\n\t\t[Produto - Destino Confecção],\n\t\t[Produto - Categoria],\n\t\t[Produto - Básico/Moda],\n\t\t[Produto - Espécie],\n\t\t[Produto - Espécie Detalhada],\n\t\t[Produto - Categoria Linha],\n\t\t[Produto - Ocasião],\n\t\t[Produto - Genero],\n\t\t[Produto - Segmento],\n\t\t[Produto - Campanha],\n\t\t[Produto - Marca],\n\t\t[Produto - Empresa Licenciado],\n\t\t[Produto - MateriaPrima],\n\t\t[Produto - Personagem Licenciado],\n\t\t[Produto - SubLinha],\n\t\t[Produto - Grade],\n\t\t[Produto - Permanência],\n\t\t[Produto - Qualidade],\n\t\t[Produto - Tipo Mascara],\n\t\t[Produto - Metros Kilo],\n\t\t[Produto - Embalagem],\n\t\t[Produto - Ultima Estação],\n\t\t[Produto - Ultima Coleção],\n\t\t[Produto - Modelo Capsula],\n\t\t[Produto - Hierarquia Descrição],\n\t\t[Produto - URL Foto]\n\t)\nselect pk_material,\n\tCódigo,\n\tDescrição,\n\t[Descrição-Código],\n\t[Linha Produto],\n\t[Destino Confecção],\n\tCategoria,\n\t[Básico/Moda],\n\tEspécie,\n\t[Espécie Detalhada],\n\t[Categoria Linha],\n\tOcasião,\n\tGenero,\n\tSegmento,\n\tCampanha,\n\tMarca,\n\t[Empresa Licenciado],\n\tMateriaPrima,\n\t[Personagem Licenciado],\n\tSubLinha,\n\tGrade,\n\tPermanência,\n\tQualidade,\n\t[Tipo Mascara],\n\tREPLACE([Metros Kilo], ',', '.') as [Metros Kilo],\n\tEmbalagem,\n\t[Ultima Estação],\n\t[Ultima Coleção],\n\t[Modelo Capsula],\n\t[Hierarquia Descrição],\n\t[URL Foto]\nfrom mm.tmp_produto\n\n\nPRINT @SEPARATOR + 'Drop tmp_produto'\nDROP TABLE mm.tmp_produto\n\n\nDECLARE @COUNT_AFTER BIGINT\nSELECT @COUNT_AFTER = COUNT(*) FROM mm.produto\nSELECT 'IMPORTAÇÃO REALIZADA', GETDATE() AS DT_FINALIZADO, @COUNT_AFTER AS COUNT_AFTER, MAX([pk_material]) AS MAX_PK_MATERIAL FROM mm.produto\nPRINT @SEPARATOR + 'FIM: ' + CAST(@COUNT_AFTER AS VARCHAR(30)) + ' PRODUTOS'\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GerarRawCategoriesVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE RawDataOrderCategories (\n\t[orderId] varchar(8000),\n\t[brandName] varchar(8000),\n\t[brandId] varchar(8000),\n\t[categoriesid] varchar(8000),\n\t[categoriesname] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/VtextOrderCategories.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM RawDataOrderCategories\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GerarRawDataOrderItemsAttachVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE RawDataOrderItemsAttachVtex (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[content] varchar(8000),\n\t[name] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/VtextOrderitemsattachment.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM RawDataOrderItemsAttachVtex\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GerarRawDataOrderItemsFullVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE RawDataOrderItemsFullVtex (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[content] varchar(8000),\n\t[name] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/VtextOrderitemsfull.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM RawDataOrderItemsFullVtex\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GerarRawDataOrderLogisticVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE RawDataOrderLogisticsVtex (\n\t[itemIndex1] varchar(8000),\n\t[selectedSla1] varchar(8000),\n\t[lockTTL1] varchar(8000),\n\t[price1] varchar(8000),\n\t[listPrice1] varchar(8000),\n\t[sellingPrice1] varchar(8000),\n\t[deliveryWindow1] varchar(8000),\n\t[deliveryCompany1] varchar(8000),\n\t[shippingEstimate1] varchar(8000),\n\t[shippingEstimateDate1] varchar(8000),\n\t[idsla] varchar(8000),\n\t[namesla] varchar(8000),\n\t[shippingEstimate4] varchar(8000),\n\t[deliveryWindow2] varchar(8000),\n\t[price2] varchar(8000),\n\t[deliveryChannel] varchar(8000),\n\t[polygonName4] varchar(8000),\n\t[lockTTL2] varchar(8000),\n\t[pickupPointId1] varchar(8000),\n\t[transitTime1] varchar(8000),\n\t[deliveryChannel1] varchar(8000),\n\t[addressId2] varchar(8000),\n\t[polygonName1] varchar(8000),\n\t[pickupPointId] varchar(8000),\n\t[transitTime] varchar(8000),\n\t[idshipping] varchar(8000),\n\t[addressType1] varchar(8000),\n\t[receiverName1] varchar(8000),\n\t[addressId1] varchar(8000),\n\t[postalCode1] varchar(8000),\n\t[city1] varchar(8000),\n\t[state1] varchar(8000),\n\t[country1] varchar(8000),\n\t[street1] varchar(8000),\n\t[number1] varchar(8000),\n\t[neighborhood1] varchar(8000),\n\t[complement1] varchar(8000),\n\t[reference1] varchar(8000),\n\t[geocoordinates1] varchar(8000),\n\t[trackingHints] varchar(8000),\n\t[orderId] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/VtextOrderLogistics.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM RawDataOrderLogisticsVtex\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GerarRawDataOrderSellerVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE RawDataOrderSellerVtex (\n\t[orderId] varchar(8000),\n\t[id] varchar(8000),\n\t[name] varchar(8000),\n\t[logo] varchar(8000),\n\t[fulfillmentEndpoint] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/VtextOrderSeller.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM RawDataOrderSellerVtex\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OLD_PROOTIPO FATO VENDA')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/cigam"
				},
				"content": {
					"query": " INSERT INTO ODS.PRE_CARGA_FATO_VENDA_DEVOLUCAO\n SELECT  \n CONVERT(INT,REPLACE(CONVERT(VARCHAR,CONVERT(DATE,DATA_CONFIRMACAO)),'-',''))                       AS DATA_CONFIRMACAO\n ,CONVERT(VARCHAR(5), LOJA.ESTAB_IDCIGAM)                                                           AS ESTAB_IDCIGAM\n ,CONVERT(INT, VENDAS.VENDEDOR_CODIGO )                                                          AS VENDEDOR_CODIGO\n ,CONVERT(INT,CLIENTE.CLIENTE_CODIGO)                                                               AS CLIENTE_CODIGO\n ,CONVERT(VARCHAR(20), PRODUTO.PRODUTO_REFERENCIA )                                                 AS PRODUTO_REFERENCIA\n , UPPER(CONVERT(VARCHAR(50),ISNULL(VENDAS.MODALIDADE_VENDA,'NÃO INFORMADO')))                      AS MODALIDADE_VENDA\n ,CASE\n    WHEN VENDAS.TIPO_MOVIMENTO = 'V' THEN CONVERT(VARCHAR(15),'VENDA') \n    ELSE CONVERT(VARCHAR(15),'NÃO INFORMADO') \n END                                                                                                AS TIPO_MOVIMENTO \n ,CONVERT(INT,VENDAS.NUMERO_DOCTO)                                                                  AS NUMERO_DOCTO\n ,CONVERT(INT,VENDAS.QTD_ITEM)                                                                      AS VENDAS_QTD_ITEM\n ,CONVERT(NUMERIC(18,2),VENDAS.VALOR_UNITARIO)                                                      AS VENDAS_VALOR_UNITARIO\n ,CONVERT(NUMERIC(18,2),VENDAS.VALOR_TOTAL_ITEM)                                                    AS VENDAS_VALOR_TOTAL_ITEM\n ,0                                                                                                 AS DEVOLUCAO_QTD_ITEM\n ,0                                                                                                 AS DEVOLUCAO_VALOR_UNITARIO\n ,0                                                                                                 AS DEVOLUCAO_VALOR_TOTAL_ITEM\n FROM CLEANSING_DATA.GST_BI_VENDAS                                                                  AS VENDAS\n LEFT JOIN CLEANSING_DATA.GST_BI_ESTABELECIMENTO AS LOJA ON VENDAS.IDLOJA_CIGAM = LOJA.ESTAB_IDCIGAM\n LEFT JOIN CLEANSING_DATA.GST_BI_PRODUTOS AS PRODUTO ON VENDAS.PRODUTO_REFERENCIA =  PRODUTO.PRODUTO_REFERENCIA \n LEFT JOIN CLEANSING_DATA.GST_BI_CLIENTES AS CLIENTE ON \n           VENDAS.IDLOJA_CIGAM = CLIENTE.ESTAB_IDCIGAM AND \n           VENDAS.CLIENTE_CODIGO = CLIENTE.CLIENTE_CODIGO\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OLD_fato sem vbep')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/sap"
				},
				"content": {
					"query": "--select sum(convert(numeric(18,2),NETWR)) as NETWR,\n--sum(convert(numeric(18,2),KWMENG)) as KWMENG\n--from cleansing_data.sap_vbap where VBELN = '0001289876'\n\n--select sum(convert(numeric(18,2),KWERT)) as KWERT,\n--sum(convert(numeric(18,2),KAWRT))  as KAWRT\n--from cleansing_data.sap_konv\n--where KSTAT is null  and KSCHL in('ZCMI','ICMI','ZNFC')\n--and  VBELN = '0001289876'\n\n\n;with vbak_vbap_cte as\n(\nselect \nconcat(vbak.KNUMV,vbap.POSNR) as pk_vbak_vbap\n,vbap.VBELN\t\n,vbap.POSNR\t  \n,vbap.MATNR\t\n,vbap.PSTYV\t\n,vbap.UMZIZ\t\n,vbap.UMZIN\t\n,vbap.NETWR\t\n,vbap.KWMENG\t\n,vbap.VRKME\t\n,vbap.WERKS\n,vbak.ERDAT\t\n,vbak.ERNAM\t\n,vbak.AUDAT\t\n,vbak.VBTYP\t\n,vbak.AUART\t\n,vbak.VKORG\t\n,vbak.VTWEG\t\n,vbak.SPART\t\n,vbak.VKGRP\t\n,vbak.VKBUR\t\n,vbak.KNUMV\t\n,vbak.VDATU\t\n,vbak.BSARK\t\n,vbak.KUNNR\t\n,vbak.AEDAT\t\n,vbak.KVGR3\t\n,vbak.BUKRS_VF\nfrom cleansing_data.sap_vbap as vbap   \nleft join cleansing_data.sap_vbak as vbak on vbap.VBELN = vbak.VBELN\nwhere vbap.VBELN\t='0001260624'\n) \n,konv_cte \nas\n(\n \tselect \n\tconcat(KNUMV,KPOSN) as pk_konv_cte\n\t,KNUMV\t\n\t,KPOSN\t\n\t,STUNR\t\n\t,ZAEHK\t\n\t,KSCHL\t\n\t,KWERT\t\n\t,KAWRT\t\n\t,KBETR\t\n\t,KSTAT\t\n\t,KDATU\t\n\t,VBELN\t\n\tfrom cleansing_data.sap_konv\n\twhere KSTAT is null  and KSCHL in('ZCMI','ICMI','ZNFC')\n\tand VBELN\t='0001260624'\n)\n\nselect \n--vbak_vbap_cte.VBELN\t\n--vbak_vbap_cte.POSNR\t  \n--,vbak_vbap_cte.MATNR\t\n--,vbak_vbap_cte.PSTYV\t\n--,vbak_vbap_cte.UMZIZ\t\n--,vbak_vbap_cte.UMZIN\t\n--,vbak_vbap_cte.NETWR\t\n--,vbak_vbap_cte.KWMENG\t\n--,vbak_vbap_cte.VRKME\t\n--,vbak_vbap_cte.WERKS\n--,vbak_vbap_cte.ERDAT\t\n--,vbak_vbap_cte.ERNAM\t\n--,vbak_vbap_cte.AUDAT\t\n--,vbak_vbap_cte.VBTYP\t\n--,vbak_vbap_cte.AUART\t\n--,vbak_vbap_cte.VKORG\t\n--,vbak_vbap_cte.VTWEG\t\n--,vbak_vbap_cte.SPART\t\n--,vbak_vbap_cte.VKGRP\t\n--,vbak_vbap_cte.VKBUR\t\n--,vbak_vbap_cte.KNUMV\t\n--,vbak_vbap_cte.VDATU\t\n--,vbak_vbap_cte.BSARK\t\n--,vbak_vbap_cte.KUNNR\t\n--,vbak_vbap_cte.AEDAT\t\n--,vbak_vbap_cte.KVGR3\t\n--,vbak_vbap_cte.BUKRS_VF\n--,konv_cte.KPOSN\t\n--,konv_cte.STUNR\t\n--,konv_cte.ZAEHK\t\n--,konv_cte.KSCHL\t\n--,konv_cte.KWERT\t\n--,konv_cte.KAWRT\t\n--,konv_cte.KBETR\t\n--,konv_cte.KSTAT\t\n--,konv_cte.KDATU\t\nvbak_vbap_cte.VBELN\n,vbak_vbap_cte.POSNR\t  \n,vbak_vbap_cte.MATNR\n,sum(convert(numeric(18,2),vbak_vbap_cte.NETWR)) as NETWR\n,sum(convert(numeric(18,2),vbak_vbap_cte.KWMENG)) as KWMENG\n,sum(convert(numeric(18,2),konv_cte.KWERT)) as KWERT\n,sum(convert(numeric(18,2),konv_cte.KAWRT)) as KAWRT\nfrom vbak_vbap_cte inner join konv_cte on \nvbak_vbap_cte.pk_vbak_vbap = konv_cte.pk_konv_cte\ngroup by  vbak_vbap_cte.VBELN,vbak_vbap_cte.POSNR\t  \n,vbak_vbap_cte.MATNR\n\n \n\n  ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OLD_script fato vbep')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/sap"
				},
				"content": {
					"query": "---VBAK, -> VBAP -> VBEP\nselect \nvbap.VBELN\t\n,vbap.POSNR\t\n,vbap.MATNR\t\n,vbap.PSTYV\t\n,vbap.UMZIZ\t\n,vbap.UMZIN\t\n,vbap.KWMENG\t\n,vbap.VRKME\t\n,vbap.WERKS\t\n,vbap.J_3ASEAN\t\n,vbak.VBELN\t\n,vbak.ERDAT\t\n,vbak.ERNAM\t\n,vbak.AUDAT\t\n,vbak.VBTYP\t\n,vbak.AUART\t\n,vbak.FAKSK\t\n,vbak.VKORG\t\n,vbak.VTWEG\t\n,vbak.SPART\t\n,vbak.VKGRP\t\n,vbak.VKBUR\t\n,vbak.KNUMV\t\n,vbak.VDATU\t\n,vbak.BSARK\t\n,vbak.KUNNR\t\n,vbak.AEDAT\t\n,vbak.KVGR3\t\n,vbak.BUKRS_VF\n,vbep.VBELN\t\n,vbep.POSNR\t\n,vbep.ETENR\t\n,vbep.WMENG\t\n,vbep.J_3ASIZE\t\n,vbep.J_3ASZGR\t\n,sum(vbep.J_3ANETW) as J_3ANETW\n,sum(vbap.NETWR) as NETWR\t\n,sum(convert(numeric(18,2),konv_k.KWERT)) as KWERT_k\n,sum(convert(numeric(18,2),konv_b.KWERT)) as KWERT_b\n--,vbap.NETWR\nfrom cleansing_data.sap_vbap as vbap   \nleft join cleansing_data.sap_vbak as vbak on vbap.VBELN = vbak.VBELN\n--left join cleansing_data.sap_tvagt  as tvagt on tvagt. = vbap.VRKME\n--cleansing_data.sap_t006a\nleft join cleansing_data.sap_vbep as vbep on \n\t\tvbep.VBELN  = vbap.VBELN  and \n\t\tvbep.POSNR  = vbap.POSNR \n\n\nleft join cleansing_data.sap_konv  as konv_k  on  konv_k.KNUMV = vbak.KNUMV \nleft join cleansing_data.sap_konv  as konv_b  on  konv_b.KPOSN = vbep.POSNR and konv_b.KSTAT <> 'X' \nand konv_b.KSCHL in('ZCMI','ICMI','ZNFC')\nwhere vbap.VBELN = '0001413005' --and vbap.MATNR\t= '000000001000059056'\ngroup by \nvbap.VBELN\t\n,vbap.POSNR\t\n,vbap.MATNR\t\n,vbap.PSTYV\t\n,vbap.UMZIZ\t\n,vbap.UMZIN\t\n,vbap.KWMENG\t\n,vbap.VRKME\t\n,vbap.WERKS\t\n,vbap.J_3ASEAN\t\n,vbak.VBELN\t\n,vbak.ERDAT\t\n,vbak.ERNAM\t\n,vbak.AUDAT\t\n,vbak.VBTYP\t\n,vbak.AUART\t\n,vbak.FAKSK\t\n,vbak.VKORG\t\n,vbak.VTWEG\t\n,vbak.SPART\t\n,vbak.VKGRP\t\n,vbak.VKBUR\t\n,vbak.KNUMV\t\n,vbak.VDATU\t\n,vbak.BSARK\t\n,vbak.KUNNR\t\n,vbak.AEDAT\t\n,vbak.KVGR3\t\n,vbak.BUKRS_VF\n,vbep.VBELN\t\n,vbep.POSNR\t\n,vbep.ETENR\t\n,vbep.WMENG\t\n,vbep.J_3ASIZE\t\n,vbep.J_3ASZGR\t\n\n /***** cte ****/\n ;with vbap_vbep_cte as\n(\nselect \nconcat(vbak.KNUMV,vbep.POSNR) as pk_vbap_vbep\n,vbap.VBELN\tas vbap_VBELN\n,vbap.POSNR\tas vbap_POSNR\n,vbap.MATNR\t\n,vbap.PSTYV\t\n,vbap.UMZIZ\t\n,vbap.UMZIN\t\n,vbap.KWMENG\t\n,vbap.VRKME\t\n,vbap.WERKS\t\n,vbap.J_3ASEAN\t\n,vbak.VBELN\t as vbak_VBELN\n,vbak.ERDAT\t\n,vbak.ERNAM\t\n,vbak.AUDAT\t\n,vbak.VBTYP\t\n,vbak.AUART\t\n,vbak.FAKSK\t\n,vbak.VKORG\t\n,vbak.VTWEG\t\n,vbak.SPART\t\n,vbak.VKGRP\t\n,vbak.VKBUR\t\n,vbak.KNUMV\t\n,vbak.VDATU\t\n,vbak.BSARK\t\n,vbak.KUNNR\t\n,vbak.AEDAT\t\n,vbak.KVGR3\t\n,vbak.BUKRS_VF\n,vbep.VBELN\t\n,vbep.POSNR\t as vbep_POSNR\n,vbep.ETENR\t\n,vbep.WMENG\t\n,vbep.J_3ASIZE\t\n,vbep.J_3ASZGR\t\n,vbep.J_3ANETW\n,vbap.NETWR\n--,vbap.NETWR\nfrom cleansing_data.sap_vbap as vbap   \nleft join cleansing_data.sap_vbak as vbak on vbap.VBELN = vbak.VBELN\n--left join cleansing_data.sap_tvagt  as tvagt on tvagt. = vbap.VRKME\n--cleansing_data.sap_t006a\nleft join cleansing_data.sap_vbep as vbep on \n\t\tvbep.VBELN  = vbap.VBELN  and \n\t\tvbep.POSNR  = vbap.POSNR \nwhere vbap.VBELN = '0001413005' and vbap.MATNR\t= '000000001000059056'\n) \n,konv_cte \nas\n(\n\tselect \n\tconcat(KNUMV,KPOSN) as pk_konv_cte\n\t,KNUMV\t\n\t,KPOSN\t\n\t,STUNR\t\n\t,ZAEHK\t\n\t,KSCHL\t\n\t,KWERT\t\n\t,KAWRT\t\n\t,KBETR\t\n\t,KSTAT\t\n\t,KDATU\t\n\t,KINAK\t\n\t,VBELN from cleansing_data.sap_konv\n\twhere KSTAT <> 'X' and KSCHL in('ZCMI','ICMI','ZNFC')\n)\n\nselect vbap_vbep_cte.*, konv_cte.*\nfrom vbap_vbep_cte left join konv_cte on \n\nvbap_vbep_cte.pk_vbap_vbep = konv_cte.pk_konv_cte\n\n'0006049695000900'\n\nselect KNUMV from cleansing_data.sap_konv\nwhere KNUMV = '0006049695'\n\t\t\t   \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrderTotalVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_order_totals (\n\t[orderId] varchar(8000),\n\t[sequence] varchar(8000),\n\t[id] varchar(8000),\n\t[name] varchar(8000),\n\t[value] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Order_Total/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_order_totals\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OrderVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_order (\n\t[orderId] varchar(8000),\n\t[sequence] varchar(8000),\n\t[marketplaceOrderId] varchar(8000),\n\t[sellerOrderId] varchar(8000),\n\t[origin] varchar(8000),\n\t[affiliateId] varchar(8000),\n\t[salesChannel] varchar(8000),\n\t[merchantName] varchar(8000),\n\t[status] varchar(8000),\n\t[statusDescription] varchar(8000),\n\t[value] varchar(8000),\n\t[creationDate] varchar(8000),\n\t[orderGroup] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Order/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_order\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SAPTABLE raw cawn')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://raw@sadevbrdatalakemalwee.dfs.core.windows.net', \n\t\tTYPE     = HADOOP \n\t)\nGO\n\nCREATE EXTERNAL TABLE raw_data.sap_cawn (\n\t[MANDT] varchar(8000),\n\t[ATINN] varchar(8000),\n\t[ATZHL] varchar(8000),\n\t[ADZHL] varchar(8000),\n\t[ATWRT] varchar(8000),\n\t[ATFLV] float,\n\t[ATFLB] float,\n\t[ATCOD] varchar(8000),\n\t[ATSTD] varchar(8000),\n\t[ATAWE] varchar(8000),\n\t[ATAW1] varchar(8000),\n\t[ATIDN] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[TXTNR] varchar(8000),\n\t[DATUV] varchar(8000),\n\t[TECHV] varchar(8000),\n\t[AENNR] varchar(8000),\n\t[LKENZ] varchar(8000),\n\t[DOKAR] varchar(8000),\n\t[DOKNR] varchar(8000),\n\t[DOKVR] varchar(8000),\n\t[DOKTL] varchar(8000),\n\t[ATZHH] varchar(8000),\n\t[KNOBJ] varchar(8000),\n\t[ATWHI] varchar(8000),\n\t[ATTLV] float,\n\t[ATTLB] float,\n\t[ATPRZ] varchar(8000),\n\t[ATINC] float,\n\t[ATVPL] varchar(8000),\n\t[DATA_HORA_EXPORTACAO] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/cawn/2021/02/18/cawn_202102181452.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat],\n\tREJECT_TYPE = VALUE,\n\tREJECT_VALUE = 0\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.sap_cawn\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SCD CLIENTE')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "DATA CLEANSING"
				},
				"content": {
					"query": "TRUNCATE TABLE  temp.clientes_processamento\nTRUNCATE TABLE  temp.clientes_final\n\ninsert into temp.clientes_processamento\nselect   \nconcat(ESTAB_IDCIGAM, CONVERT(INT,CLIENTE_CODIGO)) as PK_CLIENTE\n,[ESTAB_IDCIGAM]\n,[CLIENTE_CODIGO]\n,[CLIENTE_NOME]\n,[CLIENTE_CPFCNPJ]\n,[CLIENTE_EMAIL]\n,[CLIENTE_CIDADE]\n,[CLIENTE_ESTADO]\n,[CLIENTE_SEXO]\n,[CLIENTE_ANIVERSARIO]\n,[CLIENTE_DDD_CELULAR]\n,[CLIENTE_CELULAR]\n,[CLIENTE_ENDERECO]\n,[CLIENTE_NUMERO]\n,[CLIENTE_COMPLEMENTO]\n,[CLIENTE_BAIRRO]\n,[CLIENTE_CEP]\n,[NUM_MATRICULA]\n,'SEM ALTERACAO' AS TIPO_ACAO\n,FLAG_VIGENCIA\n,DAT_INICIO_VIGENCIA\n,DAT_FINAL_VIGENCIA \nfrom [cleansing_data].[gst_bi_clientes]\n\ninsert into temp.clientes_final\nselect    \n PK_CLIENTE\n,[ESTAB_IDCIGAM]\n,[CLIENTE_CODIGO]\n,[CLIENTE_NOME]\n,[CLIENTE_CPFCNPJ]\n,[CLIENTE_EMAIL]\n,[CLIENTE_CIDADE]\n,[CLIENTE_ESTADO]\n,[CLIENTE_SEXO]\n,[CLIENTE_ANIVERSARIO]\n,[CLIENTE_DDD_CELULAR]\n,[CLIENTE_CELULAR]\n,[CLIENTE_ENDERECO]\n,[CLIENTE_NUMERO]\n,[CLIENTE_COMPLEMENTO]\n,[CLIENTE_BAIRRO]\n,[CLIENTE_CEP]\n,[NUM_MATRICULA]\n,FLAG_VIGENCIA\n,DAT_INICIO_VIGENCIA\n,DAT_FINAL_VIGENCIA \nfrom temp.clientes_processamento\n\nMERGE  temp.clientes_processamento AS CLIENTE \nUSING(\n\t    select   \n         concat(ESTAB_IDCIGAM, CONVERT(INT,CLIENTE_CODIGO)) as PK_CLIENTE\n        ,[ESTAB_IDCIGAM]\n        ,[CLIENTE_CODIGO]\n        ,[CLIENTE_NOME]\n        ,[CLIENTE_CPFCNPJ]\n        ,[CLIENTE_EMAIL]\n        ,[CLIENTE_CIDADE]\n        ,[CLIENTE_ESTADO]\n        ,[CLIENTE_SEXO]\n        ,[CLIENTE_ANIVERSARIO]\n        ,[CLIENTE_DDD_CELULAR]\n        ,[CLIENTE_CELULAR]\n        ,[CLIENTE_ENDERECO]\n        ,[CLIENTE_NUMERO]\n        ,[CLIENTE_COMPLEMENTO]\n        ,[CLIENTE_BAIRRO]\n        ,[CLIENTE_CEP]\n        ,[NUM_MATRICULA]\n        ,1 as FLAG_VIGENCIA \n        ,getdate() as DAT_INICIO_VIGENCIA\n        ,null DAT_FINAL_VIGENCIA \n        from [raw_data].[cigam_gst_bi_cliente]\n        WHERE DAT_HORA_EXPORTACAO = '2021-02-23 14:15'\n) AS DL ON (DL.PK_CLIENTE = CLIENTE.PK_CLIENTE)\n\tWHEN NOT MATCHED BY TARGET THEN INSERT (\n                                                    PK_CLIENTE\n                                                    ,ESTAB_IDCIGAM\n                                                    ,CLIENTE_CODIGO\n                                                    ,CLIENTE_NOME\n                                                    ,CLIENTE_CPFCNPJ\n                                                    ,CLIENTE_EMAIL\n                                                    ,CLIENTE_CIDADE\n                                                    ,CLIENTE_ESTADO\n                                                    ,CLIENTE_SEXO\n                                                    ,CLIENTE_ANIVERSARIO\n                                                    ,CLIENTE_DDD_CELULAR\n                                                    ,CLIENTE_CELULAR\n                                                    ,CLIENTE_ENDERECO\n                                                    ,CLIENTE_NUMERO\n                                                    ,CLIENTE_COMPLEMENTO\n                                                    ,CLIENTE_BAIRRO\n                                                    ,CLIENTE_CEP\n                                                    ,NUM_MATRICULA\n                                                    ,TIPO_ACAO\n                                                    ,FLAG_VIGENCIA\n                                                    ,DAT_INICIO_VIGENCIA\n                                                    ,DAT_FINAL_VIGENCIA\n                                               )\n\t\t\t\t\t\t\t\t\tVALUES (DL.PK_CLIENTE\n                                            ,DL.ESTAB_IDCIGAM\n                                            ,DL.CLIENTE_CODIGO\n                                            ,DL.CLIENTE_NOME\n                                            ,DL.CLIENTE_CPFCNPJ\n                                            ,DL.CLIENTE_EMAIL\n                                            ,DL.CLIENTE_CIDADE\n                                            ,DL.CLIENTE_ESTADO\n                                            ,DL.CLIENTE_SEXO\n                                            ,DL.CLIENTE_ANIVERSARIO\n                                            ,DL.CLIENTE_DDD_CELULAR\n                                            ,DL.CLIENTE_CELULAR\n                                            ,DL.CLIENTE_ENDERECO\n                                            ,DL.CLIENTE_NUMERO\n                                            ,DL.CLIENTE_COMPLEMENTO\n                                            ,DL.CLIENTE_BAIRRO\n                                            ,DL.CLIENTE_CEP\n                                            ,DL.NUM_MATRICULA\n                                            ,'INSERT'\n                                            ,DL.FLAG_VIGENCIA\n                                            ,DL.DAT_INICIO_VIGENCIA\n                                            ,DL.DAT_FINAL_VIGENCIA)\n    WHEN MATCHED AND (  CLIENTE.CLIENTE_NOME != DL.CLIENTE_NOME OR\n                        CLIENTE.CLIENTE_CPFCNPJ  != DL.CLIENTE_CPFCNPJ OR\n                        CLIENTE.CLIENTE_EMAIL  != DL.CLIENTE_EMAIL OR\n                        CLIENTE.CLIENTE_CIDADE  != DL.CLIENTE_CIDADE OR\n                        CLIENTE.CLIENTE_ESTADO  != DL.CLIENTE_ESTADO OR\n                        CLIENTE.CLIENTE_SEXO  != DL.CLIENTE_SEXO OR\n                        CLIENTE.CLIENTE_ANIVERSARIO  != DL.CLIENTE_ANIVERSARIO OR\n                        CLIENTE.CLIENTE_DDD_CELULAR  != DL.CLIENTE_DDD_CELULAR OR\n                        CLIENTE.CLIENTE_CELULAR  != DL.CLIENTE_CELULAR OR\n                        CLIENTE.CLIENTE_ENDERECO  != DL.CLIENTE_ENDERECO OR\n                        CLIENTE.CLIENTE_NUMERO  != DL.CLIENTE_NUMERO OR\n                        CLIENTE.CLIENTE_COMPLEMENTO  != DL.CLIENTE_COMPLEMENTO OR\n                        CLIENTE.CLIENTE_BAIRRO  != DL.CLIENTE_BAIRRO OR\n                        CLIENTE.CLIENTE_CEP  != DL.CLIENTE_CEP OR\n                        CLIENTE.NUM_MATRICULA  != DL.NUM_MATRICULA )\n    THEN UPDATE SET \n                    CLIENTE.CLIENTE_NOME = DL.CLIENTE_NOME \n                    ,CLIENTE.CLIENTE_CPFCNPJ  = DL.CLIENTE_CPFCNPJ\n                    ,CLIENTE.CLIENTE_EMAIL  = DL.CLIENTE_EMAIL\n                    ,CLIENTE.CLIENTE_CIDADE  = DL.CLIENTE_CIDADE\n                    ,CLIENTE.CLIENTE_ESTADO  = DL.CLIENTE_ESTADO\n                    ,CLIENTE.CLIENTE_SEXO  = DL.CLIENTE_SEXO\n                    ,CLIENTE.CLIENTE_ANIVERSARIO  = DL.CLIENTE_ANIVERSARIO\n                    ,CLIENTE.CLIENTE_DDD_CELULAR  = DL.CLIENTE_DDD_CELULAR\n                    ,CLIENTE.CLIENTE_CELULAR  = DL.CLIENTE_CELULAR\n                    ,CLIENTE.CLIENTE_ENDERECO  = DL.CLIENTE_ENDERECO\n                    ,CLIENTE.CLIENTE_NUMERO  = DL.CLIENTE_NUMERO\n                    ,CLIENTE.CLIENTE_COMPLEMENTO  = DL.CLIENTE_COMPLEMENTO\n                    ,CLIENTE.CLIENTE_BAIRRO  = DL.CLIENTE_BAIRRO\n                    ,CLIENTE.CLIENTE_CEP  = DL.CLIENTE_CEP\n                    ,CLIENTE.NUM_MATRICULA  = DL.NUM_MATRICULA\n                    ,TIPO_ACAO = 'UPDATE'\n                    ,CLIENTE.FLAG_VIGENCIA  =1\n                    ,CLIENTE.DAT_INICIO_VIGENCIA  =GETDATE()\n                    ,CLIENTE.DAT_FINAL_VIGENCIA  = NULL;\n\ninsert into  temp.clientes_final  \nselect \n PK_CLIENTE\n,[ESTAB_IDCIGAM]\n,[CLIENTE_CODIGO]\n,[CLIENTE_NOME]\n,[CLIENTE_CPFCNPJ]\n,[CLIENTE_EMAIL]\n,[CLIENTE_CIDADE]\n,[CLIENTE_ESTADO]\n,[CLIENTE_SEXO]\n,[CLIENTE_ANIVERSARIO]\n,[CLIENTE_DDD_CELULAR]\n,[CLIENTE_CELULAR]\n,[CLIENTE_ENDERECO]\n,[CLIENTE_NUMERO]\n,[CLIENTE_COMPLEMENTO]\n,[CLIENTE_BAIRRO]\n,[CLIENTE_CEP]\n,[NUM_MATRICULA]\n,FLAG_VIGENCIA \n,DAT_INICIO_VIGENCIA\n,DAT_FINAL_VIGENCIA  from temp.clientes_processamento where \n tipo_acao = 'insert'\n\nupdate temp.clientes_final   \nset \nflag_vigencia = 0, \ndat_final_vigencia = getdate()\nwhere PK_CLIENTE in (select  PK_CLIENTE  from temp.clientes_processamento where  tipo_acao = 'update')\nand flag_vigencia = 1\n\ninsert into  temp.clientes_final  \nselect \n PK_CLIENTE\n,[ESTAB_IDCIGAM]\n,[CLIENTE_CODIGO]\n,[CLIENTE_NOME]\n,[CLIENTE_CPFCNPJ]\n,[CLIENTE_EMAIL]\n,[CLIENTE_CIDADE]\n,[CLIENTE_ESTADO]\n,[CLIENTE_SEXO]\n,[CLIENTE_ANIVERSARIO]\n,[CLIENTE_DDD_CELULAR]\n,[CLIENTE_CELULAR]\n,[CLIENTE_ENDERECO]\n,[CLIENTE_NUMERO]\n,[CLIENTE_COMPLEMENTO]\n,[CLIENTE_BAIRRO]\n,[CLIENTE_CEP]\n,[NUM_MATRICULA]\n,FLAG_VIGENCIA \n,DAT_INICIO_VIGENCIA\n,DAT_FINAL_VIGENCIA  from temp.clientes_processamento where \n tipo_acao = 'UPDATE'\n\n\n\n        \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SCD PRODUTO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "DATA CLEANSING"
				},
				"content": {
					"query": "TRUNCATE TABLE  temp.cigam_produtos_processamento\nTRUNCATE TABLE  temp.cigam_produtos_final\n\ninsert into temp.cigam_produtos_processamento\nselect \nconvert(varchar(25),PRODUTO_REFERENCIATAM) as pk_produto\n,PRODUTO_MODELO \n,PRODUTO_REFERENCIA \n,PRODUTO_DESCRICAO \n,PRODUTO_COLECAO \n,PRODUTO_SUBCOLECAO \n,PRODUTO_LINHA \n,PRODUTO_ARTIGO \n,PRODUTO_COMPL_ARTIGO \n,PRODUTO_COR \n,PRODUTO_COR_FRANQUEADORA \n,PRODUTO_GENERO \n,PRODUTO_MARCA \n,PRODUTO_GRUPOALVO \n,PRODUTO_MATERIAL \n,PRODUTO_REFERENCIATAM \n,PRODUTO_EAN \n,PRODUTO_TAMANHO \n,PRODUTO_UNIDADEMED \n,PRODUTO_ATIVO \n,'SEM ALTERACAO' AS TIPO_ACAO\n,FLAG_VIGENCIA \n,DAT_INICIO_VIGENCIA \n,DAT_FINAL_VIGENCIA\nfrom cleansing_data.cigam_gst_bi_produtos\n\n\n\n\ninsert into temp.cigam_produtos_final\nselect \nconvert(varchar(25),PRODUTO_REFERENCIATAM) as pk_produto\n,PRODUTO_MODELO \n,PRODUTO_REFERENCIA \n,PRODUTO_DESCRICAO \n,PRODUTO_COLECAO \n,PRODUTO_SUBCOLECAO \n,PRODUTO_LINHA \n,PRODUTO_ARTIGO \n,PRODUTO_COMPL_ARTIGO \n,PRODUTO_COR \n,PRODUTO_COR_FRANQUEADORA \n,PRODUTO_GENERO \n,PRODUTO_MARCA \n,PRODUTO_GRUPOALVO \n,PRODUTO_MATERIAL \n,PRODUTO_REFERENCIATAM \n,PRODUTO_EAN \n,PRODUTO_TAMANHO \n,PRODUTO_UNIDADEMED \n,PRODUTO_ATIVO \n,FLAG_VIGENCIA \n,DAT_INICIO_VIGENCIA \n,DAT_FINAL_VIGENCIA\nfrom cleansing_data.cigam_gst_bi_produtos\n\nMERGE  temp.cigam_produtos_processamento AS produto \nUSING(\n\t    select \n\t\tconvert(varchar(25),PRODUTO_REFERENCIATAM) as pk_produto\n\t\t,PRODUTO_MODELO \n\t\t,PRODUTO_REFERENCIA \n\t\t,PRODUTO_DESCRICAO \n\t\t,PRODUTO_COLECAO \n\t\t,PRODUTO_SUBCOLECAO \n\t\t,PRODUTO_LINHA \n\t\t,PRODUTO_ARTIGO \n\t\t,PRODUTO_COMPL_ARTIGO \n\t\t,PRODUTO_COR \n\t\t,PRODUTO_COR_FRANQUEADORA \n\t\t,PRODUTO_GENERO \n\t\t,PRODUTO_MARCA \n\t\t,PRODUTO_GRUPOALVO \n\t\t,PRODUTO_MATERIAL \n\t\t,PRODUTO_REFERENCIATAM \n\t\t,PRODUTO_EAN \n\t\t,PRODUTO_TAMANHO \n\t\t,PRODUTO_UNIDADEMED \n\t\t,PRODUTO_ATIVO \n        ,1 as FLAG_VIGENCIA \n        ,getdate() as DAT_INICIO_VIGENCIA\n        ,null DAT_FINAL_VIGENCIA \n\t\tfrom\n\t\t[raw_data].[cigam_gst_bi_produtos]\n\t\tWHERE DAT_HORA_EXPORTACAO = '2021-03-02 14:09:16.963'\n) AS DL ON (DL.pk_produto = produto.pk_produto)\n\tWHEN NOT MATCHED BY TARGET THEN INSERT (\n                                                 pk_produto\n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_MODELO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_REFERENCIA \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_DESCRICAO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_COLECAO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_SUBCOLECAO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_LINHA \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_ARTIGO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_COMPL_ARTIGO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_COR \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_COR_FRANQUEADORA \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_GENERO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_MARCA \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_GRUPOALVO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_MATERIAL \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_REFERENCIATAM \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_EAN \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_TAMANHO \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_UNIDADEMED \n\t\t\t\t\t\t\t\t\t\t\t\t,PRODUTO_ATIVO \n\t\t\t\t\t\t\t\t\t\t\t\t,FLAG_VIGENCIA \n\t\t\t\t\t\t\t\t\t\t\t\t,DAT_INICIO_VIGENCIA\n\t\t\t\t\t\t\t\t\t\t\t\t,DAT_FINAL_VIGENCIA \n                                               )\n\t\t\t\t\t\t\t\t\tVALUES ( DL.pk_produto\n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_MODELO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_REFERENCIA \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_DESCRICAO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_COLECAO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_SUBCOLECAO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_LINHA \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_ARTIGO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_COMPL_ARTIGO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_COR \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_COR_FRANQUEADORA \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_GENERO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_MARCA \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_GRUPOALVO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_MATERIAL \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_REFERENCIATAM \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_EAN \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_TAMANHO \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_UNIDADEMED \n\t\t\t\t\t\t\t\t\t\t\t,DL.PRODUTO_ATIVO \n                                            ,'INSERT'\n                                            ,DL.FLAG_VIGENCIA\n                                            ,DL.DAT_INICIO_VIGENCIA\n                                            ,DL.DAT_FINAL_VIGENCIA)\n\t\tWHEN MATCHED AND (  produto.PRODUTO_MODELO != PRODUTO_MODELO or\n\t\t\t\t\t\t\tproduto.PRODUTO_REFERENCIA  != PRODUTO_REFERENCIA or\n\t\t\t\t\t\t\tproduto.PRODUTO_DESCRICAO  != PRODUTO_DESCRICAO or\n\t\t\t\t\t\t\tproduto.PRODUTO_COLECAO  != PRODUTO_COLECAO or\n\t\t\t\t\t\t\tproduto.PRODUTO_SUBCOLECAO  != PRODUTO_SUBCOLECAO or\n\t\t\t\t\t\t\tproduto.PRODUTO_LINHA  != PRODUTO_LINHA or\n\t\t\t\t\t\t\tproduto.PRODUTO_ARTIGO  != PRODUTO_ARTIGO or\n\t\t\t\t\t\t\tproduto.PRODUTO_COMPL_ARTIGO  != PRODUTO_COMPL_ARTIGO or\n\t\t\t\t\t\t\tproduto.PRODUTO_COR  != PRODUTO_COR or\n\t\t\t\t\t\t\tproduto.PRODUTO_COR_FRANQUEADORA  != PRODUTO_COR_FRANQUEADORA or\n\t\t\t\t\t\t\tproduto.PRODUTO_GENERO  != PRODUTO_GENERO or\n\t\t\t\t\t\t\tproduto.PRODUTO_MARCA  != PRODUTO_MARCA or\n\t\t\t\t\t\t\tproduto.PRODUTO_GRUPOALVO  != PRODUTO_GRUPOALVO or\n\t\t\t\t\t\t\tproduto.PRODUTO_MATERIAL  != PRODUTO_MATERIAL or\n\t\t\t\t\t\t\tproduto.PRODUTO_EAN  != PRODUTO_EAN or\n\t\t\t\t\t\t\tproduto.PRODUTO_TAMANHO  != PRODUTO_TAMANHO or\n\t\t\t\t\t\t\tproduto.PRODUTO_UNIDADEMED  != PRODUTO_UNIDADEMED or\n\t\t\t\t\t\t\tproduto.PRODUTO_ATIVO  != PRODUTO_ATIVO )\n    THEN UPDATE SET \n\t\t\t\t\t\tproduto.PRODUTO_MODELO != PRODUTO_MODELO or\n\t\t\t\t\t\tproduto.PRODUTO_REFERENCIA  != PRODUTO_REFERENCIA or\n\t\t\t\t\t\tproduto.PRODUTO_DESCRICAO  != PRODUTO_DESCRICAO or\n\t\t\t\t\t\tproduto.PRODUTO_COLECAO  != PRODUTO_COLECAO or\n\t\t\t\t\t\tproduto.PRODUTO_SUBCOLECAO  != PRODUTO_SUBCOLECAO or\n\t\t\t\t\t\tproduto.PRODUTO_LINHA  != PRODUTO_LINHA or\n\t\t\t\t\t\tproduto.PRODUTO_ARTIGO  != PRODUTO_ARTIGO or\n\t\t\t\t\t\tproduto.PRODUTO_COMPL_ARTIGO  != PRODUTO_COMPL_ARTIGO or\n\t\t\t\t\t\tproduto.PRODUTO_COR  != PRODUTO_COR or\n\t\t\t\t\t\tproduto.PRODUTO_COR_FRANQUEADORA  != PRODUTO_COR_FRANQUEADORA or\n\t\t\t\t\t\tproduto.PRODUTO_GENERO  != PRODUTO_GENERO or\n\t\t\t\t\t\tproduto.PRODUTO_MARCA  != PRODUTO_MARCA or\n\t\t\t\t\t\tproduto.PRODUTO_GRUPOALVO  != PRODUTO_GRUPOALVO or\n\t\t\t\t\t\tproduto.PRODUTO_MATERIAL  != PRODUTO_MATERIAL or\n\t\t\t\t\t\tproduto.PRODUTO_EAN  != PRODUTO_EAN or\n\t\t\t\t\t\tproduto.PRODUTO_TAMANHO  != PRODUTO_TAMANHO or\n\t\t\t\t\t\tproduto.PRODUTO_UNIDADEMED  != PRODUTO_UNIDADEMED or\n\t\t\t\t\t\tproduto.PRODUTO_ATIVO  != PRODUTO_ATIVO\n\t\t\t\t\t\t,produto.TIPO_ACAO = 'UPDATE'\n\t\t\t\t\t\t,produto.FLAG_VIGENCIA  =1\n\t\t\t\t\t\t,produto.DAT_INICIO_VIGENCIA  =GETDATE()\n\t\t\t\t\t\t,produto.DAT_FINAL_VIGENCIA  = NULL;\n\n\n\n\n\ninsert into  temp.cigam_produtos_final  \nselect \n pk_produto\n,PRODUTO_MODELO \n,PRODUTO_REFERENCIA \n,PRODUTO_DESCRICAO \n,PRODUTO_COLECAO \n,PRODUTO_SUBCOLECAO \n,PRODUTO_LINHA \n,PRODUTO_ARTIGO \n,PRODUTO_COMPL_ARTIGO \n,PRODUTO_COR \n,PRODUTO_COR_FRANQUEADORA \n,PRODUTO_GENERO \n,PRODUTO_MARCA \n,PRODUTO_GRUPOALVO \n,PRODUTO_MATERIAL \n,PRODUTO_REFERENCIATAM \n,PRODUTO_EAN \n,PRODUTO_TAMANHO \n,PRODUTO_UNIDADEMED \n,PRODUTO_ATIVO \n,FLAG_VIGENCIA \n,DAT_INICIO_VIGENCIA\n,DAT_FINAL_VIGENCIA   from temp.cigam_produtos_processamento where \n tipo_acao = 'insert'\n\nupdate temp.cigam_produtos_final   \nset \nflag_vigencia = 0, \ndat_final_vigencia = getdate()\nwhere pk_produto in (select  pk_produto  from temp.cigam_produtos_processamento where  tipo_acao = 'update')\nand flag_vigencia = 1\n\ninsert into  temp.cigam_produtos_final  \nselect \n pk_produto\n,PRODUTO_MODELO \n,PRODUTO_REFERENCIA \n,PRODUTO_DESCRICAO \n,PRODUTO_COLECAO \n,PRODUTO_SUBCOLECAO \n,PRODUTO_LINHA \n,PRODUTO_ARTIGO \n,PRODUTO_COMPL_ARTIGO \n,PRODUTO_COR \n,PRODUTO_COR_FRANQUEADORA \n,PRODUTO_GENERO \n,PRODUTO_MARCA \n,PRODUTO_GRUPOALVO \n,PRODUTO_MATERIAL \n,PRODUTO_REFERENCIATAM \n,PRODUTO_EAN \n,PRODUTO_TAMANHO \n,PRODUTO_UNIDADEMED \n,PRODUTO_ATIVO \n,FLAG_VIGENCIA \n,DAT_INICIO_VIGENCIA\n,DAT_FINAL_VIGENCIA  from temp.cigam_produtos_processamento where \n tipo_acao = 'UPDATE'\n\n\n\n        \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\n\ninsert into temp.cigam_gts_bi_clientes (ESTAB_IDCIGAM,CLIENTE_NOME,CLIENTE_CPFCNPJ,CLIENTE_EMAIL,CLIENTE_CIDADE,\nCLIENTE_ESTADO,CLIENTE_SEXO, CLIENTE_ANIVERSARIO,CLIENTE_DDD_CELULAR,CLIENTE_CELULAR,CLIENTE_ENDERECO,CLIENTE_NUMERO,\nCLIENTE_COMPLEMENTO, CLIENTE_BAIRRO,CLIENTE_CEP,NUM_MATRICULA,DAT_HORA_EXPORTACAO,FLAG_VIGENCIA,DAT_INICIO_VIGENCIA,\nDAT_FINAL_VIGENCIA)\nSELECT ESTAB_IDCIGAM,CLIENTE_NOME,CLIENTE_CPFCNPJ,CLIENTE_EMAIL,CLIENTE_CIDADE,CLIENTE_ESTADO,CLIENTE_SEXO, CLIENTE_ANIVERSARIO,\nCLIENTE_DDD_CELULAR,CLIENTE_CELULAR,CLIENTE_ENDERECO,CLIENTE_NUMERO,CLIENTE_COMPLEMENTO, CLIENTE_BAIRRO,CLIENTE_CEP,NUM_MATRICULA,\nDAT_HORA_EXPORTACAO,FLAG_VIGENCIA,DAT_INICIO_VIGENCIA,DAT_FINAL_VIGENCIA\nFROM (\nMERGE  temp.cigam_gts_bi_clientes   temp\nusing(\n    select top(100) ESTAB_IDCIGAM, \n    CLIENTE_CODIGO, \n    CLIENTE_NOME, \n    CLIENTE_CPFCNPJ, \n    CLIENTE_EMAIL, \n    CLIENTE_CIDADE, \n    CLIENTE_ESTADO, \n    CLIENTE_SEXO, \n    CLIENTE_ANIVERSARIO, \n    CLIENTE_DDD_CELULAR, \n    CLIENTE_CELULAR, \n    CLIENTE_ENDERECO, \n    CLIENTE_NUMERO, \n    CLIENTE_COMPLEMENTO, \n    CLIENTE_BAIRRO, \n    CLIENTE_CEP, \n    NUM_MATRICULA, \n    DAT_HORA_EXPORTACAO, \n    FLAG_VIGENCIA, \n    getdate()   DAT_INICIO_VIGENCIA, \n    null DAT_FINAL_VIGENCIA from [raw_data].[cigam_gst_bi_cliente]\n    where convert(date,DAT_HORA_EXPORTACAO) = '2021-02-22T00:00:00.0000000'\n) as raw on (temp.CLIENTE_CODIGO = raw.CLIENTE_CODIGO)\n                WHEN  NOT MATCHED BY TARGET then \n                insert (ESTAB_IDCIGAM,CLIENTE_CODIGO,CLIENTE_NOME,CLIENTE_CPFCNPJ,CLIENTE_EMAIL,CLIENTE_CIDADE,CLIENTE_ESTADO,CLIENTE_SEXO, \n                                        CLIENTE_ANIVERSARIO,CLIENTE_DDD_CELULAR,CLIENTE_CELULAR,CLIENTE_ENDERECO,CLIENTE_NUMERO,CLIENTE_COMPLEMENTO, \n                                        CLIENTE_BAIRRO,CLIENTE_CEP,NUM_MATRICULA,DAT_HORA_EXPORTACAO,FLAG_VIGENCIA,DAT_INICIO_VIGENCIA,DAT_FINAL_VIGENCIA)\n                                values (\n                                        raw.ESTAB_IDCIGAM,raw.CLIENTE_CODIGO,raw.CLIENTE_NOME,raw.CLIENTE_CPFCNPJ,raw.CLIENTE_EMAIL,raw.CLIENTE_CIDADE,raw.CLIENTE_ESTADO,raw.CLIENTE_SEXO, \n                                        raw.CLIENTE_ANIVERSARIO,raw.CLIENTE_DDD_CELULAR,raw.CLIENTE_CELULAR,raw.CLIENTE_ENDERECO,raw.CLIENTE_NUMERO,raw.CLIENTE_COMPLEMENTO, \n                                        raw.CLIENTE_BAIRRO,raw.CLIENTE_CEP,raw.NUM_MATRICULA,raw.DAT_HORA_EXPORTACAO,raw.FLAG_VIGENCIA,raw.DAT_INICIO_VIGENCIA,raw.DAT_FINAL_VIGENCIA\n                                ) \n                WHEN MATCHED AND  (raw.cliente_codigo != temp.cliente_codigo) and temp.DAT_FINAL_VIGENCIA is null \n                then update set temp.DAT_FINAL_VIGENCIA    = getdate(), temp.flag_vigencia = 0\n                OUTPUT $ACTION ACTION_TAKEN,\n                raw.ESTAB_IDCIGAM,\n                raw.CLIENTE_NOME,\n                raw.CLIENTE_CPFCNPJ,\n                raw.CLIENTE_EMAIL,\n                raw.CLIENTE_CIDADE,\n                raw.CLIENTE_ESTADO,\n                raw.CLIENTE_SEXO, \n                raw.CLIENTE_ANIVERSARIO,\n                raw.CLIENTE_DDD_CELULAR,\n                raw.CLIENTE_CELULAR,\n                raw.CLIENTE_ENDERECO,\n                raw.CLIENTE_NUMERO,\n                raw.CLIENTE_COMPLEMENTO, \n                raw.CLIENTE_BAIRRO,\n                raw.CLIENTE_CEP,\n                raw.NUM_MATRICULA,\n                raw.DAT_HORA_EXPORTACAO,\n                raw.FLAG_VIGENCIA,\n                raw.DAT_INICIO_VIGENCIA,\n                raw.DAT_FINAL_VIGENCIA\n) AS MERGE_OUT\nWHERE  MERGE_OUT.ACTION_TAKEN = 'UPDATE';\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": " select top(1000) \n convert(date,DATA_CONFIRMACAO) as DATA_CONFIRMACAO\n ,Vendas.IDLOJA_CIGAM\n ,Loja.* \n ,Vendas.NUMERO_DOCTO\n ,Vendas.CLIENTE_CODIGO\n ,Cliente.*\n ,Vendas.VENDEDOR_CODIGO\n ,Vendas.VENDEDOR_NOME\n ,Vendas.MODALIDADE_VENDA\n ,Vendas.TIPO_MOVIMENTO\n ,Vendas.PRODUTO\n ,Produto.*\n ,Vendas.CODIGO_BARRAS  \n ,Vendas.QTD_ITEM\n ,Vendas.VALOR_UNITARIO\n ,Vendas.VALOR_TOTAL_ITEM\n from cleansing_data.GST_BI_VENDAS  as Vendas\n left join cleansing_data.gst_bi_estabelecimento as Loja on Vendas.IDLOJA_CIGAM = Loja.estab_idcigam\n left join cleansing_data.gst_bi_produtos as Produto on Vendas.PRODUTO =  Produto.Produto_modelo \n left join cleansing_data.gst_bi_clientes as Cliente on \n           Vendas.IDLOJA_CIGAM = Cliente.estab_idcigam and \n           Vendas.CLIENTE_CODIGO = Cliente.CLIENTE_CODIGO\n           where Cliente.CLIENTE_CODIGO is not null and\n            Vendas.IDLOJA_CIGAM = 'W031' and\n            Vendas.NUMERO_DOCTO = '17033'\n\n\n/** loja **/\nselect  TOP(10) \nCONVERT(VARCHAR(5),ESTAB_IDCIGAM)                                                                       AS  ESTAB_IDCIGAM\n,CONVERT(VARCHAR(15),UPPER(ISNULL(ESTAB_TIPOFILIAL,'NÃO INFORMADO')))                                   AS  ESTAB_TIPOFILIAL\n,CONVERT(INT,ISNULL(ESTAB_IDINTEGRACAO,-1))                                                             AS  ESTAB_IDINTEGRACAO\n,CONVERT(VARCHAR(15), UPPER(ISNULL(ESTAB_TIPOFILIAL,'NÃOINFORMADO')))                                   AS  ESTAB_TIPOFILIAL\n,CONVERT(VARCHAR(150), UPPER(ISNULL(ESTAB_NOME,'NÃO INFORMADO')))                                       AS  ESTAB_NOME\n,CONVERT(FLOAT, ISNULL(ESTAB_AREA,-1))                                                                  AS  ESTAB_AREA\n,CONVERT(VARCHAR(20), UPPER(ISNULL(REGIAO_DESCRICAO,'NÃOINFORMADO')))                                   AS  REGIAO_DESCRICAO\n,CONVERT(VARCHAR(15), UPPER(ISNULL(ESTAB_ESTADO,'NÃO INFROAMDO')))                                      AS  ESTAB_ESTADO\n,CONVERT(VARCHAR(15), UPPER(ISNULL(CONSULTOR_NUMMATR,'NÃO INFORMADO')))                                 AS  CONSULTOR_NUMMATR\n,CONVERT(VARCHAR(150),UPPER(ISNULL(CONSULTOR_NOME,'NÃO INFORMADO')))                                    AS  CONSULTOR_NOME\n,CONVERT(VARCHAR(15),UPPER(ISNULL(ESTAB_ATIVO,'NÃO IFORMADO')))                                         AS  ESTAB_ATIVO\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_RAZAO_SOCIAL,'NÃO INFORMADO')))                                AS  ESTAB_RAZAO_SOCIAL\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_ENDERECO,'NÃO INFORMADO')))                                    AS  ESTAB_ENDERECO\n,CONVERT(VARCHAR(15),ISNULL(ESTAB_ENDNUMERO,'NÃO INFORMADO'))                                           AS  ESTAB_ENDNUMERO\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_BAIRRO,'NÃO INFORMADO')))                                      AS  ESTAB_BAIRRO\n,CONVERT(VARCHAR(15),ISNULL(ESTAB_CEP,'NAO INFORMADO'))                                                 AS  ESTAB_CEP\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_CIDADE,'NÃO INFORMADO')))                                      AS  ESTAB_CIDADE\n,CONVERT(VARCHAR(150),UPPER(ISNULL(ESTAB_EMAIL,'NÃO INFORMADO')))                                       AS  ESTAB_EMAIL\n,CONVERT(int,ISNULL(ESTAB_DDD,-1))                                                                      AS  ESTAB_DDD\n,CONVERT(int,ISNULL(ESTAB_TELEFONE,-1))                                                                 AS  ESTAB_TELEFONE\n,CONVERT(DATE,ISNULL(ESTAB_DATA_INICIOOPER,'1900-01-01'))                                               AS  ESTAB_DATA_INICIOOPER\n,CONVERT(VARCHAR(150),UPPER(ISNULL(SHOPPING_NOME,'NÃO INFORMADO')))                                     AS  SHOPPING_NOME\n,CONVERT(VARCHAR(150),UPPER(ISNULL(SHOPPING_NOME,'NÃO INFORMADO')))                                     AS  SHOPPING_NOME\n,CONVERT(VARCHAR(150),UPPER(ISNULL(SHOPPING_NOME,'NÃO INFORMADO')))                                     AS  SHOPPING_NOME\n\n,\n,FRANQUEADO_EMAIL\n,ESTAB_CNPJ\n,ESTAB_PERFIL\n,REDELOJA_CODIGO\n,REDELOJA_NOME\n--,TIPO_NEGOCIO\nfrom cleansing_data.gst_bi_estabelecimento\n\n\nSELECT MAX(LEN(ESTAB_CEP)) FROM cleansing_data.gst_bi_estabelecimento\nWHERE LEN(ESTAB_NOME) = 0 OR ESTAB_NOME IS NULL \n\n\n\n\n\n  \n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [orderId]\n,[uniqueId]\n,[IdItem]\n,[productId]\n,[ean]\n,[lockId]\n,[quantity]\n,[seller]\n,[nameItem]\n,[refId]\n,[price]\n,[listPrice]\n,[imageUrl]\n,[brandName]\n,[brandId]\n,[categoriesIds]\n,[IdCategory]\n,[nameCategory]\n,[email]\n,[firstName]\n,[lastName]\n,[documentType]\n,[document]\n,[phone]\n,[addressType]\n,[receiverName]\n,[addressId]\n,[postalCode]\n,[city]\n,[state]\n,[country]\n,[street]\n,[number]\n,[neighborhood]\n,[complement]\n,[reference]\n,[geoCoordinates]\n,[itemIndex]\n,[selectedSla]\n,[lockTTL]\n,[priceLogistics]\n,[listPriceLogistics]\n,[sellingPrice]\n,[deliveryWindow]\n,[deliveryCompany]\n,[shippingEstimate]\n,[shippingEstimateDate]\n,[deliveryChannel]\n,[paymentSystem]\n,[paymentSystemName]\n,[value]\n,[installments]\n,[referenceValue]\n FROM [raw_data].[vtex_details]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 5')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [orderId]\n,[creationDate]\n,[clientName]\n,[items]\n,[totalValue]\n,[paymentNames]\n,[status]\n,[statusDescription]\n,[marketPlaceOrderId]\n,[sequence]\n,[salesChannel]\n,[affiliateId]\n,[origin]\n,[workflowInErrorState]\n,[workflowInRetry]\n,[lastMessageUnread]\n,[ShippingEstimatedDate]\n,[ShippingEstimatedDateMax]\n,[ShippingEstimatedDateMin]\n,[orderIsComplete]\n,[listId]\n,[listType]\n,[authorizedDate]\n,[callCenterOperatorName]\n,[totalItems]\n,[currencyCode]\n,[hostname]\n,[invoiceOutput]\n,[invoiceInput]\n,[reportRecordsLimit]\n FROM [raw_data].[vtex_orderfull]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TABELAS SAP')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "TABELAS SAP"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\nDROP EXTERNAL TABLE raw_data.sap_marm \ngo\nCREATE EXTERNAL TABLE raw_data.sap_marm (\n\t[MANDT] varchar(8000),\n\t[MATNR] varchar(8000),\n\t[MEINH] varchar(8000),\n\t[UMREZ] numeric(38,18),\n\t[UMREN] numeric(38,18),\n\t[EANNR] varchar(8000),\n\t[EAN11] varchar(8000),\n\t[NUMTP] varchar(8000),\n\t[LAENG] numeric(38,18),\n\t[BREIT] numeric(38,18),\n\t[HOEHE] numeric(38,18),\n\t[MEABM] varchar(8000),\n\t[VOLUM] numeric(38,18),\n\t[VOLEH] varchar(8000),\n\t[BRGEW] numeric(38,18),\n\t[GEWEI] varchar(8000),\n\t[MESUB] varchar(8000),\n\t[ATINN] varchar(8000),\n\t[MESRT] varchar(8000),\n\t[XFHDW] varchar(8000),\n\t[XBEWW] varchar(8000),\n\t[KZWSO] varchar(8000),\n\t[MSEHI] varchar(8000),\n\t[BFLME_MARM] varchar(8000),\n\t[GTIN_VARIANT] varchar(8000),\n\t[NEST_FTR] numeric(38,18),\n\t[MAX_STACK] varchar(8000),\n\t[CAPAUSE] numeric(38,18),\n\t[TY2TQ] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/marm/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\n\ndrop EXTERNAL TABLE raw_data.sap_mvke \ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_mvke (\n\t[MANDT] varchar(8000),\n\t[MATNR] varchar(8000),\n\t[VKORG] varchar(8000),\n\t[VTWEG] varchar(8000),\n\t[LVORM] varchar(8000),\n\t[VERSG] varchar(8000),\n\t[BONUS] varchar(8000),\n\t[PROVG] varchar(8000),\n\t[SKTOF] varchar(8000),\n\t[VMSTA] varchar(8000),\n\t[VMSTD] varchar(8000),\n\t[AUMNG] numeric(38,18),\n\t[LFMNG] numeric(38,18),\n\t[EFMNG] numeric(38,18),\n\t[SCMNG] numeric(38,18),\n\t[SCHME] varchar(8000),\n\t[VRKME] varchar(8000),\n\t[MTPOS] varchar(8000),\n\t[DWERK] varchar(8000),\n\t[PRODH] varchar(8000),\n\t[PMATN] varchar(8000),\n\t[KONDM] varchar(8000),\n\t[KTGRM] varchar(8000),\n\t[MVGR1] varchar(8000),\n\t[MVGR2] varchar(8000),\n\t[MVGR3] varchar(8000),\n\t[MVGR4] varchar(8000),\n\t[MVGR5] varchar(8000),\n\t[SSTUF] varchar(8000),\n\t[PFLKS] varchar(8000),\n\t[LSTFL] varchar(8000),\n\t[LSTVZ] varchar(8000),\n\t[LSTAK] varchar(8000),\n\t[LDVFL] varchar(8000),\n\t[LDBFL] varchar(8000),\n\t[LDVZL] varchar(8000),\n\t[LDBZL] varchar(8000),\n\t[VDVFL] varchar(8000),\n\t[VDBFL] varchar(8000),\n\t[VDVZL] varchar(8000),\n\t[VDBZL] varchar(8000),\n\t[PRAT1] varchar(8000),\n\t[PRAT2] varchar(8000),\n\t[PRAT3] varchar(8000),\n\t[PRAT4] varchar(8000),\n\t[PRAT5] varchar(8000),\n\t[PRAT6] varchar(8000),\n\t[PRAT7] varchar(8000),\n\t[PRAT8] varchar(8000),\n\t[PRAT9] varchar(8000),\n\t[PRATA] varchar(8000),\n\t[RDPRF] varchar(8000),\n\t[MEGRU] varchar(8000),\n\t[LFMAX] numeric(38,18),\n\t[RJART] varchar(8000),\n\t[PBIND] varchar(8000),\n\t[VAVME] varchar(8000),\n\t[MATKC] varchar(8000),\n\t[PVMSO] varchar(8000),\n\t[/BEV1/EMLGRP] varchar(8000),\n\t[/BEV1/EMDRCKSPL] varchar(8000),\n\t[/BEV1/RPBEZME] varchar(8000),\n\t[/BEV1/RPSNS] varchar(8000),\n\t[/BEV1/RPSFA] varchar(8000),\n\t[/BEV1/RPSKI] varchar(8000),\n\t[/BEV1/RPSCO] varchar(8000),\n\t[/BEV1/RPSSO] varchar(8000),\n\t[PLGTP] varchar(8000),\n\t[J_3AVASG] varchar(8000),\n\t[J_3APIND] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/mvke/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\n\ndrop EXTERNAL TABLE raw_data.sap_t023t\ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_t023t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[MATKL] varchar(8000),\n\t[WGBEZ] varchar(8000),\n\t[WGBEZ60] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t023t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\ndrop  EXTERNAL TABLE raw_data.sap_cawn\ngo \nCREATE EXTERNAL TABLE raw_data.sap_cawn (\n\t[MANDT] varchar(8000),\n\t[ATINN] varchar(8000),\n\t[ATZHL] varchar(8000),\n\t[ADZHL] varchar(8000),\n\t[ATWRT] varchar(8000),\n\t[ATFLV] float,\n\t[ATFLB] float,\n\t[ATCOD] varchar(8000),\n\t[ATSTD] varchar(8000),\n\t[ATAWE] varchar(8000),\n\t[ATAW1] varchar(8000),\n\t[ATIDN] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[TXTNR] varchar(8000),\n\t[DATUV] varchar(8000),\n\t[TECHV] varchar(8000),\n\t[AENNR] varchar(8000),\n\t[LKENZ] varchar(8000),\n\t[DOKAR] varchar(8000),\n\t[DOKNR] varchar(8000),\n\t[DOKVR] varchar(8000),\n\t[DOKTL] varchar(8000),\n\t[ATZHH] varchar(8000),\n\t[KNOBJ] varchar(8000),\n\t[ATWHI] varchar(8000),\n\t[ATTLV] float,\n\t[ATTLB] float,\n\t[ATPRZ] varchar(8000),\n\t[ATINC] float,\n\t[ATVPL] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/cawn/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\n\ndrop EXTERNAL TABLE raw_data.sap_t042zt \nGO\nCREATE EXTERNAL TABLE raw_data.sap_t042zt (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[LAND1] varchar(8000),\n\t[ZLSCH] varchar(8000),\n\t[TEXT2] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t042zt/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\n\ndrop  EXTERNAL TABLE raw_data.sap_t134t \ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_t134t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[MTART] varchar(8000),\n\t[MTBEZ] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t134t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\ndrop EXTERNAL TABLE raw_data.sap_t141t\ngo\nCREATE EXTERNAL TABLE raw_data.sap_t141t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[MMSTA] varchar(8000),\n\t[MTSTB] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t141t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\n\n\ndrop EXTERNAL TABLE raw_data.sap_t151t \ngo\nCREATE EXTERNAL TABLE raw_data.sap_t151t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[KDGRP] varchar(8000),\n\t[KTEXT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t151t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\n\ndrop EXTERNAL TABLE raw_data.sap_t176t\ngo\nCREATE EXTERNAL TABLE raw_data.sap_t176t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[BSARK] varchar(8000),\n\t[VTEXT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t176t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_t178t\ngo\nCREATE EXTERNAL TABLE raw_data.sap_t178t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[KONDM] varchar(8000),\n\t[VTEXT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t178t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_t179 \ngo\nCREATE EXTERNAL TABLE raw_data.sap_t179 (\n\t[MANDT] varchar(8000),\n\t[PRODH] varchar(8000),\n\t[STUFE] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t179/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_t188t\ngo\nCREATE EXTERNAL TABLE raw_data.sap_t188t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[KONDA] varchar(8000),\n\t[VTEXT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t188t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_t189t\ngo\nCREATE EXTERNAL TABLE raw_data.sap_t189t (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[PLTYP] varchar(8000),\n\t[PTEXT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/t189t/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_tvagt\ngo\nCREATE EXTERNAL TABLE raw_data.sap_tvagt (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[ABGRU] varchar(8000),\n\t[BEZEI] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/tvagt/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_tvfst\ngo\nCREATE EXTERNAL TABLE raw_data.sap_tvfst (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[FAKSP] varchar(8000),\n\t[VTEXT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/tvfst/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_tvlst \ngo\nCREATE EXTERNAL TABLE raw_data.sap_tvlst (\n\t[MANDT] varchar(8000),\n\t[SPRAS] varchar(8000),\n\t[LIFSP] varchar(8000),\n\t[VTEXT] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/tvlst/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztmm027 \ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztmm027 (\n\t[MANDT] varchar(8000),\n\t[ASNUM] varchar(8000),\n\t[ZZPRDHA] varchar(8000),\n\t[ZZENVOBC] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztmm027/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztmm075\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztmm075 (\n\t[MANDT] varchar(8000),\n\t[MODELO] varchar(8000),\n\t[MALHA] varchar(8000),\n\t[PER_PET] numeric(38,18),\n\t[PER_DEST] numeric(38,18),\n\t[PER_ORG] numeric(38,18),\n\t[PER_ECO] numeric(38,18)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztmm075/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_001\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_001 (\n\t[MANDT] varchar(8000),\n\t[ZZMARCA] varchar(8000),\n\t[ZZMARCADESC] varchar(8000),\n\t[VKORG] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_001/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_002 \ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_002 (\n\t[MANDT] varchar(8000),\n\t[ZZLINPROD] varchar(8000),\n\t[ZZLINPRODDESC] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_002/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_003\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_003 (\n\t[MANDT] varchar(8000),\n\t[ZZDESTCONFEC] varchar(8000),\n\t[ZZDESTCONFECD] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_003/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_004\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_004 (\n\t[MANDT] varchar(8000),\n\t[ZZCATPROD] varchar(8000),\n\t[ZZCATPRODESC] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_004/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_006\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_006 (\n\t[MANDT] varchar(8000),\n\t[ZZESPECIED] varchar(8000),\n\t[ZZESPECIEDDESC] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_006/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_005 \ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_005 (\n\t[MANDT] varchar(8000),\n\t[ZZESPECIE] varchar(8000),\n\t[ZZESPECIEDESC] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_005/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_007\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_007 (\n\t[MANDT] varchar(8000),\n\t[ZZCATLPROD] varchar(8000),\n\t[ZZCATLPRODDESC] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_007/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_008\ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_008 (\n\t[MANDT] varchar(8000),\n\t[ZZOCASIAO] varchar(8000),\n\t[ZZOCASIAODESC] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_008/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztpp_re_011\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_011 (\n\t[MANDT] varchar(8000),\n\t[ZZGENERO] varchar(8000),\n\t[DESCRICAO] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_011/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nDROP EXTERNAL TABLE raw_data.sap_ztpp_re_012 \ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_ztpp_re_012 (\n\t[MANDT] varchar(8000),\n\t[ZZSEGMENTO] varchar(8000),\n\t[DESCRICAO] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztpp_re_012/2021/02/03/ztpp_re_012_202102031010.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nDROP EXTERNAL TABLE raw_data.sap_ztsd007\ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_ztsd007 (\n\t[MANDT] varchar(8000),\n\t[CODPER] varchar(8000),\n\t[VKORG] varchar(8000),\n\t[NUMPER] varchar(8000),\n\t[ANOPER] varchar(8000),\n\t[DATINI] varchar(8000),\n\t[DATFIM] varchar(8000),\n\t[DATPRO] varchar(8000),\n\t[DATREM] varchar(8000),\n\t[DATFAT] varchar(8000),\n\t[KVGR4] varchar(8000),\n\t[STAABR] varchar(8000),\n\t[STAPER] varchar(8000),\n\t[PARCIAL] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztsd007/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_ztsd050\ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_ztsd050 (\n\t[MANDT] varchar(8000),\n\t[VKORG] varchar(8000),\n\t[VTWEG] varchar(8000),\n\t[MATNR] varchar(8000),\n\t[J_3ASZGR] varchar(8000),\n\t[DATAB] varchar(8000),\n\t[DATBI] varchar(8000),\n\t[KBETR] numeric(38,18)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztsd050/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\ndrop EXTERNAL TABLE raw_data.sap_ztsd126\ngo\n\nCREATE EXTERNAL TABLE raw_data.sap_ztsd126 (\n\t[MANDT] varchar(8000),\n\t[VBELN] varchar(8000),\n\t[REGION_ID] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztsd126/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_ztsd_modl_001\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztsd_modl_001 (\n\t[MANDT] varchar(8000),\n\t[CODMOD] varchar(8000),\n\t[DESCRICAO] varchar(8000),\n\t[SITUACAO] varchar(8000),\n\t[DATINI] varchar(8000),\n\t[DATFIM] varchar(8000),\n\t[TIPDES] varchar(8000),\n\t[KSCHL] varchar(8000),\n\t[PERDES] numeric(38,18),\n\t[SALMIN] int,\n\t[DESVEN] varchar(8000),\n\t[REMDIAS] int,\n\t[REMPERALT] varchar(8000),\n\t[SEGQUA] varchar(8000),\n\t[PERSEL] varchar(8000),\n\t[ERDAT] varchar(8000),\n\t[ERZET] varchar(8000),\n\t[ERNAM] varchar(8000),\n\t[AEDAT] varchar(8000),\n\t[AEZET] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztsd_modl_001/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\ndrop EXTERNAL TABLE raw_data.sap_ztwm043\ngo\nCREATE EXTERNAL TABLE raw_data.sap_ztwm043 (\n\t[MANDT] varchar(8000),\n\t[COD_CAIXA_KG] varchar(8000),\n\t[MATNR] varchar(8000),\n\t[CHARG] varchar(8000),\n\t[AUFNR] varchar(8000),\n\t[ERNAM] varchar(8000),\n\t[ERDAT] varchar(8000),\n\t[ERZEIT] varchar(8000),\n\t[COD_CAIXA] varchar(8000),\n\t[PESO_LIQ] numeric(38,18),\n\t[PESO_BRUTO] numeric(38,18),\n\t[QTD_PECAS] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/transacional/saptable/mm/ztwm043/2021/02/03/ztwm043_202102031011.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TABLE raw_data_orc_ expbi_produto')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.orc_expbi_produto (\n\t[CODPRODUTO] varchar(8000),\n\t[DSCPRODUTO] varchar(8000),\n\t[CODFABRICANTE] numeric(38,18),\n\t[CODSETOR] numeric(38,18),\n\t[CODGRUPO] numeric(38,18),\n\t[VALPRECOCUSTO] numeric(38,18),\n\t[VALPRECOVENDA] numeric(38,18),\n\t[REFERENCIA] varchar(8000),\n\t[MODELO] varchar(8000),\n\t[DATATUALIZ] datetime2(7),\n\t[FLGEXPORTBI] varchar(8000),\n\t[DAT_HORA_EXPORTACAO] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/cigam/expbi_produto/*/*/*/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.orc_expbi_produto\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexClient')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_client (\n\t[orderId] varchar(8000),\n\t[email] varchar(8000),\n\t[firstName] varchar(8000),\n\t[lastName] varchar(8000),\n\t[documentType] varchar(8000),\n\t[document] varchar(8000),\n\t[phone] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Client/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_client\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/VtexshippingDados')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT \n[orderId]\n,[uniqueId]\n,[iditems]\n,[idshipping]\n,[addressType]\n,[receiverName]\n,[addressId]\n,[postalCode]\n,[city]\n,[state]\n,[country]\n,[street]\n,[number]\n,[neighborhood]\n,[complement]\n,[reference]\n FROM [raw_data].[vtex_shipping]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Vtext_order_cleasing')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "    SELECT  \n        [orderId]\n        ,[sequence]\n        ,[marketplaceOrderId]\n        ,[sellerOrderId]\n        ,[origin]\n        ,[affiliateId]\n        ,[salesChannel]\n        ,[merchantName]\n        ,[status]\n        ,[statusDescription]\n        ,[value]\n        ,[creationDate]\n        ,[orderGroup]\n        ,(\n            select [raw_data].[vtex_order_totals].[value] from [raw_data].[vtex_order_totals] \n            inner join [raw_data].[vtex_order] on \n            [raw_data].[vtex_order_totals].[orderid] = [raw_data].[vtex_order].[orderid]\n            where [id] = 'Items'\n        ) as \"Total_Items\"\n        ,(\n            select [raw_data].[vtex_order_totals].[value] from [raw_data].[vtex_order_totals] \n            inner join [raw_data].[vtex_order] on \n            [raw_data].[vtex_order_totals].[orderid] = [raw_data].[vtex_order].[orderid]\n            where [id] = 'Discounts'\n        ) as \"Total_Discount\"\n        ,(\n            select [raw_data].[vtex_order_totals].[value] from [raw_data].[vtex_order_totals] \n            inner join [raw_data].[vtex_order] on \n            [raw_data].[vtex_order_totals].[orderid] = [raw_data].[vtex_order].[orderid]\n            where [id] = 'Shipping'\n        ) as \"Total_Shipping\"\n        ,(\n            select [raw_data].[vtex_order_totals].[value] from [raw_data].[vtex_order_totals] \n            inner join [raw_data].[vtex_order] on \n            [raw_data].[vtex_order_totals].[orderid] = [raw_data].[vtex_order].[orderid]\n            where [id] = 'Tax'\n        ) as \"Total_Tax\"     \n    FROM [raw_data].[vtex_order]\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_sap_cliente')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/sap"
				},
				"content": {
					"query": "select \nkna1.kunnr\t\t\t\t\t\t\t\t\t\t\t\tas PK_CLIENTE\n,kna1.kunnr\t\t\t\t\t\t\t\t\t\t\t\tas CODIGO_CLIENTE\n,UPPER(kna1.name1)\t\t\t\t\t\t\t\t\t\tas NOME_CLIENTE   \n,UPPER(kna1.name1) +' - ' +convert(varchar,convert(int,kunnr))\tas CODIGO_NOME_CLIENTE\n,UPPER(kna1.anred)\t\t\t\t\t\t\t\t\t\t\t\tas TIPO_CLIENTE       --TIPO_CLIENTE   Tipo_Cliente  TipoCliente  Cliente_Tipo Tipo      Cliente - Tipo,\n,kna1.pstlz\t\t\t\t\t\t\t\t\t\t\t\tas CEP_CLIENTE\n,kna1.stcd1\t\t\t\t\t\t\t\t\t\t\t\tas CPNJ_CLIENTE\n,substring(kna1.stcd1,1,18)                             as CNPJ_RAIZ_CLIENTE\n,CASE WHEN LEN(kna1.stcd2)=0  OR kna1.stcd2 IS NULL THEN '0' ELSE kna1.stcd2 END \t\t\t\t\t\t\t\t\t\t\t\tas CPF_CLIENTE\n--,iif(len(trim(kna1.stcd1)) >1, kna1.stcd1, kna1.stcd2)  \n,case\nwhen len(trim(kna1.stcd1)) > 1 then kna1.stcd1\nelse kna1.stcd2\nend\t\t\t\t\t\t\t\t\t\t\t\t\t\tas CPF_CNPJ_CLIENTE\n--,iif(len(kna1.aufsd)>=1,'inativo','ativo')\t\t\tas clienteativo         ATIVO_INATIVO_CLIENTE\n,case\nwhen len(kna1.aufsd)>=1 then 'INATIVO'\nelse 'ATIVO'\nend\t\t\t\t\t\t\t\t\t\t\t\t\t\tas CLIENTE_ATIVO\n,convert(date,kna1.erdat)\t\t\t\t\t\t\t\tas DATA_CRIACAO_CLIENTE\n--, kna1.erdat\t\t\t\t\t\t\t\t\t\t\tas clientedatacriacao  \n,kna1.land1\t\t\t\t\t\t\t\t\t\t\t\tas PAIS_CLIENTE\n--,iif(kna1.land1 = 'br','interno','externo' )\t\t\tas clientemercado      MERCADO_CLIENTE\n,case\nwhen kna1.land1 = 'br' then 'INTERNO'\nelse 'EXTERNO'\nend\t\t\t\t\t\t\t\t\t\t\t\t\t\tas CLIENTE_MERCADO\n,kna1.ort02\t\t\t\t\t\t\t\t\t\t\t\tas BAIRRO_CLIENTE\n,kna1.ort01\t\t\t\t\t\t\t\t\t\t\t\tas CIDADE_CLIENTE\n,case\nWHEN REGIO =  'AC' THEN 'NORTE'\nWHEN REGIO =  'AL' THEN 'NORDESTE'\nWHEN REGIO =  'AP' THEN 'NORTE'\nWHEN REGIO =  'AM' THEN 'NORTE'\nWHEN REGIO =  'BA' THEN 'NORDESTE'\nWHEN REGIO =  'CE' THEN 'NORDESTE'\nWHEN REGIO =  'DF' THEN 'CENTRO OESTE'\nWHEN REGIO =  'ES' THEN 'SUDESTE'\nWHEN REGIO =  'GO' THEN 'CENTRO OESTE'\nWHEN REGIO =  'MA' THEN 'NORDESTE'\nWHEN REGIO =  'MT' THEN 'CENTRO OESTE'\nWHEN REGIO =  'MS' THEN 'CENTRO OESTE'\nWHEN REGIO =  'MG' THEN 'SUDESTE'\nWHEN REGIO =  'PA' THEN 'NORTE'\nWHEN REGIO =  'PB' THEN 'NORDESTE'\nWHEN REGIO =  'PR' THEN 'SUL'\nWHEN REGIO =  'PE' THEN 'NORDESTE'\nWHEN REGIO =  'PI' THEN 'NORDESTE'\nWHEN REGIO =  'RJ' THEN 'SUDESTE'\nWHEN REGIO =  'RN' THEN 'NORDESTE'\nWHEN REGIO =  'RS' THEN 'SUL'\nWHEN REGIO =  'RO' THEN 'NORTE'\nWHEN REGIO =  'RR' THEN 'NORTE'\nWHEN REGIO =  'SC' THEN 'SUL'\nWHEN REGIO =  'SP' THEN 'SUDESTE'\nWHEN REGIO =  'SE' THEN 'NORDESTE'\nWHEN REGIO =  'TO' THEN 'NORTE'\nELSE 'NÃO INFORMADO'\nend\t\t\t\t\t\t\t\t\t\t\t\t\t\tas REGIAO_CLIENTE\n,kna1.regio\t\t\t\t\t\t\t\t\t\t\t\tas UF_CLIENTE\n,kna1.ort01 + ' - ' + regio\t\t\t\t\t\t\t\tas MUN_UF_CLIENTE\n,CASE WHEN LEN(kna1.konzs) = 0 OR kna1.konzs IS NULL THEN 'NÃO INFORMADO' ELSE kna1.konzs  END \t\t\t\t\t\t\t\t\t\t\t\tas GRUPO_EMPRESA_CLIENTE\nINTO DW.SAP_DIM_CLIENTE\nfrom cleansing_data.sap_kna1  as kna1\nleft join cleansing_data.sap_ausp as ausp on ausp.objek = kna1.kunnr\nwhere kna1.erdat != '00000000'\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/funcoes sap')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/sap"
				},
				"content": {
					"query": "https://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_VBAK\n{\n    \"I_BUKRS\": [\n        \"2001\",\n        \"5001\"\n    ],\n    \"I_DATA_INI\":\"2020-12-07\",\n    \"I_DATA_FIM\":\"2020-12-07\",\n    \"I_REGISTRO_CRIADO\":\"X\",\n    \"I_REGISTRO_ALTERADO\":\"\",\n    \"I_QTDE_REGISTROS\":\"\"\n}\n\nhttps://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_VBEP\n{\n    \"I_BUKRS\": [\n        \"2001\",\n        \"5001\"\n    ],\n    \"I_DATA_INI\":\"2020-12-07\",\n    \"I_DATA_FIM\":\"2020-12-07\",\n    \"I_REGISTRO_CRIADO\":\"X\",\n    \"I_REGISTRO_ALTERADO\":\"\",\n    \"I_QTDE_REGISTROS\":\"\"\n}\n\nhttps://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_KONV\n{\n    \"I_BUKRS\": [\n        \"2001\",\n        \"5001\"\n    ],\n    \"I_DATA_INI\":\"2020-12-07\",\n    \"I_DATA_FIM\":\"2020-12-07\",\n    \"I_REGISTRO_CRIADO\":\"X\",\n    \"I_REGISTRO_ALTERADO\":\"\",\n    \"I_QTDE_REGISTROS\":\"\"\n}\n\n\nhttps://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_VBAP\n{\n    \"I_BUKRS\": [\n        \"2001\",\n        \"5001\"\n    ],\n    \"I_DATA_INI\":\"2020-12-07\",\n    \"I_DATA_FIM\":\"2020-12-07\",\n    \"I_REGISTRO_CRIADO\":\"X\",\n    \"I_REGISTRO_ALTERADO\":\"\",\n    \"I_QTDE_REGISTROS\":\"\"\n}\n\n\nhttps://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_VBRP \n {\n    \"I_BUKRS\": [\n        \"2001\",\n        \"5001\"\n    ],\n    \"I_DATA_INI\":\"2020-01-20\",\n    \"I_DATA_FIM\":\"2020-01-22\"\n}\n\nhttps://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_VBPA \n{\n    \"I_PARVW\": [\n        \"ZR\",\n        \"ZV\",\n        \"ZS\",\n        \"ZL\"\n    ],\n    \"I_BUKRS\": [\n        \"2001\",\n        \"5001\"\n    ],\n   \"I_DATA_INI\":\"2020-12-07\",\n    \"I_DATA_FIM\":\"2020-12-07\",\n    \"I_REGISTRO_CRIADO\":\"X\",\n    \"I_REGISTRO_ALTERADO\":\"\",\n    \"I_QTDE_REGISTROS\":\"\"\n}\nhttps://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_AUSP\n{ \n    \"I_ATINN\":\n     [\"140\",\"141\",\"143\",\"144\",\"145\",\"147\",\"148\",\"175\",\"264\",\"275\",\"272\",\"268\",\"139\",\"493\",\"405\",\"349\",\"385\",\"265\",\"269\",\"270\",\"267\",\"816\",\"820\",\"829\",\"892\"\n    ],\n    \"I_KLART\":[ \n        \"001\",\n        \"026\",\n        \"200\",\n        \"300\"\n    ]\n}\n\nhttps://webdisp-homologacao.malwee.com.br:8445/datalake/ZGFDL_INTER_RET_MARC\n{\n    \"I_DATA_INI\":\"2020-12-07\",\n    \"I_DATA_FIM\":\"2020-12-11\",\n    \"I_QTDE_REGISTROS\":\"\"\n}",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gerarRawDataOrderPaymentVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE RawDataOrderPaymentVtex (\n\t[orderId] varchar(8000),\n\t[items] varchar(8000),\n\t[isActive] varchar(8000),\n\t[transactionId] varchar(8000),\n\t[merchantName] varchar(8000),\n\t[id] varchar(8000),\n\t[paymentSystem] varchar(8000),\n\t[paymentSystemName] varchar(8000),\n\t[value] varchar(8000),\n\t[installments] varchar(8000),\n\t[referenceValue] varchar(8000),\n\t[cardHolder] varchar(8000),\n\t[cardNumber] varchar(8000),\n\t[firstDigits] varchar(8000),\n\t[lastDigits] varchar(8000),\n\t[cvv2] varchar(8000),\n\t[expireMonth] varchar(8000),\n\t[expireYear] varchar(8000),\n\t[url] varchar(8000),\n\t[giftCardId] varchar(8000),\n\t[giftCardName] varchar(8000),\n\t[giftCardCaption] varchar(8000),\n\t[redemptionCode] varchar(8000),\n\t[group] varchar(8000),\n\t[tid] varchar(8000),\n\t[dueDate] varchar(8000),\n\t[giftCardProvider] varchar(8000),\n\t[giftCardAsDiscount] varchar(8000),\n\t[koinUrl] varchar(8000),\n\t[accountId] varchar(8000),\n\t[parentAccountId] varchar(8000),\n\t[bankIssuedInvoiceIdentificationNumber] varchar(8000),\n\t[bankIssuedInvoiceIdentificationNumberFormatted] varchar(8000),\n\t[bankIssuedInvoiceBarCodeNumber] varchar(8000),\n\t[bankIssuedInvoiceBarCodeType] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/VtextOrderpayment.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM RawDataOrderPaymentVtex\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gerarRawDataOrderTotalsVtex')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE RawDataOrderTotalsVtex (\n\t[orderId] varchar(8000),\n\t[id] varchar(8000),\n\t[name] varchar(8000),\n\t[value] bigint\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/VtextOrderTotals.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM RawDataOrderTotalsVtex\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gerarraworderfull')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_orderfull (\n\t[orderId] varchar(8000),\n\t[creationDate] varchar(8000),\n\t[clientName] varchar(8000),\n\t[items] varchar(8000),\n\t[totalValue] varchar(8000),\n\t[paymentNames] varchar(8000),\n\t[status] varchar(8000),\n\t[statusDescription] varchar(8000),\n\t[marketPlaceOrderId] varchar(8000),\n\t[sequence] varchar(8000),\n\t[salesChannel] varchar(8000),\n\t[affiliateId] varchar(8000),\n\t[origin] varchar(8000),\n\t[workflowInErrorState] varchar(8000),\n\t[workflowInRetry] varchar(8000),\n\t[lastMessageUnread] varchar(8000),\n\t[ShippingEstimatedDate] varchar(8000),\n\t[ShippingEstimatedDateMax] varchar(8000),\n\t[ShippingEstimatedDateMin] varchar(8000),\n\t[orderIsComplete] varchar(8000),\n\t[listId] varchar(8000),\n\t[listType] varchar(8000),\n\t[authorizedDate] varchar(8000),\n\t[callCenterOperatorName] varchar(8000),\n\t[totalItems] varchar(8000),\n\t[currencyCode] varchar(8000),\n\t[hostname] varchar(8000),\n\t[invoiceOutput] varchar(8000),\n\t[invoiceInput] varchar(8000),\n\t[reportRecordsLimit] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/vtex_ordem.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_orderfull\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gerarrawvtexdetais')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_details (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[IdItem] varchar(8000),\n\t[productId] varchar(8000),\n\t[ean] varchar(8000),\n\t[lockId] varchar(8000),\n\t[quantity] varchar(8000),\n\t[seller] varchar(8000),\n\t[nameItem] varchar(8000),\n\t[refId] varchar(8000),\n\t[price] varchar(8000),\n\t[listPrice] varchar(8000),\n\t[imageUrl] varchar(8000),\n\t[brandName] varchar(8000),\n\t[brandId] varchar(8000),\n\t[categoriesIds] varchar(8000),\n\t[IdCategory] varchar(8000),\n\t[nameCategory] varchar(8000),\n\t[email] varchar(8000),\n\t[firstName] varchar(8000),\n\t[lastName] varchar(8000),\n\t[documentType] varchar(8000),\n\t[document] varchar(8000),\n\t[phone] varchar(8000),\n\t[addressType] varchar(8000),\n\t[receiverName] varchar(8000),\n\t[addressId] varchar(8000),\n\t[postalCode] varchar(8000),\n\t[city] varchar(8000),\n\t[state] varchar(8000),\n\t[country] varchar(8000),\n\t[street] varchar(8000),\n\t[number] varchar(8000),\n\t[neighborhood] varchar(8000),\n\t[complement] varchar(8000),\n\t[reference] varchar(8000),\n\t[geoCoordinates] varchar(8000),\n\t[itemIndex] varchar(8000),\n\t[selectedSla] varchar(8000),\n\t[lockTTL] varchar(8000),\n\t[priceLogistics] varchar(8000),\n\t[listPriceLogistics] varchar(8000),\n\t[sellingPrice] varchar(8000),\n\t[deliveryWindow] varchar(8000),\n\t[deliveryCompany] varchar(8000),\n\t[shippingEstimate] varchar(8000),\n\t[shippingEstimateDate] varchar(8000),\n\t[deliveryChannel] varchar(8000),\n\t[paymentSystem] varchar(8000),\n\t[paymentSystemName] varchar(8000),\n\t[value] varchar(8000),\n\t[installments] varchar(8000),\n\t[referenceValue] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/OrderDetails.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gerarvextitems')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE vtex_items (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[IdItem] varchar(8000),\n\t[productId] varchar(8000),\n\t[ean] varchar(8000),\n\t[lockId] varchar(8000),\n\t[quantity] int,\n\t[seller] varchar(8000),\n\t[nameItem] varchar(8000),\n\t[refId] varchar(8000),\n\t[price] int,\n\t[listPrice] int,\n\t[imageUrl] varchar(8000),\n\t[brandName] varchar(8000),\n\t[brandId] varchar(8000),\n\t[categoriesIds] varchar(8000),\n\t[IdCategory] bigint,\n\t[nameCategory] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Order.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM vtex_items\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gerarvtexcliente')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_cliente (\n\t[orderId] varchar(8000),\n\t[email] varchar(8000),\n\t[firstName] varchar(8000),\n\t[lastName] varchar(8000),\n\t[documentType] varchar(8000),\n\t[document] varchar(8000),\n\t[phone] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Order.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_cliente\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gerarvtexpayment')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE vtext_payment (\n\t[orderId] varchar(8000),\n\t[IdItem] varchar(8000),\n\t[itemIndex] int,\n\t[value] int,\n\t[installments] int,\n\t[referenceValue] int\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Order.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM vtext_payment\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/geravextshipping')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "VTEX"
				},
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE vtex_shipping (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[IdItem] varchar(8000),\n\t[addressId] varchar(8000),\n\t[postalCode] varchar(8000),\n\t[city] varchar(8000),\n\t[state] varchar(8000),\n\t[country] varchar(8000),\n\t[street] varchar(8000),\n\t[number] varchar(8000),\n\t[neighborhood] varchar(8000),\n\t[complement] varchar(8000),\n\t[reference] varchar(8000),\n\t[geoCoordinates] varchar(8000),\n\t[itemIndex] int,\n\t[selectedSla] varchar(8000),\n\t[lockTTL] varchar(8000),\n\t[priceLogistics] int,\n\t[listPriceLogistics] int,\n\t[sellingPrice] int,\n\t[deliveryWindow] varchar(8000),\n\t[deliveryCompany] varchar(8000),\n\t[shippingEstimate] varchar(8000),\n\t[shippingEstimateDate] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Order.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM vtex_shipping\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/modelagem dimensional cigam')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "dwmwe",
						"databaseName": "dwmwe"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sap fato ordem venda')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/sap"
				},
				"content": {
					"query": "--select sum(convert(numeric(18,2),NETWR)) as NETWR,\n--sum(convert(numeric(18,2),KWMENG)) as KWMENG\n--from cleansing_data.sap_vbap where VBELN = '0001289876'\n\n--select sum(convert(numeric(18,2),KWERT)) as KWERT,\n--sum(convert(numeric(18,2),KAWRT))  as KAWRT\n--from cleansing_data.sap_konv\n--where KSTAT is null  and KSCHL in('ZCMI','ICMI','ZNFC')\n--and  VBELN = '0001289876'\n\n\n;with vbak_vbap_cte as\n(\nselect \nconcat(vbak.KNUMV,vbap.POSNR) as pk_vbak_vbap\n,ztsd007.NUMPER           NUMERO_PERIODO_OV            \n,ztsd007.ANOPER           ANO_PERIODO_OV\n,concat(ztsd007.ANOPER,'/',ztsd007.NUMPER) as ANO_NUMERO_PERIODO_OV\n,vbap.VBELN\t             NUMERO_OV   \n,vbap.POSNR\t             NUMERO_ITEM_OV\n,vbap.MATNR\t             CODIGO_PRODUTO\n,vbap.PSTYV\t             CATEGORIA_ITEM_OV \n \n,vbap.KWMENG\t       QTDE_ITEM_OV\n,vbak.KUNNR            CODIGO_CLIENTE\n,vbak.ERDAT\t           DATA_CRIACAO_OV\n,vbak.ERNAM\t           CRIADO_POR_OV\n,vbak.AUDAT\t           DATA_DOCUMENTO_OV\n,vbak.VBTYP\t           CATEGORIA_DOCUMENTO_OV\n--,vbak.AUART\t\n,vbak.VKORG\t           ORGANIZACAO_VENDAS_OV\n--,vbak.VTWEG\t\n,vbak.SPART\t           SETOR_ATIVIDADE_OV\n,vbak.VKGRP\t           EQUIPE_VENDAS_OV\n,vbak.VKBUR\t           ESCRITORIO_VENDAS_OV\n,vbak.KNUMV\t           CODIGO_CONDICAO_DOCUMENTO_OV\n,vbak.VDATU\t           DATA_REMESSA_OV\n,vbak.BSARK\t TIPO_PEDIDO_OV --  = '0006' then 'VOA' \telse 'OUTROS'    TIPO_PEDIDO_OV\n,vbak.AEDAT\t           DATA_MODIFICACAO_OV\n,vbak.KVGR3\t           CODIGO_PERIODO_VENDAS_OV\n,vbak.BUKRS_VF         CODIGO_EMPRESA_OV\n,tvakt.AUART           CODIGO_TIPO_DOCUMENTO_VENDAS\n--,tvakt.BEZEI + ' (' + tvakt.AUART + ')' as BEZEI AUART OrdemVenda - Tp.Documento\n,tvtwt.VTWEG --  '90' then 'Sim' \telse 'Não'\n,tvtwt.VTEXT\n,vbap.J_3ASEAN\n--,vbap._-AFS_-COLLECTION\n,vbap.WERKS          CODIGO_CENTRO_OV_ITEM \n,vbap.VRKME          DESCRICAO_UNID_VENDA_OV_ITEM\n,vbap.NETWR          VALOR_LIQUIDO_OV_ITEM\n\n,vbap.UMZIZ          NUMERADOR_OV_ITEM\n,vbap.UMZIN          DENOMINADOR_OV_ITEM \n\n \n\nfrom cleansing_data.sap_vbap as vbap   \nleft join cleansing_data.sap_vbak as vbak on vbap.VBELN = vbak.VBELN\nleft join  cleansing_data.sap_ztsd007 as ztsd007 on \n\t\t   concat(ztsd007.VKORG,ztsd007.CODPER) = concat(vbak.VKORG, vbak.KVGR3)   \nleft join cleansing_data.sap_tvakt as tvakt on tvakt.AUART = vbak.AUART\nleft join cleansing_data.sap_tvtwt as tvtwt on tvtwt.VTWEG = vbak.VTWEG\n\n \n\n) \n,konv_cte \nas\n(\n \tselect \n\tconcat(KNUMV,KPOSN) as pk_konv_cte\n\t,KNUMV\tCODIGO_CONDICAO\n\t,KPOSN\tNUMERO_ITEM_CONDICAO\n\t,STUNR\tNUMERO_NIVEL_CONDICAO\n\t,ZAEHK\tCONTADOR_CONDICAO\n\t,KSCHL\tDESCRICAO_TIPO_CONDICAO\n\t,KWERT\tVALOR_CONDICAO\n\t,KAWRT\tVALOR_BASE_CONDICAO\n\t,KBETR\tVALOR_MONTANTE_CONDICAO\n\t,KSTAT\tESTATISTICA_CONDICAO\n\t,KDATU\tDATA_FIXA_PRECO_CONDICAO\n\t,VBELN\tNUMERO_OV\n\tfrom cleansing_data.sap_konv\n\twhere KSTAT !='X'  and KSCHL in('ZCMI','ICMI','ZNFC')\n\n\t\n\t\n)\n\nSELECT \nvbak_vbap_cte.PK_VBAK_VBAP\n,vbak_vbap_cte.CODIGO_CLIENTE \n,vbak_vbap_cte.CODIGO_PRODUTO \n,vbak_vbap_cte.DATA_CRIACAO_OV \n,vbak_vbap_cte.ANO_PERIODO_OV \n,vbak_vbap_cte.NUMERO_PERIODO_OV \n,vbak_vbap_cte.ANO_NUMERO_PERIODO_OV \n,vbak_vbap_cte.NUMERO_OV \n,vbak_vbap_cte.NUMERO_ITEM_OV \n,vbak_vbap_cte.CATEGORIA_ITEM_OV \n,vbak_vbap_cte.CRIADO_POR_OV \n,vbak_vbap_cte.DATA_DOCUMENTO_OV \n,vbak_vbap_cte.CATEGORIA_DOCUMENTO_OV \n,vbak_vbap_cte.ORGANIZACAO_VENDAS_OV \n,vbak_vbap_cte.SETOR_ATIVIDADE_OV \n,vbak_vbap_cte.EQUIPE_VENDAS_OV \n,vbak_vbap_cte.ESCRITORIO_VENDAS_OV \n,vbak_vbap_cte.CODIGO_CONDICAO_DOCUMENTO_OV \n,vbak_vbap_cte.DATA_REMESSA_OV \n,vbak_vbap_cte.TIPO_PEDIDO_OV \n,vbak_vbap_cte.DATA_MODIFICACAO_OV \n,vbak_vbap_cte.CODIGO_PERIODO_VENDAS_OV\n,vbak_vbap_cte.CODIGO_EMPRESA_OV \n,vbak_vbap_cte.CODIGO_TIPO_DOCUMENTO_VENDAS \n,vbak_vbap_cte.CODIGO_CENTRO_OV_ITEM \n,vbak_vbap_cte.DESCRICAO_UNID_VENDA_OV_ITEM \n,vbak_vbap_cte.NUMERADOR_OV_ITEM \n,vbak_vbap_cte.DENOMINADOR_OV_ITEM \n,konv_cte.PK_KONV_CTE \n,konv_cte.CODIGO_CONDICAO\n,konv_cte.NUMERO_ITEM_CONDICAO\n,konv_cte.NUMERO_NIVEL_CONDICAO\n,konv_cte.CONTADOR_CONDICAO \n,konv_cte.DESCRICAO_TIPO_CONDICAO \n,konv_cte.VALOR_MONTANTE_CONDICAO \n,konv_cte.ESTATISTICA_CONDICAO \n,konv_cte.DATA_FIXA_PRECO_CONDICAO \n,sum(convert(numeric(18,2),konv_cte.VALOR_BASE_CONDICAO )) AS VALOR_BASE_CONDICAO\n,sum(convert(numeric(18,2),vbak_vbap_cte.QTDE_ITEM_OV )) AS QTDE_ITEM_OV\n,sum(convert(numeric(18,2),vbak_vbap_cte.VALOR_LIQUIDO_OV_ITEM )) As VALOR_LIQUIDO_OV_ITEM\n,sum(convert(numeric(18,2),konv_cte.VALOR_CONDICAO)) as VALOR_CONDICAO\ninto ODS.PRE_CARGA_SAP_FATO_ORDEM_VENDA\nfrom vbak_vbap_cte inner join konv_cte on \nvbak_vbap_cte.pk_vbak_vbap = konv_cte.pk_konv_cte\n\ngroup by vbak_vbap_cte.PK_VBAK_VBAP\n,vbak_vbap_cte.CODIGO_CLIENTE \n,vbak_vbap_cte.CODIGO_PRODUTO \n,vbak_vbap_cte.DATA_CRIACAO_OV \n,vbak_vbap_cte.ANO_PERIODO_OV \n,vbak_vbap_cte.NUMERO_PERIODO_OV \n,vbak_vbap_cte.ANO_NUMERO_PERIODO_OV \n,vbak_vbap_cte.NUMERO_OV \n,vbak_vbap_cte.NUMERO_ITEM_OV \n,vbak_vbap_cte.CATEGORIA_ITEM_OV \n,vbak_vbap_cte.CRIADO_POR_OV \n,vbak_vbap_cte.DATA_DOCUMENTO_OV \n,vbak_vbap_cte.CATEGORIA_DOCUMENTO_OV \n,vbak_vbap_cte.ORGANIZACAO_VENDAS_OV \n,vbak_vbap_cte.SETOR_ATIVIDADE_OV \n,vbak_vbap_cte.EQUIPE_VENDAS_OV \n,vbak_vbap_cte.ESCRITORIO_VENDAS_OV \n,vbak_vbap_cte.CODIGO_CONDICAO_DOCUMENTO_OV \n,vbak_vbap_cte.DATA_REMESSA_OV \n,vbak_vbap_cte.TIPO_PEDIDO_OV \n,vbak_vbap_cte.DATA_MODIFICACAO_OV \n,vbak_vbap_cte.CODIGO_PERIODO_VENDAS_OV\n,vbak_vbap_cte.CODIGO_EMPRESA_OV \n,vbak_vbap_cte.CODIGO_TIPO_DOCUMENTO_VENDAS \n,vbak_vbap_cte.CODIGO_CENTRO_OV_ITEM \n,vbak_vbap_cte.DESCRICAO_UNID_VENDA_OV_ITEM \n,vbak_vbap_cte.NUMERADOR_OV_ITEM \n,vbak_vbap_cte.DENOMINADOR_OV_ITEM \n,konv_cte.PK_KONV_CTE \n,konv_cte.CODIGO_CONDICAO\n,konv_cte.NUMERO_ITEM_CONDICAO\n,konv_cte.NUMERO_NIVEL_CONDICAO\n,konv_cte.CONTADOR_CONDICAO \n,konv_cte.DESCRICAO_TIPO_CONDICAO \n,konv_cte.VALOR_MONTANTE_CONDICAO \n,konv_cte.ESTATISTICA_CONDICAO \n,konv_cte.DATA_FIXA_PRECO_CONDICAO \n\n\n\nSELECT \nDIM_CLIENTE.SK_CLIENTE,\nDIM_PRODUTO.SK_PRODUTO,\nDIM_CALENDARIO.SK_DATA, \nODS.PK_VBAK_VBAP, \nODS.CODIGO_CLIENTE, \nODS.CODIGO_PRODUTO, \nODS.DATA_CRIACAO_OV, \nODS.ANO_PERIODO_OV, \nODS.NUMERO_PERIODO_OV, \nODS.ANO_NUMERO_PERIODO_OV, \nODS.NUMERO_OV, \nODS.NUMERO_ITEM_OV, \nODS.CATEGORIA_ITEM_OV, \nODS.CRIADO_POR_OV, \nODS.DATA_DOCUMENTO_OV, \nODS.CATEGORIA_DOCUMENTO_OV, \nODS.ORGANIZACAO_VENDAS_OV, \nODS.SETOR_ATIVIDADE_OV, \nODS.EQUIPE_VENDAS_OV, \nODS.ESCRITORIO_VENDAS_OV, \nODS.CODIGO_CONDICAO_DOCUMENTO_OV, \nODS.DATA_REMESSA_OV, \nODS.TIPO_PEDIDO_OV, \nODS.DATA_MODIFICACAO_OV, \nODS.CODIGO_PERIODO_VENDAS_OV, \nODS.CODIGO_EMPRESA_OV, \nODS.CODIGO_TIPO_DOCUMENTO_VENDAS, \nODS.CODIGO_CENTRO_OV_ITEM, \nODS.DESCRICAO_UNID_VENDA_OV_ITEM, \nODS.NUMERADOR_OV_ITEM, \nODS.DENOMINADOR_OV_ITEM, \nODS.PK_KONV_CTE,\nODS.CODIGO_CONDICAO, \nODS.NUMERO_ITEM_CONDICAO, \nODS.NUMERO_NIVEL_CONDICAO, \nODS.CONTADOR_CONDICAO, \nODS.DESCRICAO_TIPO_CONDICAO, \nODS.VALOR_MONTANTE_CONDICAO, \nODS.ESTATISTICA_CONDICAO, \nODS.DATA_FIXA_PRECO_CONDICAO, \nODS.VALOR_BASE_CONDICAO, \nODS.QTDE_ITEM_OV, \nODS.VALOR_LIQUIDO_OV_ITEM, \nODS.VALOR_CONDICAO \nFROM ODS.PRE_CARGA_SAP_FATO_ORDEM_VENDA AS ODS\nLEFT JOIN DW.SAP_DIM_CLIENTE AS DIM_CLIENTE  ON  ODS.CODIGO_CLIENTE = DIM_CLIENTE.CODIGO_CLIENTE\nLEFT JOIN DW.SAP_DIM_PRODUTO AS DIM_PRODUTO   ON ODS.CODIGO_PRODUTO = DIM_PRODUTO.CODIGO_PRODUTO \nLEFT JOIN DW.DIM_CALENDARIO  AS DIM_CALENDARIO ON ODS.DATA_CRIACAO_OV   = DIM_CALENDARIO.[DATA]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sap produto')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/sap"
				},
				"content": {
					"query": " \n\nINSERT INTO ODS.SAP_PRODUTO\nSELECT  \nmara.MATNR                 AS CODIGO_PRODUTO\n,mara.J_3APGNR             AS CODIGO_MATRIZ_PRODUTO\n,mara.MTART                AS CODIGO_TIPO_PRODUTO\n,mara.PRDHA                AS CODIGO_HIERARQUIA_PRODUTO\n,mara.MATKL                AS CODIGO_GRUPO_MERCADORIA\n,mara.MSTAE                AS CODIGO_STATUS_PRODUTO\n,mara.LVORM                AS FLAG_MATERIAL_ELIMINADO\n,mara.MEINS                AS UNIDADE_MEDIDA_BASICA\n,mara.BSTME                AS UNIDADE_MEDIDA_OV\n,mara.ERSDA                AS DATA_CRIACAO_PRODUTO\n,mara.MAGRV                AS CODIGO_GRUPO_MATERIAIS_ME\n,makt.MAKTX                AS DESCRICAO_ABREVIADA_PRODUTO\n,makt.MAKTG                AS DESCRICAO_PRODUTO\n--,GrupoProduto.grupoproduto\n--,GrupoCampanha.grupoCampanha\n,ztpp_re_001.ZZMARCA       AS DESCRICAO_MARCA_PRODUTO\n,ztpp_re_001.ZZMARCADESC  \n,ztpp_re_003.ZZDESTCONFEC  AS DESCRICAO_DESTINO_CONFECCCAO \n,ztpp_re_003.ZZDESTCONFECD\n,ztpp_re_004.ZZCATPROD        \n,ztpp_re_004.ZZCATPRODESC  AS DESCRICAO_CATEGORIA_PRODUTO\n,ztpp_re_005.ZZESPECIE\n,ztpp_re_005.ZZESPECIEDESC AS DESCRICAO_ESPECIE_PRODUTO\n,ztpp_re_007.ZZCATLPROD\n,ztpp_re_007.ZZCATLPRODDESC AS DESCRICAO_CATEGORIA_LINNHA\n,ztpp_re_011.ZZGENERO       AS DESCRICAO_GENERO_PRODUTO\n,ztpp_re_011.DESCRICAO\t\tAS DESCRICAO_re_011\n,ztpp_re_012.ZZSEGMENTO     AS DESCRICAO_SEGMENTO_PRODUTO      \n,ztpp_re_012.DESCRICAO      AS DESCRICAO_re_012\n--into sap_produto_smp\nINTO ODS.SAP_PRODUTO\nFROM \n[cleansing_data].[sap_mara] as mara\ninner join [cleansing_data].[sap_makt] as makt on mara.MATNR = makt.MATNR\ninner join vw_ausp_175 as ausp_175 on ausp_175.OBJEK = mara.MATNR\n\nLEFT JOIN [cleansing_data].[sap_ausp] AS ausp_275 ON  ausp_275.OBJEK = mara.MATNR AND  ausp_275.ATINN = '0000000275' \nLEFT JOIN [cleansing_data].[sap_ausp] AS ausp_141 ON  ausp_141.OBJEK = mara.MATNR AND  ausp_141.ATINN = '0000000141' \nLEFT JOIN [cleansing_data].[sap_ausp] AS ausp_139 ON  ausp_139.OBJEK = mara.MATNR AND  ausp_139.ATINN = '0000000139' \nLEFT JOIN [cleansing_data].[sap_ausp] AS ausp_144 ON  ausp_144.OBJEK = mara.MATNR AND  ausp_144.ATINN = '0000000144' \nLEFT JOIN [cleansing_data].[sap_ausp] AS ausp_148 ON  ausp_148.OBJEK = mara.MATNR AND  ausp_148.ATINN = '0000000148' \nLEFT JOIN [cleansing_data].[sap_ausp] AS ausp_140 ON  ausp_140.OBJEK = mara.MATNR AND  ausp_140.ATINN = '0000000140' \n\nleft join [cleansing_data].[sap_ztpp_re_001] as ztpp_re_001 on ztpp_re_001.ZZMARCA = ausp_175.ATWRT\nleft join [cleansing_data].[sap_ztpp_re_003] as ztpp_re_003 on ztpp_re_003.ZZDESTCONFEC = ausp_141.ATWRT\n\nleft join [cleansing_data].[sap_ztpp_re_005] as ztpp_re_005 on ztpp_re_005.ZZESPECIE = ausp_275.ATWRT\nleft join [cleansing_data].[sap_ztpp_re_007] as ztpp_re_007 on ztpp_re_007.ZZCATLPROD = ausp_139.ATWRT\nleft join [cleansing_data].[sap_ztpp_re_011] as ztpp_re_011 on ztpp_re_011.ZZGENERO = ausp_144.ATWRT\nleft join [cleansing_data].[sap_ztpp_re_012] as ztpp_re_012 on ztpp_re_012.ZZSEGMENTO = ausp_148.ATWRT\nleft join [cleansing_data].[sap_ztpp_re_004] as ztpp_re_004 on ztpp_re_004.ZZCATPROD = ausp_140.ATWRT\n\n/* MATERIAL PERMANENCIA */\nselect \nsap_ausp.OBJEK\t\tAS CODIGO_PRODUTO\n,sap_cawnt.ATWTB\tAS DESCRICAO_PERMANENCIA\nINTO ODS.SAP_MATERIAL_PERMANENCIA\nfrom [cleansing_data].[sap_ausp] as sap_ausp\nleft join [cleansing_data].[sap_cawn] as sap_cawn on sap_ausp.ATWRT = sap_cawn.ATWRT\nleft join [cleansing_data].[sap_cawnt]  as sap_cawnt on concat(sap_cawn.ATINN,sap_cawn.ATZHL) =  concat(sap_cawnt.ATINN,sap_cawnt.ATZHL)\nwhere sap_ausp.ATINN = '0000000816' AND sap_cawn.ATINN = '0000000816'\n\n\nSELECT \nREPLICATE('0',8) + [OBJETO] AS   CODIGO_PRODUTO\n,[MARCA PARA] AS MARCA_PARA\n,[GENERO PARA] AS GENERO_PARA\n,[SEGMENTO PARA] AS SEGMENTO_PARA\n,[ESPECIE PARA] AS ESPECIE_PARA\n,[GRUPO DE PRODUTO PARA] AS GRUPO_PRODUTO_PARA\n,[SUB GRUPO DE PRODUTO PARA] AS SUB_GRUPO_PRODUTO_PARA\n,[DESTINO CONFECCAO PARA] AS DESTINO_CONFECCAO_PARA\n,[GRADE PARA] AS GRADE_PARA\n,[PERMANENCIA PARA]  AS PERMANENCIA_PARA\nINTO ODS.SAP_PRODUTO_PLANILHA\nFROM \n[dbo].[planilha_produto]\n\n\n\nSELECT \n[CODIGO_PRODUTO], \n[CODIGO_MATRIZ_PRODUTO], \n[CODIGO_TIPO_PRODUTO], \n[CODIGO_HIERARQUIA_PRODUTO], \n[CODIGO_GRUPO_MERCADORIA], \n[CODIGO_STATUS_PRODUTO], \n[FLAG_MATERIAL_ELIMINADO], \n[UNIDADE_MEDIDA_BASICA], \n[UNIDADE_MEDIDA_OV], \n[DATA_CRIACAO_PRODUTO], \n[CODIGO_GRUPO_MATERIAIS_ME], \n[DESCRICAO_ABREVIADA_PRODUTO], \n[DESCRICAO_PRODUTO], \n[DESCRICAO_MARCA_PRODUTO], \n[ZZMARCADESC], \n[DESCRICAO_DESTINO_CONFECCCAO], \n[ZZDESTCONFECD], \n[ZZCATPROD], \n[DESCRICAO_CATEGORIA_PRODUTO], \n[ZZESPECIE], \n[DESCRICAO_ESPECIE_PRODUTO], \n[ZZCATLPROD], \n[DESCRICAO_CATEGORIA_LINNHA], \n[DESCRICAO_GENERO_PRODUTO], \n[DESCRICAO_re_011], \n[DESCRICAO_SEGMENTO_PRODUTO], \n[DESCRICAO_re_012]\n* FROM ODS.SAP_PRODUTO\nODS.SAP_MATERIAL_PERMANENCIA\nODS.SAP_MATERIAL_PERMANENCIA\n\n\n\nSELECT \nODS_PRODUTO.[CODIGO_PRODUTO] \n,ODS_PRODUTO.[CODIGO_MATRIZ_PRODUTO] \n,ODS_PRODUTO.[CODIGO_TIPO_PRODUTO] \n,ODS_PRODUTO.[CODIGO_HIERARQUIA_PRODUTO] \n,ODS_PRODUTO.[CODIGO_GRUPO_MERCADORIA] \n,ODS_PRODUTO.[CODIGO_STATUS_PRODUTO] \n,ODS_PRODUTO.[FLAG_MATERIAL_ELIMINADO] \n,ODS_PRODUTO.[UNIDADE_MEDIDA_BASICA] \n,ODS_PRODUTO.[UNIDADE_MEDIDA_OV] \n,ODS_PRODUTO.[DATA_CRIACAO_PRODUTO] \n,ODS_PRODUTO.[CODIGO_GRUPO_MATERIAIS_ME] \n,ODS_PRODUTO.[DESCRICAO_ABREVIADA_PRODUTO] \n,ODS_PRODUTO.[DESCRICAO_PRODUTO] \n,ODS_PRODUTO.[DESCRICAO_MARCA_PRODUTO] \n,ODS_PRODUTO.[ZZMARCADESC] \n,ODS_PRODUTO.[DESCRICAO_DESTINO_CONFECCCAO] \n,ODS_PRODUTO.[ZZDESTCONFECD] \n,ODS_PRODUTO.[ZZCATPROD] \n,ODS_PRODUTO.[DESCRICAO_CATEGORIA_PRODUTO] \n,ODS_PRODUTO.[ZZESPECIE] \n,ODS_PRODUTO.[DESCRICAO_ESPECIE_PRODUTO] \n,ODS_PRODUTO.[ZZCATLPROD] \n,ODS_PRODUTO.[DESCRICAO_CATEGORIA_LINNHA] \n,ODS_PRODUTO.[DESCRICAO_GENERO_PRODUTO] \n,ODS_PRODUTO.[DESCRICAO_re_011] \n,ODS_PRODUTO.[DESCRICAO_SEGMENTO_PRODUTO] \n,ODS_PRODUTO.[DESCRICAO_re_012]\n,ODS_PERMANENCIA.DESCRICAO_PERMANENCIA\n,ODS_PLANILHA.[CODIGO_PRODUTO]\n,ODS_PLANILHA.[MARCA_PARA]\n,ODS_PLANILHA.[GENERO_PARA]\n,ODS_PLANILHA.[SEGMENTO_PARA]\n,ODS_PLANILHA.[ESPECIE_PARA]\n,ODS_PLANILHA.[GRUPO_PRODUTO_PARA]\n,ODS_PLANILHA.[SUB_GRUPO_PRODUTO_PARA]\n,ODS_PLANILHA.[DESTINO_CONFECCAO_PARA]\n,ODS_PLANILHA.[GRADE_PARA]\n,ODS_PLANILHA.[PERMANENCIA_PARA]\n FROM ODS.SAP_PRODUTO AS ODS_PRODUTO\n      LEFT JOIN ODS.SAP_MATERIAL_PERMANENCIA AS ODS_PERMANENCIA ON ODS_PRODUTO.[CODIGO_PRODUTO]  = ODS_PERMANENCIA.[CODIGO_PRODUTO]\n\t  LEFT JOIN ODS.SAP_PRODUTO_PLANILHA AS ODS_PLANILHA ON ODS_PRODUTO.[CODIGO_PRODUTO] = ODS_PLANILHA.[CODIGO_PRODUTO]\n\n\n--FALTA DEFINIR A CHAVE PARA LIGAÇÃO\n--/* GRADE */  \n--select TOP(1) \n--sap_ausp.OBJEK\t AS CODIGO_PRODUTO\n----,sap_ausp.ATINN\t\n----,sap_ausp.ATZHL\t\n----,sap_ausp.MAFID\t\n----,sap_ausp.KLART\t\n----,sap_ausp.ATWRT\n----,sap_cawn.ATWRT\n----,sap_cawn.ATINN\n----,concat(sap_cawn.ATINN,sap_cawn.ATZHL) as chavewn\n----,concat(sap_cawnt.ATINN,sap_cawnt.ATZHL) as chavent\n--,sap_cawnt.ATWTB AS DESCRICAO_GRADE\n----into ODS.PRODUTO_GRADE\n--from [cleansing_data].[sap_ausp] as sap_ausp\n--left join [cleansing_data].[sap_cawn] as sap_cawn on sap_ausp.atinn = sap_cawn.atinn\n--left join [cleansing_data].[sap_cawnt]  as sap_cawnt on concat(sap_cawn.ATINN,sap_cawn.ATZHL) =  concat(sap_cawnt.ATINN,sap_cawnt.ATZHL)\n--where sap_ausp.ATINN = '0000000267' AND sap_cawn.ATINN = '0000000267'\n \n --/* CAMPOS DO PLANILHÃO*/\n--ZZMARCADESC =  [MARCA_PARA]\n--DESCRICAO_re_011 = [GENERO_PARA], \n--DESCRICAO_re_012 = [SEGMENTO PARA],\n--ZZESPECIEDESC = [ESPECIE PARA]\n--GRUPO_PRODUTO = [GRUPO DE PRODUTO PARA], \n--SUB_GRUPO_PRODUTO = [SUB GRUPO DE PRODUTO PARA]\n--ZZDESTCONFECD = [DESTINO CONFECCAO PARA]\n--DESCRICAO_GRADE =  [GRADE PARA]\n--DESCRICAO_PERMANENCIA = [PERMANENCIA PARA]\n\n\n\n ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtex_items_cleasing')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT \n[orderId]\n,[uniqueId]\n,[id]\n,[ean]\n,[lockId]\n,[quantity]\n,[seller]\n,[name]\n,[refId]\n,[price]\n,[listPrice]\n,[imageUrl]\n,[brandName]\n,[brandId]\n,[raw_data].[vtex_items].[categoriesIds]\n,(\n    SELECT \n    [namecat]\n    FROM [raw_data].[vtex_items_categories] \n    INNER JOIN [raw_data].[vtex_items]\n    ON \n    [raw_data].[vtex_items].[orderid] = [raw_data].[vtex_items_categories].[orderid]\n    WHERE  [raw_data].[vtex_items_categories].[idcat] = 4\n) as [Categorie_1]\n,(\n    SELECT \n    [namecat]\n    FROM [raw_data].[vtex_items_categories] \n    INNER JOIN [raw_data].[vtex_items]\n    ON \n    [raw_data].[vtex_items].[orderid] = [raw_data].[vtex_items_categories].[orderid]\n    WHERE  [raw_data].[vtex_items_categories].[idcat] = '120' \n) as [Categorie_2]\n,(\n    SELECT \n    [namecat]\n    FROM [raw_data].[vtex_items_categories] \n    INNER JOIN [raw_data].[vtex_items]\n    ON \n    [raw_data].[vtex_items].[orderid] = [raw_data].[vtex_items_categories].[orderid]\n    WHERE  [raw_data].[vtex_items_categories].[idcat] = 140\n) as [Categorie_3]\n \n FROM [raw_data].[vtex_items]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtex_json_download')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "MODELO DIMENSIONAL/vtex"
				},
				"content": {
					"query": "\n\n\n\nurl = \"https://malwee.vtexcommercestable.com.br/api/oms/pvt/orders?f_creationDate=creationDate:[2020-02-02T00:09:00.000Z TO 2020-02-02T23:10:00.000Z]\"\n\nupdate [dbo].[CTR_ADF_API_ENDPOINT] \nset NOM_URL_RELATIVA = 'orders?f_creationDate=creationDate:',\nVAL_PARAMETRO_1 = 'BGSTNGUYXERIIEDBJRZSYUKFBQKUWMSXDYKWMCMYQUIWBNIBKWWHACSHVNSWWZCKMTFKTHOGEACELODNHIKAPKXAGDAZKQCQRXJIHYICHPCAANVHJEONPCUBWFEPHPWO',\nVAL_PARAMETRO_2 = 'vtexappkey-malwee-AHFBTB',\nVAL_PARAMETRO_3 = null,\nVAL_PARAMETRO_4 = NULL\nwhere  COD_ENDPOINT = 4\n\nSELECT CONVERT(varchar(50), DAT_INGESTAO, 127) +'Z',DAT_INGESTAO    FROM [dbo].[CTR_ADF_API_ENDPOINT] where  COD_ENDPOINT = 4\n\n\n2021-03-11T00:00:00.000Z\nSELECT\nCONVERT(VARCHAR,CONVERT(DATE,DAT_INGESTAO)) + 'T00:00:00.000Z' AS DATA_INICIO_ORDER_VTEX ,\nCONVERT(VARCHAR,CONVERT(DATE,DAT_ULTI_PROCESSAMENTO)) + 'T00:00:00.000Z' AS DATA_FINAL_ORDER_VTEX\nFROM [dbo].[CTR_ADF_API_ENDPOINT] where  COD_ENDPOINT = 4\n\n \nSELECT * FROM  [dbo].[CTR_ADF_API_ENDPOINT] where  COD_ENDPOINT = 4\n\n\n\n\nBGSTNGUYXERIIEDBJRZSYUKFBQKUWMSXDYKWMCMYQUIWBNIBKWWHACSHVNSWWZCKMTFKTHOGEACELODNHIKAPKXAGDAZKQCQRXJIHYICHPCAANVHJEONPCUBWFEPHPWO\n\n\n\n\n[dbo].[PADFCredenciaisAPI]  5\n[dbo].[PADFCredenciaisAPI] 4\n[dbo].[PLogADFItemAPI] 4\n\n\n@concat(activity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\n'[',\nactivity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_ORDER_VTEX,\n' TO ',\nactivity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_ORDER_VTEX,\n']')\n\n\n[dbo].[PADFCredenciaisAPI] 4\nGO\n\n[dbo].[PADFDataProcessamentoAPI] 4\nGO\n\n\nurl = \"https://malwee.vtexcommercestable.com.br/api/oms/pvt/orders?f_creationDate=creationDate:[2020-02-02T00:09:00.000Z TO 2020-02-02T23:10:00.000Z]\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\torders?f_creationDate=creationDate:[2021-01-28T00:00:00.000Z TO 2021-03-11T00:00:00.000Z]\n\n\n@toLower(concat(\nactivity('LeCredenciaisOrigem').output.firstRow.NOM_ALIAS_ENDPOINT,\n'_',\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,0,4),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,5,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,8,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,11,2),\nsubstring(activity('LeDataProcessamento').output.firstRow.DAT_HORA_PROCESSAMENTO,14,2),'.json')) \n\n@concat(\nactivity('LeCredenciaisOrigem').output.FirstRow.NOM_URL_RELATIVA,\n'[',\nactivity('LeCredenciaisOrigem').output.FirstRow.DATA_INICIO_ORDER_VTEX,\n' TO ',\nactivity('LeCredenciaisOrigem').output.FirstRow.DATA_FINAL_ORDER_VTEX,\n']')",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexitems')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_items (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[id] varchar(8000),\n\t[ean] varchar(8000),\n\t[lockId] varchar(8000),\n\t[quantity] varchar(8000),\n\t[seller] varchar(8000),\n\t[name] varchar(8000),\n\t[refId] varchar(8000),\n\t[price] varchar(8000),\n\t[listPrice] varchar(8000),\n\t[imageUrl] varchar(8000),\n\t[brandName] varchar(8000),\n\t[brandId] varchar(8000),\n\t[categoriesIds] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Items/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_items\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexitemscategories')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_items_categories (\n\t[orderId] varchar(8000),\n\t[categoriesIds] varchar(8000),\n\t[idcat] varchar(8000),\n\t[namecat] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/ItemsCategories/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_items_categories\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexpayment')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_payment (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[idItem] varchar(8000),\n\t[idpayment] varchar(8000),\n\t[value] varchar(8000),\n\t[installments] varchar(8000),\n\t[referenceValue] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Payment/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_payment\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexpaymentcleasing')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT \n[orderId]\n,[uniqueId]\n,[idItem]\n,[idpayment]\n,[value]\n,[installments]\n,[referenceValue]\n FROM [raw_data].[vtex_payment]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexshipping')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_shipping (\n\t[orderId] varchar(8000),\n\t[uniqueId] varchar(8000),\n\t[iditems] varchar(8000),\n\t[idshipping] varchar(8000),\n\t[addressType] varchar(8000),\n\t[receiverName] varchar(8000),\n\t[addressId] varchar(8000),\n\t[postalCode] varchar(8000),\n\t[city] varchar(8000),\n\t[state] varchar(8000),\n\t[country] varchar(8000),\n\t[street] varchar(8000),\n\t[number] varchar(8000),\n\t[neighborhood] varchar(8000),\n\t[complement] varchar(8000),\n\t[reference] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/Shipping/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_shipping\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexshippingLoginfoDados')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT \n [orderId]\n,[itemIndex]\n,[selectedSla]\n,[lockTTL]\n,[price]\n,[listPrice]\n,[sellingPrice]\n,[deliveryWindow]\n,[deliveryCompany]\n,[shippingEstimate]\n,[shippingEstimateDate]\n FROM [raw_data].[vtex_shipping_loginfo]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexshippingloginfo')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_shipping_loginfo (\n\t[orderId] varchar(8000),\n\t[idshipping] varchar(8000),\n\t[itemIndex] varchar(8000),\n\t[selectedSla] varchar(8000),\n\t[lockTTL] varchar(8000),\n\t[price] varchar(8000),\n\t[listPrice] varchar(8000),\n\t[sellingPrice] varchar(8000),\n\t[deliveryWindow] varchar(8000),\n\t[deliveryCompany] varchar(8000),\n\t[shippingEstimate] varchar(8000),\n\t[shippingEstimateDate] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/ShippingLogisticInfo/2021/*.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_shipping_loginfo\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtexshippingloginfo_ok')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raw_sadevbrdatalakemalwee_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raw_sadevbrdatalakemalwee_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION   = 'https://sadevbrdatalakemalwee.dfs.core.windows.net/raw', \n\t)\nGo\n\nCREATE EXTERNAL TABLE raw_data.vtex_shipping_loginfo (\n\t[orderId] varchar(8000),\n\t[itemIndex] varchar(8000),\n\t[selectedSla] varchar(8000),\n\t[lockTTL] varchar(8000),\n\t[price] varchar(8000),\n\t[listPrice] varchar(8000),\n\t[sellingPrice] varchar(8000),\n\t[deliveryWindow] varchar(8000),\n\t[deliveryCompany] varchar(8000),\n\t[shippingEstimate] varchar(8000),\n\t[shippingEstimateDate] varchar(8000)\n\t)\n\tWITH (\n\tLOCATION = 'brazil/vtex/ShippingLogisticInfo/2021/vtex_shipping_logInfo.parquet',\n\tDATA_SOURCE = [raw_sadevbrdatalakemalwee_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\nSELECT TOP 100 * FROM raw_data.vtex_shipping_loginfo\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vtext_client_cleasing')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT \n [orderId]\n,[email]\n,[firstName]\n,[lastName]\n,[documentType]\n,[document]\n,[phone]\n FROM [raw_data].[vtex_client]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "dwserverless"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwmwe')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"restorePointInTime": "0001-01-01T00:00:00",
				"annotations": []
			},
			"dependsOn": [],
			"location": "brazilsouth"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		}
	]
}