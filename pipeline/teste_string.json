{
	"name": "teste_string",
	"properties": {
		"description": "Modelo de importação de tabelas do ADF a partir de uma tabela de controle com as tabelas a importar, suas origens e colunas.",
		"activities": [
			{
				"name": "LeDataProcessamento",
				"description": "Recupera a data de processamento da tabela de controle",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LimpaTabelaColunas",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[PADFDataProcessamento]",
						"storedProcedureParameters": {
							"COD_TABELA": {
								"type": "int",
								"value": {
									"value": "@pipeline().parameters.ParCodTabela",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_DS_CONTROLE",
						"type": "DatasetReference",
						"parameters": {
							"NomeTabela": "Tabela"
						}
					}
				}
			},
			{
				"name": "LimpaTabelaColunas",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Variaveis-SrvOrigem",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[PADFLimpaTabelaColunas]",
						"storedProcedureParameters": {
							"COD_TABELA": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParCodTabela",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_DS_CONTROLE",
						"type": "DatasetReference",
						"parameters": {
							"NomeTabela": "Tabela"
						}
					}
				}
			},
			{
				"name": "LeCredenciaisDBorigem",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[PADFCredenciais]",
						"storedProcedureParameters": {
							"COD_TABELA": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ParCodTabela",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_DS_CONTROLE",
						"type": "DatasetReference",
						"parameters": {
							"NomeTabela": "Tabela"
						}
					}
				}
			},
			{
				"name": "Variaveis-SrvOrigem",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LeCredenciaisDBorigem",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(1,1)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DataBaseName",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "ServerName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DataBaseName",
								"value": {
									"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_BASE",
									"type": "Expression"
								}
							}
						},
						{
							"name": "UserName",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "DataBaseName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "UserName",
								"value": {
									"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_USUARIO",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Password",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "UserName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Password",
								"value": {
									"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_PASSWORD",
									"type": "Expression"
								}
							}
						},
						{
							"name": "TipoArmazenamento",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Password",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "TipoArmazenamento",
								"value": {
									"value": "@activity('LeCredenciaisDBorigem').output.firstRow.IND_TIPO_ARMAZENAMENTO",
									"type": "Expression"
								}
							}
						},
						{
							"name": "ServerName",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "ServerName",
								"value": {
									"value": "@activity('LeCredenciaisDBorigem').output.firstRow.NOM_SERVIDOR",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SecretNamePassword",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "TipoArmazenamento",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SecretNamePassword",
								"value": {
									"value": "@activity('LeCredenciaisDBorigem').output.firstRow.DESC_SECRET_PWD",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LeDataProcessamento",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[testeunil]",
					"storedProcedureParameters": {
						"contador": {
							"value": {
								"value": "\n@concat(\n'select ',\nactivity('LeDataProcessamento').output.firstRow.DSC_COLUNAS_NAO_SENSIVEIS,\n' from ',\npipeline().parameters.ParNomeSchemaOrigem,\nif(equals(pipeline().parameters.ParNomeSchemaOrigem,''),'','.'),\npipeline().parameters.ParNomeTabelaOrigem,\n' where ',\nactivity('LeDataProcessamento').output.firstRow.NOM_COLUNA_REFERENCIA,\n' >= TO_TIMESTAMP(''',activity('LeDataProcessamento').output.firstRow.DAT_INGESTAO_CIGAM,\n'''DD-MON-YYYY HH24: MI:SS:FF''',\n'''')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQL_CONTROLE",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"ParNomeSchemaOrigem": {
				"type": "String"
			},
			"ParIdPipeline": {
				"type": "String"
			},
			"ParNomeTabelaOrigem": {
				"type": "String"
			},
			"ParNomeSchemaDestino": {
				"type": "string"
			},
			"ParNomeAlias": {
				"type": "string"
			},
			"ParNomeTabelaDestino": {
				"type": "string"
			},
			"ParCodServidor": {
				"type": "int"
			},
			"ParTipoETL": {
				"type": "string"
			},
			"ParIndDestinoDL": {
				"type": "string"
			},
			"ParIndDestinoSQL": {
				"type": "string"
			},
			"ParCodTabela": {
				"type": "int"
			},
			"SourceStore_Location": {
				"type": "string"
			},
			"SourceStore_Directory": {
				"type": "string"
			},
			"DestinationStore_Location": {
				"type": "string"
			},
			"DestinationStore_Directory": {
				"type": "string"
			},
			"ParIndDataCleansing": {
				"type": "string"
			}
		},
		"variables": {
			"nuregistros": {
				"type": "String",
				"defaultValue": "0"
			},
			"receiver": {
				"type": "String"
			},
			"ComandoGeraSelect": {
				"type": "String",
				"defaultValue": ",@coluna\t\tvarchar(max)  select   \t\t@coluna =  \t\t\tcase  \t\t\t\twhen @coluna is null  \t\t\t\t\tThen 'Convert(varchar(max),isnull('+ name  + ',' +\t \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127) then '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t  then '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else '''''' +'))' \t\t\t\t\t\t\t\tend  \t\t\t\tElse \t\t  \t\t\t\t\t @coluna + '+' + 'Convert(varchar(max),isnull('+ name + ','\t+ \t\t\t\t\t\t\t\tcase when xtype in (56,60,62,104,106,127)\tthen '0' +'))' \t\t\t\t\t\t\t\t\t when xtype in (42,61)\t\t\t\t\tthen '''1900-01-01'''+'),121)' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse '''''' +'))' \t\t\t\t\t\t\t\tend \t\t\t\tend from  \t\tsys.syscolumns  where  \t\tid = OBJECT_ID(@Tabela) order by colid  select @coluna = ' SUBSTRING(sys.fn_sqlvarbasetostr(HASHBYTES(''MD5'',' +\t@coluna + ')),3,32) HASH_KEY from ' + @tabela  select @coluna ComandoSelectHash"
			},
			"ComandoSelectHash": {
				"type": "String"
			},
			"DataBaseName": {
				"type": "String"
			},
			"UserName": {
				"type": "String"
			},
			"Password": {
				"type": "String"
			},
			"TipoArmazenamento": {
				"type": "String"
			},
			"ServerName": {
				"type": "String"
			},
			"NomeBucket": {
				"type": "String",
				"defaultValue": "dl"
			},
			"DestinoDL": {
				"type": "String"
			},
			"SecretNamePassword": {
				"type": "String"
			},
			"FileSize": {
				"type": "String",
				"defaultValue": "0"
			},
			"PathRaw": {
				"type": "String"
			},
			"NumFiles": {
				"type": "String",
				"defaultValue": "0"
			},
			"dscParameters": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Modelos/ORACLE"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}